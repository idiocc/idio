<types namespace="_idio">
  <import from="../types/options" ns="_idio" name="CorsOptions" />
  <import from="../types/modules/cors" ns="_goa" name="CorsConfig" />

  <import from="../types/options" ns="_idio" name="StaticOptions" />
  <import from="../types/modules" ns="_idio" name="KoaStaticConfig" />

  <import from="../types/options" ns="_idio" name="CompressOptions" />
  <import from="../types/modules" ns="_goa" name="CompressConfig" />

  <import from="../types/options" ns="_idio" name="SessionOptions" />
  <import from="../types/modules/session" ns="_idio" name="SessionConfig" />

  <import from="../" ns="_goa" name="Middleware" />
  <import from="../" ns="_goa" name="Application" />

  <record name="MiddlewareConfig"
    desc="Middleware configuration for the `idio` server."
    extends="_idio.FnMiddlewareConfig">
    <prop opt type="!_idio.StaticOptions" name="static">
      _Static_ middleware options.
    </prop>
    <prop opt type="!_idio.CompressOptions" name="compress">
      _Compression_ middleware options.
    </prop>
    <prop opt type="!_idio.SessionOptions" name="session">
      _Session_ middleware options.
    </prop>
    <prop opt type="!_idio.CorsOptions" name="cors">
      _CORS_ middleware options.
    </prop>
  </record>

  <!-- Plain config on top of which the idio middleware is installed. -->
  <type type="!Object<string, !_idio.ConfigItem>" name="FnMiddlewareConfig" desc="Middleware Config With Functions."/>

  <type type="!_goa.Middleware|{ use: boolean, middlewareConstructor: !_idio.MiddlewareConstructor, config: !Object }" name="ConfigItem" desc="An item in middleware configuration."/>

  <method name="MiddlewareConstructor" async return="!_goa.Middleware">
    <arg type="!_goa.Application" name="app">The application instance.</arg>
    <arg type="!Object" name="config">The config for the item.</arg>
    <arg type="!Object" name="options">Any other additional middleware options.</arg>
    A function used to create middleware.
  </method>
</types>
