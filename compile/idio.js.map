{
"version":3,
"file":"compile/idio.js",
"lineCount":4581,
"mappings":"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",
"sources":["node_modules/@goa/compose/src/index.js","node_modules/@goa/statuses/src/codes.js","node_modules/@goa/statuses/src/index.js","node_modules/@goa/http-errors/src/index.js","node_modules/assert/index.js","node_modules/tty/index.js","node_modules/util/index.js","node_modules/@idio/debug/src/ms.js","node_modules/@idio/debug/src/bytes.js","node_modules/erte/src/index.js","node_modules/@idio/debug/src/modifiers/f.js","node_modules/@idio/debug/src/node.js","node_modules/@idio/debug/src/common.js","node_modules/@idio/debug/src/index.js","modules/koa-mount/index.js","node_modules/crypto/index.js","node_modules/@goa/cookies/src/keygrip-lib/sign.js","node_modules/@goa/cookies/src/keygrip-lib/ctc.js","node_modules/@goa/cookies/src/Keygrip.js","node_modules/@goa/uuid/src/rng.js","node_modules/@goa/uuid/src/bytes-to-uuid.js","node_modules/@goa/uuid/src/index.js","node_modules/@goa/session/src/lib/session.js","node_modules/@goa/session/src/lib/util.js","node_modules/@goa/session/src/lib/context.js","node_modules/@goa/session/src/index.js","node_modules/@goa/vary/src/index.js","node_modules/@goa/cors/src/index.js","node_modules/stream/index.js","node_modules/events/index.js","node_modules/@idio/dicer/src/streamsearch/index.js","node_modules/@idio/dicer/src/PartStream.js","node_modules/@idio/dicer/src/HeaderParser.js","node_modules/@idio/dicer/src/index.js","node_modules/@goa/busboy/src/utils.js","node_modules/@goa/busboy/src/BusBoy.js","node_modules/@goa/busboy/src/types/multipart.js","node_modules/@goa/busboy/src/types/urlencoded.js","node_modules/@goa/busboy/src/index.js","node_modules/@multipart/append-field/src/lib/parse-path.js","node_modules/@multipart/append-field/src/lib/set-value.js","node_modules/@multipart/append-field/src/index.js","node_modules/@multipart/form-data/src/lib/file-appender.js","node_modules/@multipart/form-data/src/lib/error.js","node_modules/@multipart/form-data/src/lib/counter.js","node_modules/@multipart/form-data/src/lib/make-middleware.js","node_modules/os/index.js","node_modules/path/index.js","node_modules/fs/index.js","node_modules/erotic/src/lib.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/makepromise/src/index.js","node_modules/@wrote/read-dir-structure/src/index.js","node_modules/@wrote/rm/src/index.js","node_modules/@wrote/ensure-path/src/index.js","node_modules/@multipart/form-data/src/storage/disk.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@multipart/form-data/src/storage/memory.js","node_modules/@multipart/form-data/src/index.js","modules/resolve-path/index.js","modules/koa-send/index.js","modules/koa-static/index.js","node_modules/@goa/compress/src/compressible.js","node_modules/@goa/goa/modules/koa-is-json/index.js","node_modules/zlib/index.js","node_modules/@goa/compress/src/bytes/index.js","node_modules/@goa/compress/src/index.js","src/setup-middleware.js","node_modules/@goa/is-generator-function/src/index.js","node_modules/http/index.js","node_modules/@goa/goa/modules/ee-first/index.js","node_modules/@goa/goa/modules/on-finished/index.js","node_modules/@goa/goa/modules/destroy.js","node_modules/@goa/mime-types/src/index.js","node_modules/@goa/content-type/src/index.js","node_modules/@goa/type-is/src/media-typer.js","node_modules/@goa/type-is/src/index.js","node_modules/@goa/goa/modules/content-disposition/index.js","node_modules/@goa/goa/modules/error-inject/index.js","node_modules/@goa/goa/modules/cache-content-type/index.js","node_modules/@goa/goa/modules/escape-html/index.js","node_modules/@goa/cookies/src/Cookie.js","node_modules/@goa/cookies/src/index.js","node_modules/@goa/negotiator/src/lib/charset.js","node_modules/@goa/negotiator/src/lib/encoding.js","node_modules/@goa/negotiator/src/lib/language.js","node_modules/@goa/negotiator/src/lib/mediaType.js","node_modules/@goa/negotiator/src/index.js","node_modules/@goa/accepts/src/index.js","node_modules/@goa/goa/modules/delegates/index.js","node_modules/@goa/goa/modules/http-assert/index.js","node_modules/url/index.js","node_modules/net/index.js","node_modules/querystring/index.js","node_modules/@goa/goa/modules/parseurl/index.js","node_modules/@goa/goa/modules/fresh/index.js","node_modules/@goa/goa/src/request.js","node_modules/@goa/goa/src/context.js","node_modules/@goa/goa/src/response.js","node_modules/@goa/goa/src/application.js","node_modules/@goa/router/src/path-to-regexp.js","node_modules/@goa/router/src/layer.js","node_modules/@goa/router/src/index.js","src/idio.js","src/lib.js","src/start-app.js","src/depack.js"],
"sourcesContent":["/**\n * Compose `middleware` returning a fully valid middleware comprised of all those which are passed.\n * @param {!Array<!Function>} middleware\n */\nexport default function compose(middleware) {\n  if (!Array.isArray(middleware))\n    throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn != 'function')\n      throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  return (context, next) => {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n\n    function dispatch(i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i == middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n\n/**\n * @license MIT\n * (c) dead-horse\n * https://npmjs.org/koa-compose\n */","export default {\n  [100]: 'Continue',\n  [101]: 'Switching Protocols',\n  [102]: 'Processing',\n  [103]: 'Early Hints',\n  [200]: 'OK',\n  [201]: 'Created',\n  [202]: 'Accepted',\n  [203]: 'Non-Authoritative Information',\n  [204]: 'No Content',\n  [205]: 'Reset Content',\n  [206]: 'Partial Content',\n  [207]: 'Multi-Status',\n  [208]: 'Already Reported',\n  [226]: 'IM Used',\n  [300]: 'Multiple Choices',\n  [301]: 'Moved Permanently',\n  [302]: 'Found',\n  [303]: 'See Other',\n  [304]: 'Not Modified',\n  [305]: 'Use Proxy',\n  [306]: '(Unused)',\n  [307]: 'Temporary Redirect',\n  [308]: 'Permanent Redirect',\n  [400]: 'Bad Request',\n  [401]: 'Unauthorized',\n  [402]: 'Payment Required',\n  [403]: 'Forbidden',\n  [404]: 'Not Found',\n  [405]: 'Method Not Allowed',\n  [406]: 'Not Acceptable',\n  [407]: 'Proxy Authentication Required',\n  [408]: 'Request Timeout',\n  [409]: 'Conflict',\n  [410]: 'Gone',\n  [411]: 'Length Required',\n  [412]: 'Precondition Failed',\n  [413]: 'Payload Too Large',\n  [414]: 'URI Too Long',\n  [415]: 'Unsupported Media Type',\n  [416]: 'Range Not Satisfiable',\n  [417]: 'Expectation Failed',\n  [418]: 'I\\'m a teapot',\n  [421]: 'Misdirected Request',\n  [422]: 'Unprocessable Entity',\n  [423]: 'Locked',\n  [424]: 'Failed Dependency',\n  [425]: 'Unordered Collection',\n  [426]: 'Upgrade Required',\n  [428]: 'Precondition Required',\n  [429]: 'Too Many Requests',\n  [431]: 'Request Header Fields Too Large',\n  [451]: 'Unavailable For Legal Reasons',\n  [500]: 'Internal Server Error',\n  [501]: 'Not Implemented',\n  [502]: 'Bad Gateway',\n  [503]: 'Service Unavailable',\n  [504]: 'Gateway Timeout',\n  [505]: 'HTTP Version Not Supported',\n  [506]: 'Variant Also Negotiates',\n  [507]: 'Insufficient Storage',\n  [508]: 'Loop Detected',\n  [509]: 'Bandwidth Limit Exceeded',\n  [510]: 'Not Extended',\n  [511]: 'Network Authentication Required',\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport statusCodes from './codes'\n\n// status code to message map\nexport const STATUS_CODES = statusCodes\n\n// array of status codes\nexport const codes = populateStatusesMap(status, statusCodes)\n\n// status codes for redirects\nexport const redirect = {\n  [300]: true,\n  [301]: true,\n  [302]: true,\n  [303]: true,\n  [305]: true,\n  [307]: true,\n  [308]: true,\n}\n\n// status codes for empty bodies\nexport const empty = {\n  [204]: true,\n  [205]: true,\n  [304]: true,\n}\n\n// status codes for when you should retry the request\nexport const retry = {\n  [502]: true,\n  [503]: true,\n  [504]: true,\n}\n\n/**\n * Populate the statuses map for given codes.\n * @return {!Array<string>}\n * @private\n */\nfunction populateStatusesMap(statuses, allCodes) {\n  const arr = []\n\n  Object.keys(allCodes).forEach((code) => {\n    const message = statusCodes[code]\n    const s = Number(code)\n\n    // Populate properties\n    statuses[s] = message\n    statuses[message] = s\n    statuses[message.toLowerCase()] = s\n\n    // Add to array\n    arr.push(s)\n  })\n\n  return arr\n}\n\n/**\n * @param {string|number} code\n */\nexport default function status(code) {\n  if (typeof code == 'number') {\n    if (!status[code])\n      throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code != 'string')\n    throw new TypeError('code must be a number or string')\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport statuses, { codes } from '@goa/statuses'\n\nconst deprecate = (msg) => {\n  process.emitWarning(msg, 'DeprecationWarning')\n}\n\n/**\n * Get the code class of a status code.\n * @private\n */\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n * @param {...Error|string|number} args\n */\nexport default function createError(...args) {\n  // so much arity going on ~_~\n  let err\n  let msg\n  let status = 500\n  let props = {}\n  for (let i = 0; i < args.length; i++) {\n    let arg = args[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n    case 'string':\n      msg = arg\n      break\n    case 'number':\n      status = arg\n      if (i !== 0) {\n        deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n      }\n      break\n    case 'object':\n      props = arg\n      break\n    }\n  }\n\n  if (typeof status == 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status != 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  const HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (let key in props) {\n    if (key != 'status' && key != 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * @implements {_httpErrors.HttpError}\n */\nexport class HttpError extends Error {\n  constructor(message) {\n    super()\n    this.message = message\n    this.status = null\n    this.statusCode = null\n    this.expose = false\n    this.headers = null\n  }\n  set code(code) {\n    this.status = code\n    this.statusCode = code\n    if (!this.message) this.message = statuses[code]\n  }\n}\n\ncodes.forEach((code) => {\n  let CodeError\n  const name = toIdentifier(statuses[code])\n  const className = name.match(/Error$/) ? name : name + 'Error'\n\n  switch (codeClass(code)) {\n  case 400:\n    CodeError = class ClientError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = true\n      }\n    }\n    break\n  case 500:\n    CodeError = class ServerError extends HttpError {\n      constructor(message) {\n        super(message)\n        this.code = code\n        this.name = className\n        this.expose = false\n      }\n    }\n    break\n  }\n\n  if (CodeError) {\n    // export the constructor\n    createError[code] = CodeError\n    createError[name] = CodeError\n  }\n}, {})\n\n\n\n/**\n * Transform the given string into a JavaScript identifier\n * @param {string} str\n */\nfunction toIdentifier(str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n\n/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */","export default assert\nexport const {\n  AssertionError,\n  deepEqual,\n  deepStrictEqual,\n  doesNotThrow,\n  equal,\n  fail,\n  ifError,\n  notDeepEqual,\n  notDeepStrictEqual,\n  notEqual,\n  notStrictEqual,\n  ok,\n  strictEqual,\n  throws,\n} = assert","export default tty\nexport const {\n  ReadStream,\n  WriteStream,\n  isatty,\n} = tty","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar w = d * 7\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {string|number} val\n * @param {Object} [options]\n */\nexport default function(val, options = {}) {\n  var type = typeof val\n  if (type == 'string' && val.length > 0) {\n    const t = /** @type {string} */ (val)\n    return parse(t)\n  } else if (type == 'number' && isFinite(val)) {\n    const n = /** @type {number} */ (val)\n    return options.long ? fmtLong(n) : fmtShort(n)\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  )\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {string} str\n * @api private\n */\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 100) {\n    return\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  )\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n  case 'years':\n  case 'year':\n  case 'yrs':\n  case 'yr':\n  case 'y':\n    return n * y\n  case 'weeks':\n  case 'week':\n  case 'w':\n    return n * w\n  case 'days':\n  case 'day':\n  case 'd':\n    return n * d\n  case 'hours':\n  case 'hour':\n  case 'hrs':\n  case 'hr':\n  case 'h':\n    return n * h\n  case 'minutes':\n  case 'minute':\n  case 'mins':\n  case 'min':\n  case 'm':\n    return n * m\n  case 'seconds':\n  case 'second':\n  case 'secs':\n  case 'sec':\n  case 's':\n    return n * s\n  case 'milliseconds':\n  case 'millisecond':\n  case 'msecs':\n  case 'msec':\n  case 'ms':\n    return n\n  default:\n    return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day')\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour')\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute')\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second')\n  }\n  return ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')\n}\n\n/**\n * @license\n * Copyright (c) 2016 Zeit, Inc.\n * https://npmjs.org/ms\n */","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  'b':  1,\n  'kb': 1 << 10,\n  'mb': 1 << 20,\n  'gb': 1 << 30,\n  'tb': Math.pow(1024, 4),\n  'pb': Math.pow(1024, 5),\n}\n\nconst parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  const mag = Math.abs(value)\n  const thousandsSeparator = (options && options.thousandsSeparator) || ''\n  const unitSeparator = (options && options.unitSeparator) || ''\n  const decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  const fixedDecimals = Boolean(options && options.fixedDecimals)\n  let unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map['pb']) {\n      unit = 'PB'\n    } else if (mag >= map['tb']) {\n      unit = 'TB'\n    } else if (mag >= map['gb']) {\n      unit = 'GB'\n    } else if (mag >= map['mb']) {\n      unit = 'MB'\n    } else if (mag >= map['kb']) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  const val = value / map[unit.toLowerCase()]\n  let str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val == 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val != 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  const results = parseRegExp.exec(val)\n  let floatValue, unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import { format } from '../bytes'\nimport { c } from 'erte'\n\nexport default {\n  'f': format,\n  'fy'(v) {\n    return c(format(v) || '', 'yellow')\n  },\n  'fr'(v) {\n    return c(format(v) || '', 'red')\n  },\n  'fb'(v) {\n    return c(format(v) || '', 'blue')\n  },\n  'fg'(v) {\n    return c(format(v) || '', 'green')\n  },\n  'fc'(v) { return c(format(v) || '', 'cyan') },\n  'fm'(v) { return c(format(v) || '', 'magenta') },\n}\n","import tty from 'tty'\nimport { inspect, format } from 'util'\nimport ms from './ms'\nimport f from './modifiers/f'\n\nconst colors = [6, 2, 3, 4, 5, 1]\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\nconst inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key)\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, (_, k) => {\n      return k.toUpperCase()\n    })\n\n  // Coerce string value into JS value\n  let val = process.env[key]\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false\n  } else if (val === 'null') {\n    val = null\n  } else {\n    val = Number(val)\n  }\n\n  obj[prop] = val\n  return obj\n}, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\nfunction useColors() {\n  return 'colors' in inspectOpts ?\n    Boolean(inspectOpts['colors']) :\n    tty.isatty(process.stderr.fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n * @param {!Array} args\n * @this {_debug.DebugFunction}\n */\nfunction formatArgs(args) {\n  const { namespace, useColors: uc, color, diff } = this\n\n  if (uc) {\n    const c = color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${namespace} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(colorCode + 'm+' + ms(diff) + '\\u001B[0m')\n  } else {\n    args[0] = getDate() + namespace + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (inspectOpts['hideDate']) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\nfunction log(...args) {\n  return process.stderr.write(format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env['DEBUG'] = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env['DEBUG']\n  }\n}\n\n/**\n * Load `namespaces`.\n * @return {string} returns the previously persisted debug modes\n */\n\nfunction load() {\n  return process.env['DEBUG']\n}\n\n/**\n * Init logic for `debug` instances.\n * @param {_debug.DebugFunction} debug\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = { ...inspectOpts }\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst o = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n    .replace(/\\s*\\n\\s*/g, ' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst O = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n}\n\nconst formatters = { 'o': o, 'O': O, ...f }\n\n/** @type {_debug.Env} */\nconst NodeEnv = {\n  init,\n  log,\n  formatArgs,\n  save,\n  load,\n  useColors,\n  colors,\n  inspectOpts,\n  formatters,\n}\n\nexport default NodeEnv\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Env} _debug.Env\n */","class Debug {\n  /**\n   * Create a debugger with the given `namespace`.\n   * @param {_debug.Env} env\n   */\n  constructor(env) {\n    this.colors = env.colors\n    this.formatArgs = env.formatArgs\n    this.inspectOpts = env.inspectOpts\n    this.log = env.log\n    this.save = env.save\n    this.init = env.init\n\n    this.formatters = env.formatters || {}\n\n    /**\n     * Active `debug` instances.\n     * @type {Array<_debug.DebugFunction>}\n     */\n    this.instances = []\n    /**\n\t   * The currently active debug mode names.\n     * @type {Array<!RegExp>}\n\t   */\n    this.names = []\n    /**\n\t   * The currently active names to skip.\n     * @type {Array<!RegExp>}\n\t   */\n    this.skips = []\n  }\n  createDebug() {\n    const debug = this.getDebug()\n\n    // env-specific initialization logic for debug instances\n    if (typeof this.init == 'function') {\n      this.init(debug)\n    }\n\n    this.instances.push(debug)\n    return debug\n  }\n\n  /**\n   * @returns {_debug.DebugFunction}\n   */\n  getDebug() {\n    const formatters = this.formatters\n    const formatArgs = this.formatArgs\n    const log = this.log // comes from the env\n\n    /** @type {number} */\n    let prevTime\n    /** @type {_debug.DebugFunction} */\n    function debug(...args) {\n      if (!debug.enabled) return\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const time = curr - (prevTime || curr)\n      debug.diff = time\n      debug.prev = prevTime\n      debug.curr = curr\n      prevTime = curr\n\n      args[0] = coerce(args[0])\n\n      if (typeof args[0] != 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%]+)/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match == '%%') {\n          return match\n        }\n        index++\n        const formatter = formatters[format]\n        if (formatter) {\n          const val = args[index]\n          match = formatter.call(debug, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      formatArgs.call(debug, args)\n\n      const logFn = debug.log || log\n      logFn.apply(debug, args)\n    }\n    return debug\n  }\n  /**\n\t * Selects a color for a debug namespace\n\t * @param {string} namespace The namespace string for the for the debug instance to be colored\n\t * @return {number|string} An ANSI color code for the given namespace\n\t */\n  selectColor(namespace) {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    return this.colors[Math.abs(hash) % this.colors.length]\n  }\n  /**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {string} namespaces\n\t * @api public\n\t */\n  enable(namespaces) {\n    this.save(namespaces)\n\n    this.names = []\n    this.skips = []\n\n    let i\n    const split = (typeof namespaces == 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] == '-') {\n        this.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        this.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n\n    for (i = 0; i < this.instances.length; i++) {\n      const instance = this.instances[i]\n      instance.enabled = this.enabled(instance.namespace)\n    }\n  }\n  destroy(debug) {\n    const index = this.instances.indexOf(debug)\n    if (index !== -1) {\n      this.instances.splice(index, 1)\n      return true\n    }\n    return false\n  }\n  /**\n\t * Disable debug output.\n\t * @return {string} namespaces\n\t */\n  disable() {\n    const namespaces = [\n      ...this.names.map(toNamespace),\n      ...this.skips.map(toNamespace).map(namespace => '-' + namespace),\n    ].join(',')\n    this.enable('')\n    return namespaces\n  }\n  /**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n  enabled(name) {\n    if (name[name.length - 1] == '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = this.skips.length; i < len; i++) {\n      if (this.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = this.names.length; i < len; i++) {\n      if (this.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * @param {string} namespace\n * @this {_debug.DebugContext}\n */\nfunction extend(namespace, delimiter) {\n\n}\n\n/**\n * This is the common logic for both the Node.js and web browser implementations of `debug()`.\n * @param {_debug.Env} env\n */\nexport default function setup(env) {\n  const instance = new Debug(env)\n\n  /**\n   * Creates a function to log messages.\n   * @param {string} namespace\n   */\n  function createDebug(namespace) {\n    const debug = instance.createDebug()\n\n    debug.namespace = namespace\n    debug.useColors = env.useColors()\n    debug.enabled = instance.enabled(namespace)\n    debug.color = instance.selectColor(namespace)\n    /** @this {_debug.DebugContext} */\n    debug.destroy = function() {\n      instance.destroy(this)\n    }\n    /** @this {_debug.DebugContext} */\n    debug.extend = function(ns, delimiter) {\n      const newDebug = (this.namespace + (delimiter === undefined ? ':' : delimiter) + ns)\n      newDebug.log = this.log // don't know why this is here\n      return newDebug\n    }\n\n    instance.enable(env.load())\n\n    return debug\n  }\n  return createDebug\n}\n\n/**\n * Convert regexp to namespace.\n *\n * @param {!RegExp} regexp\n * @return {string} namespace\n * @private\n */\nfunction toNamespace(regexp) {\n  return regexp.toString()\n    .substring(2, regexp.toString().length - 2)\n    .replace(/\\.\\*\\?$/, '*')\n}\n\n/**\n * Coerce `val`.\n * @param {!Error|*} val\n * @return {*}\n * @private\n */\nfunction coerce(val) {\n  if (val instanceof Error) {\n    return val.stack || val.message\n  }\n  return val\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Env} _debug.Env\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugContext} _debug.DebugContext\n */","import NodeEnv from './node'\nimport setup from './common'\n\n/**\n * Creates a function to log messages.\n * @param {string} namespace\n */\nexport default function(namespace) {\n  if (!namespace) throw new Error('To use debug, pass the namespace.')\n  const node = setup(NodeEnv)\n  const debug = node(namespace)\n  return debug\n}","import { equal } from 'assert'\nimport Debug from '@idio/debug'\nimport compose from '@goa/compose'\n\nconst debug = Debug('koa-mount')\n\n/**\n * Mount `app` with `prefix`, `app` may be a Koa application or middleware function.\n * @param {string|!_goa.Application|!_goa.Middleware} prefix prefix, app, or middleware\n * @param {!_goa.Application|!_goa.Middleware} app app or middleware\n */\nexport default function mount(prefix, app) {\n  if (typeof prefix != 'string') {\n    app = prefix\n    prefix = '/'\n  }\n\n  equal(prefix[0], '/', 'mount path must begin with \"/\"')\n\n  // compose\n  const downstream = app.middleware\n    ? compose(app.middleware)\n    : app\n\n  // don't need to do mounting here\n  if (prefix == '/') return downstream\n\n  const trailingSlash = prefix.slice(-1) == '/'\n\n  const name = app.name || 'unnamed'\n  debug('mount %s %s', prefix, name)\n\n  /**\n   * @type {!_goa.Middleware}\n   */\n  async function middleware(ctx, upstream) {\n    const prev = ctx.path\n    const newPath = match(prev)\n    debug('mount %s %s -> %s', prefix, name, newPath)\n    if (!newPath) return await upstream()\n\n    ctx['mountPath'] = prefix\n    ctx.path = /** @type {string} */ (newPath)\n    debug('enter %s -> %s', prev, ctx.path)\n\n    await downstream(ctx, async () => {\n      ctx.path = prev\n      await upstream()\n      ctx.path = /** @type {string} */ (newPath)\n    })\n\n    debug('leave %s -> %s', prev, ctx.path)\n    ctx.path = prev\n  }\n\n  /**\n   * Check if `prefix` satisfies a `path`.\n   * Returns the new path.\n   *\n   * match('/images/', '/lkajsldkjf') => false\n   * match('/images', '/images') => /\n   * match('/images/', '/images') => false\n   * match('/images/', '/images/asdf') => /asdf\n   *\n   * @param {string} path\n   * @return {string|boolean}\n   */\n  function match (path) {\n    const p = /** @type {string} */ (prefix)\n    // does not match prefix at all\n    if (path.indexOf(p) != 0) return false\n\n    const newPath = path.replace(p, '') || '/'\n    if (trailingSlash) return newPath\n\n    // `/mount` does not match `/mountlkjalskjdf`\n    if (newPath[0] != '/') return false\n    return newPath\n  }\n  return middleware\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/goa').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/goa').Middleware} _goa.Middleware\n */","export default _crypto\nexport const {\n  Certificate,\n  Cipher,\n  Credentials,\n  DEFAULT_ENCODING,\n  Decipher,\n  DiffieHellman,\n  ECDH,\n  Hash,\n  Hmac,\n  Verify,\n  createCipher,\n  createCipheriv,\n  createCredentials,\n  createDecipher,\n  createDecipheriv,\n  createDiffieHellman,\n  createECDH,\n  createHash,\n  createHmac,\n  createSign,\n  createVerify,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getHashes,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  pseudoRandomBytes,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  timingSafeEqual,\n} = _crypto","import { createHmac } from 'crypto'\n\nexport function sign(data, algorithm, key, encoding) {\n  return createHmac(algorithm, key)\n    .update(data).digest(encoding)\n    .replace(/\\/|\\+|=/g, (x) => {\n      return ({ '/': '_', '+': '-', '=': '' })[x]\n    })\n}","// http://codahale.com/a-lesson-in-timing-attacks/\nexport const constantTimeCompare = function(val1, val2){\n  if (val1 == null && val2 != null){\n    return false\n  } else if (val2 == null && val1 != null){\n    return false\n  } else if (val1 == null && val2 == null){\n    return true\n  }\n\n  if (val1.length != val2.length){\n    return false\n  }\n\n  var result = 0\n\n  for (var i = 0; i < val1.length; i++) {\n    result |= val1.charCodeAt(i) ^ val2.charCodeAt(i) //Don't short circuit\n  }\n\n  return result === 0\n}\n","import { sign } from './keygrip-lib/sign'\nimport { constantTimeCompare } from './keygrip-lib/ctc'\n\n/* start example */\n/**\n * @implements {_goa.Keygrip}\n */\nexport default class Keygrip {\n  constructor(keys, algorithm = 'sha1', encoding = 'base64') {\n    if (!keys || !(0 in keys)) {\n      throw new Error('Keys must be provided.')\n    }\n    this.algorithm = algorithm\n    this.encoding = encoding\n    this.keys = keys\n  }\n  sign(data) {\n    return sign(data, this.algorithm, this.keys[0], this.encoding)\n  }\n  verify(data, digest) {\n    return this.index(data, digest) > -1\n  }\n  index(data, digest) {\n    for (let i = 0, l = this.keys.length; i < l; i++) {\n      const sig = sign(data, this.algorithm, this.keys[i], this.encoding)\n      if (constantTimeCompare(digest, sig)) return i\n    }\n\n    return -1\n  }\n}\n/* end example */\n\n/*!\n * keygrip\n * Copyright(c) 2011-2014 Jed Schmidt\n * MIT Licensed\n */\n","import { randomBytes } from 'crypto'\n\nexport default function nodeRNG() {\n  return randomBytes(16)\n}","\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = []\nfor (var j = 0; j < 256; ++j) {\n  byteToHex[j] = (j + 0x100).toString(16).substr(1)\n}\n\nexport default function bytesToUuid(buf, offset = 0) {\n  var i = offset\n  var bth = byteToHex\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]]).join('')\n}","import rng from './rng'\nimport bytesToUuid from './bytes-to-uuid'\n\n/**\n * Generate and return a RFC4122 v4 UUID.\n * @param {_goa.UuidConfig|string} options Options, or \"binary\" string.\n * @param {Array|Buffer} [buffer] Array or buffer where UUID bytes are to be written.\n\n * @param {number} [offset] Starting index in `buffer` at which to begin writing.\n */\nexport default function v4(options = {}, buffer = null, offset = 0) {\n  var i = buffer && offset\n\n  if (typeof options == 'string') {\n    buffer = options == 'binary' ? new Array(16) : null\n    options = null\n  }\n  const { random, rng: rngFn = rng } = /** @type {_goa.UuidConfig} */ (options)\n\n  const rnds = random || rngFn()\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40\n  rnds[8] = (rnds[8] & 0x3f) | 0x80\n\n  // Copy bytes to buffer, if provided\n  if (buffer) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buffer[i + ii] = rnds[ii]\n    }\n  }\n\n  return buffer || bytesToUuid(rnds)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('./types').UuidConfig} _goa.UuidConfig\n */","/**\n * Session model.\n * @implements {_idio.KoaSession}\n */\nexport default class Session {\n  /**\n   * Session constructor.\n   * @param {_idio.KoaContextSession} sessionContext\n   * @param {?{ _maxAge: (number|undefined), _session: (boolean|undefined) }} [obj]\n   */\n  constructor(sessionContext, obj) {\n    /**\n     * @type {number}\n     */\n    this._expire = 0\n    /**\n     * Does the session need saving.\n     * @type {boolean}\n     */\n    this._requireSave = false\n    this._sessCtx = sessionContext\n    this._ctx = sessionContext.ctx\n    if (!obj) {\n      this.isNew = true\n    } else {\n      for (const k in obj) {\n        // restore maxAge from store\n        if (k == '_maxAge') this._ctx.sessionOptions.maxAge = obj._maxAge\n        else if (k == '_session') this._ctx.sessionOptions.maxAge = 'session'\n        else {\n          /** @suppress {checkTypes} */\n          this[k] = obj[k]\n        }\n      }\n    }\n  }\n\n  /**\n   * JSON representation of the session.\n   * @return {!Object}\n   */\n  toJSON() {\n    const obj = {}\n\n    Object.keys(this).forEach(key => {\n      if (key == 'isNew') return\n      if (key[0] == '_') return\n      /**\n       * @suppress {checkTypes}\n       */\n      obj[key] = this[key]\n    })\n\n    return obj\n  }\n\n  /**\n   * Alias to `toJSON`.\n   */\n  inspect() {\n    return this.toJSON()\n  }\n\n  /**\n   * Return how many values there are in the session object.\n   * Used to see if it's \"populated\".\n   */\n  get length() {\n    return Object.keys(this.toJSON()).length\n  }\n\n  /**\n   * Populated flag, which is just a boolean alias of .length.\n   */\n  get populated() {\n    return !!this.length\n  }\n\n  /**\n   * Get session maxAge.\n   */\n  get maxAge() {\n    return /** @type {string|number} */ (this._ctx.sessionOptions.maxAge)\n  }\n\n  /**\n   * Set session maxAge.\n   * @param {number|string} val\n   */\n  set maxAge(val) {\n    this._ctx.sessionOptions.maxAge = val\n    // maxAge changed, must save to cookie and store\n    this._requireSave = true\n  }\n\n  /**\n   * Save this session no matter whether it is populated.\n   */\n  save() {\n    this._requireSave = true\n  }\n\n  /**\n   * Commit this session's headers if autoCommit is set to false.\n   */\n  async manuallyCommit() {\n    await this._sessCtx.commit()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').KoaContextSession} _idio.KoaContextSession\n */","// import crc32 from './crc'\n\n/**\n * Decode the base64 cookie value to an object.\n * @param {string} string\n */\nexport function decode(string) {\n  const body = Buffer.from(string, 'base64').toString('utf8')\n  const json = JSON.parse(body)\n  return json\n}\n\n/**\n * Encode an object into a base64-encoded JSON string.\n * @param {*} body\n */\nexport function encode(body) {\n  body = JSON.stringify(body)\n  return Buffer.from(body).toString('base64')\n}\n\nexport function hash(sess) {\n  return JSON.stringify(sess)\n}","import Debug from '@idio/debug'\nimport Session from './session'\nimport { hash } from './util'\n\nconst debug = Debug('koa-session:context')\n\nexport const ONE_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @implements {_idio.KoaContextSession}\n */\nexport default class ContextSession {\n  /**\n   * context session constructor\n   * @param {!_idio.Context} ctx\n   * @param {!_idio.SessionConfig} [opts] Configuration passed to `koa-session`.\n   */\n  constructor(ctx, opts = {}) {\n    this.ctx = ctx\n    this.app = ctx.app\n    this.opts = { ...opts }\n    this.store = opts.ContextStore ? new opts.ContextStore(ctx) : opts.store\n    /** @type {Session|undefined} */\n    this.session = undefined\n    /** @type {string|undefined} */\n    this.externalKey = undefined\n    /** @type {number|undefined} */\n    this.prevHash = undefined\n  }\n\n  /**\n   * Internal logic of `ctx.session`\n   */\n  get() {\n    const { session, store } = this\n    // already retrieved\n    if (session) return session\n    // unset\n    if (session === null) return null\n\n    // cookie session store\n    if (!store) this.initFromCookie()\n    return this.session\n  }\n\n  /**\n   * internal logic of `ctx.session=`\n   * @param {Object} val session object\n   */\n  set(val) {\n    if (val === null) {\n      this.session = null\n      return\n    }\n    if (typeof val == 'object') {\n      // use the original `externalKey` if exists to avoid waste storage\n      this.create(val, this.externalKey)\n      return\n    }\n    throw new Error('this.session can only be set as null or an object.')\n  }\n\n  /**\n   * Init session from external store. Will be called in the front of session middleware.\n   */\n  async initFromExternal() {\n    debug('init from external')\n    const { ctx, opts } = this\n\n    let externalKey\n    if (opts.externalKey) {\n      externalKey = opts.externalKey.get(ctx)\n      debug('get external key from custom %s', externalKey)\n    } else {\n      externalKey = ctx.cookies.get(/** @type {string} */ (opts.key), /** @type {{signed:boolean}} */(opts))\n      debug('get external key from cookie %s', externalKey)\n    }\n\n\n    if (!externalKey) {\n      // create a new `externalKey`\n      this.create()\n      return\n    }\n\n    const json = await this.store.get(externalKey, /** @type {string|number} */ (opts.maxAge), { rolling: opts.rolling || false })\n    if (!this.valid(json, externalKey)) {\n      // create a new `externalKey`\n      this.create()\n      return\n    }\n\n    // create with original `externalKey`\n    this.create(json, externalKey)\n    this.prevHash = hash(this.session.toJSON())\n  }\n\n  /**\n   * Init session from cookie.\n   * @api private\n   */\n  initFromCookie() {\n    debug('init from cookie')\n    const { ctx, opts } = this\n\n    const cookie = ctx.cookies.get(/** @type {string} */ (opts.key), /** @type {{signed:boolean}} */ (opts))\n    if (!cookie) {\n      this.create()\n      return\n    }\n\n    let json\n    debug('parse %s', cookie)\n    try {\n      json = opts.decode(cookie)\n    } catch (err) {\n      // backwards compatibility:\n      // create a new session if parsing fails.\n      // new Buffer(string, 'base64') does not seem to crash\n      // when `string` is not base64-encoded.\n      // but `JSON.parse(string)` will crash.\n      debug('decode %j error: %s', cookie, err)\n      if (!(err instanceof SyntaxError)) {\n        // clean this cookie to ensure next request won't throw again\n        ctx.cookies.set(/** @type {string} */ (opts.key), '', /** @type {!_goa.CookieSetOptions} */ (opts))\n        // ctx.onerror will unset all headers, and set those specified in err\n        err.headers = {\n          'set-cookie': ctx.response.get('set-cookie'),\n        }\n        throw err\n      }\n      this.create()\n      return\n    }\n\n    debug('parsed %j', json)\n\n    if (!this.valid(json)) {\n      this.create()\n      return\n    }\n\n    // support access `ctx.session` before session middleware\n    this.create(json)\n    this.prevHash = hash(this.session.toJSON())\n  }\n\n  /**\n   * Verify session(expired or )\n   * @param {Object} value session object\n   * @param {*} [key] session externalKey(optional)\n   */\n  valid(value, key) {\n    const { ctx } = this\n    if (!value) {\n      this.emit('missed', { key, value, ctx })\n      return false\n    }\n\n    if (value._expire && value._expire < Date.now()) {\n      debug('expired session')\n      this.emit('expired', { key, value, ctx })\n      return false\n    }\n\n    const valid = this.opts.valid\n    if (typeof valid == 'function' && !valid(ctx, value)) {\n      // valid session value fail, ignore this session\n      debug('invalid session')\n      this.emit('invalid', { key, value, ctx })\n      return false\n    }\n    return true\n  }\n\n  /**\n   * @param {string} event event name\n   * @param {*} data event data\n   * @api private\n   */\n  emit(event, data) {\n    setImmediate(() => {\n      this.app.emit(`session:${event}`, data)\n    })\n  }\n\n  /**\n   * Create a new session and attach to ctx.sess\n   * @param {Object} [val] session data\n   * @param {string} [externalKey] session external key\n   */\n  create(val, externalKey) {\n    debug('create session with val: %j externalKey: %s', val, externalKey)\n    if (this.store) this.externalKey = externalKey || this.opts.genid && this.opts.genid(this.ctx)\n    this.session = new Session(this, val)\n  }\n\n  /**\n   * Commit the session changes or removal.\n   *\n   * @api public\n   */\n  async commit() {\n    const { session, opts: { beforeSave }, ctx } = this\n\n    // not accessed\n    if (undefined === session) return\n\n    // removed\n    if (session === null) {\n      await this.remove()\n      return\n    }\n\n    const reason = this._shouldSaveSession()\n    debug('should save session: %s', reason)\n    if (!reason) return\n\n    if (typeof beforeSave == 'function') {\n      debug('before save')\n      beforeSave(ctx, session)\n    }\n    const changed = reason == 'changed'\n    await this.save(changed)\n  }\n\n  _shouldSaveSession() {\n    const { prevHash, session } = this\n\n    // force save session when `session._requireSave` set\n    if (session._requireSave) return 'force'\n\n    // do nothing if new and not populated\n    const json = session.toJSON()\n    if (!prevHash && !Object.keys(json).length) return ''\n\n    // save if session changed\n    const changed = prevHash !== hash(json)\n    if (changed) return 'changed'\n\n    // save if opts.rolling set\n    if (this.opts.rolling) return 'rolling'\n\n    // save if opts.renew and session will expired\n    if (this.opts.renew) {\n      const expire = session._expire\n      const maxAge = session.maxAge\n      // renew when session will expired in maxAge / 2\n      if (expire && maxAge && expire - Date.now() < maxAge / 2) return 'renew'\n    }\n\n    return ''\n  }\n\n  /**\n   * Remove session by calling `.set` on the cookies.\n   * @api private\n   */\n  async remove() {\n    const { opts: { key }, ctx, externalKey, store } = this\n\n    if (externalKey) await store.destroy(externalKey)\n    ctx.cookies.set(/** @type {string} */ (key), '', /** @type {!_goa.CookieSetOptions} */ (this.opts))\n  }\n\n  /**\n   * Save session. Called by the `commit` method.\n   * @param {boolean} changed\n   * @api private\n   */\n  async save(changed) {\n    const { opts: { key, rolling = false, encode, externalKey: optsExternalKey }, externalKey } = this\n    let { opts: { maxAge = ONE_DAY } } = this\n    let json = this.session.toJSON()\n    // set expire for check\n    if (maxAge == 'session') {\n      // do not set _expire in json if maxAge is set to 'session'\n      // also delete maxAge from options\n      this.opts.maxAge = undefined\n      json['_session'] = true\n    } else {\n      // set expire for check\n      json._expire = maxAge + Date.now()\n      json['_maxAge'] = maxAge\n    }\n\n    // save to external store\n    if (externalKey) {\n      debug('save %j to external key %s', json, externalKey)\n      if (typeof maxAge == 'number') {\n        // ensure store expired after cookie\n        maxAge += 10000\n      }\n      await this.store.set(externalKey, json, maxAge, {\n        changed,\n        rolling,\n      })\n      if (optsExternalKey) {\n        optsExternalKey.set(this.ctx, externalKey)\n      } else {\n        this.ctx.cookies.set(/** @type {string} */ (key), externalKey, /** @type {!_goa.CookieSetOptions} */ (this.opts))\n      }\n      return\n    }\n\n    // save to cookie\n    debug('save %j to cookie', json)\n    json = encode(json)\n    debug('save %s', json)\n\n    this.ctx.cookies.set(/** @type {string} */ (key), json, /** @type {!_goa.CookieSetOptions} */ (this.opts))\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').SessionConfig} _idio.SessionConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/cookies').CookieSetOptions} _goa.CookieSetOptions\n */","import Debug from '@idio/debug'\nimport v4 from '@goa/uuid'\nimport assert from 'assert'\nimport ContextSession, { ONE_DAY } from './lib/context'\nimport { encode, decode } from './lib/util'\n\nconst debug = Debug('koa-session')\n\nconst CONTEXT_SESSION = Symbol('context#contextSession')\nconst _CONTEXT_SESSION = Symbol('context#_contextSession')\n\n/**\n * @license\n * MIT https://github.com/miguelmota/is-class\n */\nfunction isClass(fn) {\n  return (typeof fn == 'function' &&\n    (/^class[\\s{]/.test(fn.toString()) ||\n      (/classCallCheck\\(/.test(fnBody(fn)))) // babel.js\n  )\n}\nfunction fnBody(fn) {\n  return fn.toString().replace(/^[^{]*{\\s*/,'').replace(/\\s*}[^}]*$/,'')\n}\n\nconst isFunction = fn => typeof fn == 'function'\n\n/**\n * @type {_idio.session}\n */\nfunction Session(opts = {}) {\n  formatOpts(opts)\n\n  /**\n   * @type {!_idio.Middleware}\n   */\n  async function session(ctx, next) {\n    const sess = extendContext(ctx, /** @type {!_idio.SessionConfig} */ (opts))\n\n    if (sess.store) await sess.initFromExternal()\n    try {\n      await next()\n    } finally {\n      if (opts.autoCommit) {\n        await sess.commit()\n      }\n    }\n  }\n  return /** @type {!_goa.Middleware} */ (session)\n}\n\nexport default Session\n\n/**\n * format and check session options\n * @param {!_idio.SessionConfig} [opts] Configuration passed to `koa-session`.\n * @private\n */\nfunction formatOpts(opts = {}) {\n  opts.key = opts.key || 'koa:sess'\n  opts.maxAge = opts.maxAge || ONE_DAY\n\n  // defaults\n  if (opts.overwrite == null) opts.overwrite = true\n  if (opts.httpOnly == null) opts.httpOnly = true\n  if (opts.signed == null) opts.signed = true\n  if (opts.autoCommit == null) opts.autoCommit = true\n\n  debug('session options %j', opts)\n\n  // setup encoding/decoding\n  if (typeof opts.encode != 'function') {\n    opts.encode = encode\n  }\n  if (typeof opts.decode != 'function') {\n    opts.decode = decode\n  }\n\n  const store = opts.store\n  if (store) {\n    assert(isFunction(store.get), 'store.get must be function')\n    assert(isFunction(store.set), 'store.set must be function')\n    assert(isFunction(store.destroy), 'store.destroy must be function')\n  }\n\n  const externalKey = opts.externalKey\n  if (externalKey) {\n    assert(isFunction(externalKey.get), 'externalKey.get must be function')\n    assert(isFunction(externalKey.set), 'externalKey.set must be function')\n  }\n\n  const ContextStore = opts.ContextStore\n  if (ContextStore) {\n    assert(isClass(ContextStore), 'ContextStore must be a class')\n    assert(isFunction(ContextStore.prototype.get), 'ContextStore.prototype.get must be function')\n    assert(isFunction(ContextStore.prototype.set), 'ContextStore.prototype.set must be function')\n    assert(isFunction(ContextStore.prototype.destroy), 'ContextStore.prototype.destroy must be function')\n  }\n\n  if (!opts.genid) {\n    if (opts.prefix) opts.genid = () => `${opts.prefix}${v4()}`\n    else opts.genid = v4\n  }\n}\n\n/**\n * Extend context prototype, add session properties\n * @param {!_idio.Context} context Idio's context prototype.\n * @param {!_idio.SessionConfig} opts Configuration passed to `koa-session`.\n */\nfunction extendContext(context, opts) {\n  if (context.hasOwnProperty(CONTEXT_SESSION)) {\n    return\n  }\n  Object.defineProperties(context, {\n    session: {\n      get() {\n        return sessionContext.get()\n      },\n      set(val) {\n        sessionContext.set(val)\n      },\n      configurable: true,\n    },\n    sessionOptions: {\n      get() {\n        return sessionContext.opts\n      },\n    },\n  })\n  const sessionContext = new ContextSession(context, opts)\n  return sessionContext\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Context} _idio.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Middleware} _idio.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').SessionConfig} _idio.SessionConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').session} _idio.session\n */","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nconst FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n * @param {string} header\n * @param {string|!Array<string>} field\n */\nexport function append(header, field) {\n  if (typeof header != 'string')\n    throw new TypeError('header argument is required')\n\n  if (!field)\n    throw new TypeError('field argument is required')\n\n  // get fields array\n  const fields = !Array.isArray(field) ? parse(`${field}`) : field\n\n  // assert on invalid field names\n  for (let j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header == '*') return header\n\n  // enumerate current values\n  var val = header\n  const vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.includes('*') || vals.includes('*'))\n    return '*'\n\n  for (let i = 0; i < fields.length; i++) {\n    const fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (!vals.includes(fld)) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n * @param {string} header\n */\nfunction parse(header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n    case 0x20: /*   */\n      if (start == end) {\n        start = end = i + 1\n      }\n      break\n    case 0x2c: /* , */\n      list.push(header.substring(start, end))\n      start = end = i + 1\n      break\n    default:\n      end = i + 1\n      break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {http.ServerResponse} res\n * @param {string|!Array<string>} field\n */\nexport default function vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  let val = res.getHeader('Vary') || ''\n  const header = Array.isArray(val)\n    ? val.join(', ')\n    : `${val}`\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n","import { append } from '@goa/vary'\n\n/**\n * @type {_goa.cors}\n */\nfunction Cors(config = {}) {\n  let {\n    allowMethods = 'GET,HEAD,PUT,POST,DELETE,PATCH',\n    exposeHeaders,\n    allowHeaders,\n    maxAge,\n    credentials = false,\n    keepHeadersOnError = true,\n    origin: Origin,\n  } = config\n\n  if (Array.isArray(allowMethods))\n    allowMethods = allowMethods.join(',')\n\n  if (Array.isArray(exposeHeaders))\n    exposeHeaders = exposeHeaders.join(',')\n\n  if (Array.isArray(allowHeaders))\n    allowHeaders = allowHeaders.join(',')\n\n  if (maxAge) maxAge = `${maxAge}`\n\n  /**\n   * @type {!_goa.Middleware}\n   */\n  async function cors(ctx, next) {\n    // If the Origin header is not present terminate this set of steps.\n    // The request is outside the scope of this specification.\n    const requestOrigin = ctx.get('Origin')\n\n    // Always set Vary header\n    // https://github.com/rs/cors/issues/10\n    ctx.vary('Origin')\n\n    if (!requestOrigin) return await next()\n\n    let origin\n    if (typeof Origin === 'function') {\n      origin = Origin(ctx)\n      if (origin instanceof Promise) origin = await origin\n      if (!origin) return await next()\n    } else {\n      origin = Origin || requestOrigin\n    }\n\n    const headersSet = {}\n\n    function set(key, value) {\n      ctx.set(key, value)\n      headersSet[key] = value\n    }\n\n    if (ctx.method != 'OPTIONS') {\n      // Simple Cross-Origin Request, Actual Request, and Redirects\n      set('Access-Control-Allow-Origin', origin)\n\n      if (credentials)\n        set('Access-Control-Allow-Credentials', 'true')\n\n      if (exposeHeaders)\n        set('Access-Control-Expose-Headers', exposeHeaders)\n\n      if (!keepHeadersOnError) {\n        return await next()\n      }\n      try {\n        return await next()\n      } catch (err) {\n        const errHeadersSet = err['headers'] || {}\n        const varyWithOrigin = append(errHeadersSet['vary'] || errHeadersSet['Vary'] || '', 'Origin')\n        delete errHeadersSet.Vary\n\n        err['headers'] = Object.assign({}, errHeadersSet, headersSet, { 'vary': varyWithOrigin })\n\n        throw err\n      }\n    } else {\n      // Preflight Request\n\n      // If there is no Access-Control-Request-Method header or if parsing failed,\n      // do not set any additional headers and terminate this set of steps.\n      // The request is outside the scope of this specification.\n      if (!ctx.get('Access-Control-Request-Method')) {\n        // this not preflight request, ignore it\n        return await next()\n      }\n\n      ctx.set('Access-Control-Allow-Origin', origin)\n\n      if (credentials)\n        ctx.set('Access-Control-Allow-Credentials', 'true')\n\n      if (maxAge)\n        ctx.set('Access-Control-Max-Age', maxAge)\n\n      if (allowMethods)\n        ctx.set('Access-Control-Allow-Methods', allowMethods)\n\n      if (!allowHeaders)\n        allowHeaders = ctx.get('Access-Control-Request-Headers')\n\n      if (allowHeaders) {\n        ctx.set('Access-Control-Allow-Headers', allowHeaders)\n      }\n\n      ctx.status = 204\n    }\n  }\n  return cors\n}\n\nexport default Cors\n\n/**\n * @typedef {import('../').CorsConfig} _goa.CorsConfig\n */\n/**\n * @typedef {import('../').cors} _goa.cors\n */","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","export default events\nexport const {\n  EventEmitter,\n} = events","/*\n  Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation\n  by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool\n*/\nimport { EventEmitter } from 'events'\n\nfunction jsmemcmp(buf1, pos1, buf2, pos2, num) {\n  for (var i = 0; i < num; ++i, ++pos1, ++pos2)\n    if (buf1[pos1] !== buf2[pos2])\n      return false\n  return true\n}\n\nexport default class SBMH extends EventEmitter {\n  constructor(needle) {\n    super()\n    if (typeof needle === 'string')\n      needle = new Buffer(needle)\n    var i, j, needle_len = needle.length\n\n    this.maxMatches = Infinity\n    this.matches = 0\n\n    this._occ = new Array(256)\n    this._lookbehind_size = 0\n    this._needle = needle\n    this._bufpos = 0\n\n    this._lookbehind = new Buffer(needle_len)\n\n    // Initialize occurrence table.\n    for (j = 0; j < 256; ++j)\n      this._occ[j] = needle_len\n\n    // Populate occurrence table with analysis of the needle,\n    // ignoring last letter.\n    if (needle_len >= 1) {\n      for (i = 0; i < needle_len - 1; ++i)\n        this._occ[needle[i]] = needle_len - 1 - i\n    }\n  }\n  reset() {\n    this._lookbehind_size = 0\n    this.matches = 0\n    this._bufpos = 0\n  }\n  push(chunk, pos = 0) {\n    var r, chlen\n    if (!Buffer.isBuffer(chunk))\n      chunk = new Buffer(chunk, 'binary')\n    chlen = chunk.length\n    this._bufpos = pos\n    while (r !== chlen && this.matches < this.maxMatches)\n      r = this._sbmh_feed(chunk)\n    return r\n  }\n  _sbmh_feed(data) {\n    var len = data.length, needle = this._needle, needle_len = needle.length\n\n    // Positive: points to a position in `data`\n    //           pos == 3 points to data[3]\n    // Negative: points to a position in the lookbehind buffer\n    //           pos == -2 points to lookbehind[lookbehind_size - 2]\n    var pos = -this._lookbehind_size,\n      last_needle_char = needle[needle_len - 1],\n      occ = this._occ,\n      lookbehind = this._lookbehind,\n      ch\n\n    if (pos < 0) {\n    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool\n    // search with character lookup code that considers both the\n    // lookbehind buffer and the current round's haystack data.\n    //\n    // Loop until\n    //   there is a match.\n    // or until\n    //   we've moved past the position that requires the\n    //   lookbehind buffer. In this case we switch to the\n    //   optimized loop.\n    // or until\n    //   the character to look at lies outside the haystack.\n      while (pos < 0 && pos <= len - needle_len) {\n        ch = this._sbmh_lookup_char(data, pos + needle_len - 1)\n\n        if (ch === last_needle_char\n          && this._sbmh_memcmp(data, pos, needle_len - 1)) {\n          this._lookbehind_size = 0\n          ++this.matches\n          if (pos > -this._lookbehind_size)\n            this.emit('info', true, lookbehind, 0, this._lookbehind_size + pos)\n          else\n            this.emit('info', true)\n\n          return (this._bufpos = pos + needle_len)\n        } else\n          pos += occ[ch]\n      }\n\n      // No match.\n\n      if (pos < 0) {\n      // There's too few data for Boyer-Moore-Horspool to run,\n      // so let's use a different algorithm to skip as much as\n      // we can.\n      // Forward pos until\n      //   the trailing part of lookbehind + data\n      //   looks like the beginning of the needle\n      // or until\n      //   pos == 0\n        while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos))\n          pos++\n      }\n\n      if (pos >= 0) {\n      // Discard lookbehind buffer.\n        this.emit('info', false, lookbehind, 0, this._lookbehind_size)\n        this._lookbehind_size = 0\n      } else {\n      // Cut off part of the lookbehind buffer that has\n      // been processed and append the entire haystack\n      // into it.\n        var bytesToCutOff = this._lookbehind_size + pos\n\n        if (bytesToCutOff > 0) {\n        // The cut off data is guaranteed not to contain the needle.\n          this.emit('info', false, lookbehind, 0, bytesToCutOff)\n        }\n\n        lookbehind.copy(lookbehind, 0, bytesToCutOff,\n          this._lookbehind_size - bytesToCutOff)\n        this._lookbehind_size -= bytesToCutOff\n\n        data.copy(lookbehind, this._lookbehind_size)\n        this._lookbehind_size += len\n\n        this._bufpos = len\n        return len\n      }\n    }\n\n    if (pos >= 0)\n      pos += this._bufpos\n\n    // Lookbehind buffer is now empty. Perform Boyer-Moore-Horspool\n    // search with optimized character lookup code that only considers\n    // the current round's haystack data.\n    while (pos <= len - needle_len) {\n      ch = data[pos + needle_len - 1]\n\n      if (ch === last_needle_char\n        && data[pos] === needle[0]\n        && jsmemcmp(needle, 0, data, pos, needle_len - 1)) {\n        ++this.matches\n        if (pos > 0)\n          this.emit('info', true, data, this._bufpos, pos)\n        else\n          this.emit('info', true)\n\n        return (this._bufpos = pos + needle_len)\n      } else\n        pos += occ[ch]\n    }\n\n    // There was no match. If there's trailing haystack data that we cannot\n    // match yet using the Boyer-Moore-Horspool algorithm (because the trailing\n    // data is less than the needle size) then match using a modified\n    // algorithm that starts matching from the beginning instead of the end.\n    // Whatever trailing data is left after running this algorithm is added to\n    // the lookbehind buffer.\n    if (pos < len) {\n      while (pos < len && (data[pos] !== needle[0]\n                         || !jsmemcmp(data, pos, needle, 0, len - pos))) {\n        ++pos\n      }\n      if (pos < len) {\n        data.copy(lookbehind, 0, pos, pos + (len - pos))\n        this._lookbehind_size = len - pos\n      }\n    }\n\n    // Everything until pos is guaranteed not to contain needle data.\n    if (pos > 0)\n      this.emit('info', false, data, this._bufpos, pos < len ? pos : len)\n\n    this._bufpos = len\n    return len\n  }\n  _sbmh_lookup_char(data, pos) {\n    if (pos < 0) {\n      /** @suppress {checkTypes} */\n      const res = this._lookbehind[this._lookbehind_size + pos]\n      return res\n    }\n    else\n      return data[pos]\n  }\n  _sbmh_memcmp(data, pos, len) {\n    var i = 0\n\n    while (i < len) {\n      if (this._sbmh_lookup_char(data, pos + i) === this._needle[i])\n        ++i\n      else\n        return false\n    }\n    return true\n  }\n}\n\n/**\n * @license MIT streamsearch by Brian White\n * https://github.com/mscdex/streamsearch\n */","import { Readable } from 'stream'\n\nexport default class PartStream extends Readable {\n  constructor(opts) {\n    super(opts)\n  }\n  _read() {}\n}","import { EventEmitter } from 'events'\nimport StreamSearch from './streamsearch'\n\nconst B_DCRLF = Buffer.from('\\r\\n\\r\\n')\nconst RE_CRLF = /\\r\\n/g\nconst RE_HDR = /^([^:]+):[ \\t]?([\\x00-\\xFF]+)?$/ // eslint-disable-line\nconst MAX_HEADER_PAIRS = 2000 // from node's http.js\nconst MAX_HEADER_SIZE = 80 * 1024 // from node's http_parser\n\nexport default class HeaderParser extends EventEmitter {\n  /**\n   * @param {_idio.DicerConfig} [cfg] Options for the program.\n   * @param {string} [cfg.boundary] This is the boundary used to detect the beginning of a new part.\n   * @param {boolean} [cfg.headerFirst=false] If true, preamble header parsing will be performed first. Default `false`.\n   * @param {boolean} [cfg.partHwm] High watermark for parsing parts.\n   * @param {number} [cfg.maxHeaderPairs=2000] The maximum number of header key=>value pairs to parse. Default `2000`.\n   */\n  constructor(cfg = {}) {\n    super()\n    const { maxHeaderPairs = MAX_HEADER_PAIRS } = cfg\n\n    // var self = this\n    this.nread = 0\n    this.maxed = false\n    this.npairs = 0\n    this.maxHeaderPairs = maxHeaderPairs\n    this.buffer = ''\n    this.header = {}\n    this.finished = false\n    this.ss = new StreamSearch(B_DCRLF)\n    this.ss.on('info', (isMatch, data, start, end) => {\n      if (data && !this.maxed) {\n        if (this.nread + (end - start) > MAX_HEADER_SIZE) {\n          end = (MAX_HEADER_SIZE - this.nread)\n          this.nread = MAX_HEADER_SIZE\n        } else\n          this.nread += (end - start)\n\n        if (this.nread === MAX_HEADER_SIZE)\n          this.maxed = true\n\n        this.buffer += data.toString('binary', start, end)\n      }\n      if (isMatch)\n        this._finish()\n    })\n  }\n  push(data) {\n    var r = this.ss.push(data)\n    if (this.finished)\n      return r\n  }\n  reset() {\n    this.finished = false\n    this.buffer = ''\n    this.header = {}\n    this.ss.reset()\n  }\n  _finish() {\n    if (this.buffer)\n      this._parseHeader()\n    this.ss.matches = this.ss.maxMatches\n    var header = this.header\n    this.header = {}\n    this.buffer = ''\n    this.finished = true\n    this.nread = this.npairs = 0\n    this.maxed = false\n    this.emit('header', header)\n  }\n  _parseHeader() {\n    if (this.npairs === this.maxHeaderPairs)\n      return\n\n    var lines = this.buffer.split(RE_CRLF), len = lines.length, m, h,\n      modded = false\n\n    for (let i = 0; i < len; ++i) {\n      if (lines[i].length === 0)\n        continue\n      if (lines[i][0] == '\\t' || lines[i][0] == ' ') {\n        // folded header content\n        // RFC2822 says to just remove the CRLF and not the whitespace following\n        // it, so we follow the RFC and include the leading whitespace ...\n        this.header[h][this.header[h].length - 1] += lines[i]\n      } else {\n        m = RE_HDR.exec(lines[i])\n        if (m) {\n          h = m[1].toLowerCase()\n          if (m[2]) {\n            if (this.header[h] === undefined)\n              this.header[h] = [m[2]]\n            else\n              this.header[h].push(m[2])\n          } else\n            this.header[h] = ['']\n          if (++this.npairs === this.maxHeaderPairs)\n            break\n        } else {\n          this.buffer = lines[i]\n          modded = true\n          break\n        }\n      }\n    }\n    if (!modded)\n      this.buffer = ''\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DicerConfig} _idio.DicerConfig\n */","import { Writable } from 'stream'\nimport StreamSearch from './streamsearch'\nimport PartStream from './PartStream'\nimport HeaderParser from './HeaderParser'\n\nconst DASH = 45\nconst B_ONEDASH = Buffer.from('-')\nconst B_CRLF = Buffer.from('\\r\\n')\nconst EMPTY_FN = () => {}\n\n/**\n * @implements {_idio.Dicer}\n */\nexport default class Dicer extends Writable {\n  /**\n   * @param {!_idio.DicerConfig} [cfg] Options for the program.\n   * @param {string} [cfg.boundary] This is the boundary used to detect the beginning of a new part.\n   * @param {boolean} [cfg.headerFirst=false] If true, preamble header parsing will be performed first. Default `false`.\n   * @param {boolean} [cfg.partHwm] High watermark for parsing parts.\n   * @param {number} [cfg.maxHeaderPairs=2000] The maximum number of header key=>value pairs to parse. Default `2000`.\n   */\n  constructor(cfg) {\n    super(/** @type {!stream.WritableOptions|undefined} */ (cfg))\n    if (!cfg || (!cfg.headerFirst && typeof cfg.boundary != 'string'))\n      throw new TypeError('Boundary required')\n\n    if (typeof cfg.boundary == 'string')\n      this.setBoundary(cfg.boundary)\n    else\n      /** @type {!StreamSearch|undefined} */\n      this._bparser = undefined\n\n    this._headerFirst = cfg.headerFirst\n\n    this._dashes = 0\n    this._parts = 0\n    this._finished = false\n    this._realFinish = false\n    this._isPreamble = true\n    this._justMatched = false\n    this._firstWrite = true\n    this._inHeader = true\n    /**\n     * @type {!PartStream|undefined}\n     */\n    this._part = undefined\n    this._cb = undefined\n    this._ignoreData = false\n    this._partOpts = /** @type {!stream.ReadableOptions} */ (typeof cfg.partHwm == 'number'\n      ? { highWaterMark: cfg.partHwm }\n      : {})\n    this._pause = false\n\n    this._hparser = new HeaderParser(cfg)\n    this._hparser.on('header', (header) => {\n      this._inHeader = false\n      this._part.emit('header', header)\n    })\n  }\n  emit(ev) {\n    if (ev == 'finish' && !this._realFinish) {\n      if (!this._finished) {\n        process.nextTick(() => {\n          this.emit('error', new Error('Unexpected end of multipart data'))\n          if (this._part && !this._ignoreData) {\n            var type = (this._isPreamble ? 'Preamble' : 'Part')\n            this._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))\n            this._part.push(null)\n            process.nextTick(() => {\n              this._realFinish = true\n              this.emit('finish')\n              this._realFinish = false\n            })\n            return\n          }\n          this._realFinish = true\n          this.emit('finish')\n          this._realFinish = false\n        })\n      }\n    } else\n      Writable.prototype.emit.apply(this, arguments)\n    return false\n  }\n  _write(data, encoding, cb) {\n    // ignore unexpected data (e.g. extra trailer data after finished)\n    if (!this._hparser && !this._bparser)\n      return cb()\n\n    if (this._headerFirst && this._isPreamble) {\n      if (!this._part) {\n        this._part = new PartStream(this._partOpts)\n        if (this._events['preamble'])\n          this.emit('preamble', this._part)\n        else\n          this._ignore()\n      }\n      const r = this._hparser.push(data)\n      if (!this._inHeader && r !== undefined && r < data.length)\n        data = data.slice(r)\n      else\n        return cb()\n    }\n\n    // allows for \"easier\" testing\n    if (this._firstWrite) {\n      // this.start = +new Date\n      this._bparser.push(B_CRLF)\n      this._firstWrite = false\n    }\n\n    // this.start = +new Date\n    this._bparser.push(data)\n\n    if (this._pause)\n      this._cb = cb\n    else\n      cb()\n  }\n  reset() {\n    this._part = undefined\n    this._bparser = undefined\n    this._hparser = undefined\n  }\n  setBoundary(boundary) {\n    this._bparser = new StreamSearch('\\r\\n--' + boundary)\n    this._bparser.on('info', (isMatch, data, start, end) => {\n      this._oninfo(isMatch, data, start, end)\n      // const duration = +new Date - this.start\n      // console.log('found in %sms', duration)\n    })\n  }\n  _ignore() {\n    if (this._part && !this._ignoreData) {\n      this._ignoreData = true\n      this._part.on('error', EMPTY_FN)\n      // we must perform some kind of read on the stream even though we are\n      // ignoring the data, otherwise node's Readable stream will not emit 'end'\n      // after pushing null to the stream\n      this._part.resume()\n    }\n  }\n  _oninfo(isMatch, data, start, end) {\n    var buf, i = 0, r, ev, shouldWriteMore = true\n\n    if (!this._part && this._justMatched && data) {\n      while (this._dashes < 2 && (start + i) < end) {\n        if (data[start + i] === DASH) {\n          ++i\n          ++this._dashes\n        } else {\n          if (this._dashes)\n            buf = B_ONEDASH\n          this._dashes = 0\n          break\n        }\n      }\n      if (this._dashes === 2) {\n        if ((start + i) < end && this._events.trailer)\n          this.emit('trailer', data.slice(start + i, end))\n        this.reset()\n        this._finished = true\n        // no more parts will be added\n        if (this._parts === 0) {\n          this._realFinish = true\n          this.emit('finish')\n          this._realFinish = false\n        }\n      }\n      if (this._dashes)\n        return\n    }\n    if (this._justMatched)\n      this._justMatched = false\n    if (!this._part) {\n      this._part = new PartStream(this._partOpts)\n      this._part._read = () => {\n        this._unpause()\n      }\n      ev = this._isPreamble ? 'preamble' : 'part'\n      if (this._events[ev])\n        this.emit(ev, this._part)\n      else\n        this._ignore()\n      if (!this._isPreamble)\n        this._inHeader = true\n    }\n    if (data && start < end && !this._ignoreData) {\n      if (this._isPreamble || !this._inHeader) {\n        if (buf)\n          shouldWriteMore = this._part.push(buf)\n        shouldWriteMore = this._part.push(data.slice(start, end))\n        if (!shouldWriteMore)\n          this._pause = true\n      } else if (!this._isPreamble && this._inHeader) {\n        if (buf)\n          this._hparser.push(buf)\n        r = this._hparser.push(data.slice(start, end))\n        if (!this._inHeader && r !== undefined && r < end)\n          this._oninfo(false, data, start + r, end)\n      }\n    }\n    if (isMatch) {\n      this._hparser.reset()\n      if (this._isPreamble)\n        this._isPreamble = false\n      else {\n        ++this._parts\n        this._part.on('end', () => {\n          if (--this._parts === 0) {\n            if (this._finished) {\n              this._realFinish = true\n              this.emit('finish')\n              this._realFinish = false\n            } else {\n              this._unpause()\n            }\n          }\n        })\n      }\n      this._part.push(null)\n      this._part = undefined\n      this._ignoreData = false\n      this._justMatched = true\n      this._dashes = 0\n    }\n  }\n  _unpause() {\n    if (!this._pause) return\n\n    this._pause = false\n    if (this._cb) {\n      const cb = this._cb\n      this._cb = undefined\n      cb()\n    }\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DicerConfig} _idio.DicerConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').ReadableOptions} stream.ReadableOptions\n */\n\n/**\n * @license MIT dicer by Brian White\n * https://github.com/mscdex/dicer\n */","const { TextDecoder } = require(/* depack */'text-decoding')\n\nconst RE_ENCODED = /%([a-fA-F0-9]{2})/g\n\nfunction encodedReplacer(match, byte) {\n  return String.fromCharCode(parseInt(byte, 16))\n}\n\n/**\n * Parses the content-type header.\n * @param {string} str\n */\nexport function parseParams(str) {\n  let res = [],\n    state = 'key',\n    charset = '',\n    inquote = false,\n    escaping = false,\n    p = 0,\n    tmp = ''\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    if (str[i] === '\\\\' && inquote) {\n      if (escaping)\n        escaping = false\n      else {\n        escaping = true\n        continue\n      }\n    } else if (str[i] == '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false\n          state = 'key'\n        } else\n          inquote = true\n        continue\n      } else\n        escaping = false\n    } else {\n      if (escaping && inquote)\n        tmp += '\\\\'\n      escaping = false\n      if ((state === 'charset' || state === 'lang') && str[i] === \"'\") {\n        if (state === 'charset') {\n          state = 'lang'\n          charset = tmp.substring(1)\n        } else\n          state = 'value'\n        tmp = ''\n        continue\n      } else if (state == 'key'\n                 && (str[i] == '*' || str[i] == '=')\n                 && res.length) {\n        if (str[i] == '*')\n          state = 'charset'\n        else\n          state = 'value'\n        res[p] = [tmp, undefined]\n        tmp = ''\n        continue\n      } else if (!inquote && str[i] == ';') {\n        state = 'key'\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n              'binary',\n              charset)\n          }\n          charset = ''\n        } else if (tmp.length) {\n          tmp = decodeText(tmp, 'binary', 'utf8')\n        }\n        if (res[p] === undefined)\n          res[p] = tmp\n        else\n          res[p][1] = tmp\n        tmp = ''\n        ++p\n        continue\n      } else if (!inquote && (str[i] === ' ' || str[i] === '\\t'))\n        continue\n    }\n    tmp += str[i]\n  }\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n      'binary',\n      charset)\n  } else if (tmp) {\n    tmp = decodeText(tmp, 'binary', 'utf8')\n  }\n\n  if (res[p] === undefined) {\n    if (tmp)\n      res[p] = tmp\n  } else\n    res[p][1] = tmp\n\n  return res\n}\n\n/**\n * @param {string} text\n * @param {string} textEncoding\n * @param {string} destEncoding\n */\nexport function decodeText(text, textEncoding, destEncoding) {\n  let ret\n  if (text) {\n    try {\n      ret = new TextDecoder(destEncoding)\n        .decode(Buffer.from(text, textEncoding))\n    } catch(e) {\n      /* ok */\n    }\n  }\n  return (typeof ret == 'string' ? ret : text)\n}\n/**\n * @param {!Buffer} buffer\n * @param {string} textEncoding\n * @param {string} [destEncoding]\n */\nexport function decodeBuffer(buffer, textEncoding, destEncoding) {\n  try {\n    buffer = new TextDecoder(destEncoding)\n      .decode(buffer)\n  } catch(e) {\n    /* ok */\n  }\n  return buffer\n  // return (typeof ret == 'string' ? ret : text)\n}\n\nconst HEX = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  ], RE_PLUS = /\\+/g\n\nexport class Decoder {\n  constructor() {\n    this.buffer = undefined\n  }\n  write(str) {\n    // Replace '+' with ' ' before decoding\n    str = str.replace(RE_PLUS, ' ')\n    var res = ''\n    var i = 0, p = 0, len = str.length\n    for (; i < len; ++i) {\n      if (this.buffer !== undefined) {\n        if (!HEX[str.charCodeAt(i)]) {\n          res += '%' + this.buffer\n          this.buffer = undefined\n          --i // retry character\n        } else {\n          this.buffer += str[i]\n          ++p\n          if (this.buffer.length === 2) {\n            res += String.fromCharCode(parseInt(this.buffer, 16))\n            this.buffer = undefined\n          }\n        }\n      } else if (str[i] == '%') {\n        if (i > p) {\n          res += str.substring(p, i)\n          p = i\n        }\n        this.buffer = ''\n        ++p\n      }\n    }\n    if (p < len && this.buffer === undefined)\n      res += str.substring(p)\n    return res\n  }\n  reset() {\n    this.buffer = undefined\n  }\n}\n\nexport function basename(path) {\n  if (typeof path != 'string')\n    return ''\n  for (let i = path.length - 1; i >= 0; --i) {\n    switch (path.charCodeAt(i)) {\n    case 0x2F: // '/'\n    case 0x5C: // '\\'\n      path = path.slice(i + 1)\n      return (path == '..' || path == '.' ? '' : path)\n    }\n  }\n  return (path == '..' || path == '.' ? '' : path)\n}\n\n\n/**\n * @param {_goa.BusBoyLimits} limits\n */\nexport const getLimits = (limits) => {\n  const {\n    fieldSize: fieldSizeLimit = 1 * 1024 * 1024,\n    fieldNameSize: fieldNameSizeLimit = 100,\n    fileSize: fileSizeLimit = Infinity,\n    files: filesLimit = Infinity,\n    fields: fieldsLimit = Infinity,\n    parts: partsLimit = Infinity,\n  } = limits\n  return {\n    fieldSizeLimit, fileSizeLimit, filesLimit, fieldsLimit, partsLimit,\n    fieldNameSizeLimit,\n  }\n}","import { Writable } from 'stream'\nimport { parseParams } from './utils'\n\nexport default class Busboy extends Writable {\n  /**\n   * @param {_goa.BusBoyConfig} [opts]\n   */\n  constructor(opts = {}) {\n    super(/** @type {!stream.WritableOptions} */ ({\n      ...(opts.highWaterMark ? { highWaterMark: opts.highWaterMark } : {}),\n    }))\n\n    this._done = false\n    this._parser = undefined\n    this._finished = false\n    this.hitFieldsLimit = false\n    this.hitFilesLimit = false\n    this.hitPartsLimit = false\n\n    this.opts = opts\n    if (opts.headers && typeof opts.headers['content-type'] == 'string')\n      this.parseHeaders(opts.headers)\n    else\n      throw new Error('Missing Content-Type')\n  }\n  /**\n   * @param {string|symbol} ev\n   * @param {...?} args\n   */\n  emit(ev, ...args) {\n    if (ev == 'finish') {\n      if (!this._done) {\n        this._parser && this._parser.end()\n        return false\n      } else if (this._finished) {\n        return false\n      }\n      this._finished = true\n    }\n    return super.emit(ev, ...args)\n  }\n  /**\n   * This is overridden by index.js file to avoid circular dependencies.\n   */\n  get TYPES() {\n    return []\n  }\n  parseHeaders(headers) {\n    this._parser = undefined\n    if (headers['content-type']) {\n      const parsed = parseParams(headers['content-type'])\n      let matched\n      /** @type {_goa.BusBoyParser} */\n      let Type\n      for (let i = 0; i < this.TYPES.length; ++i) {\n        Type = this.TYPES[i]\n        if (typeof Type.detect == 'function')\n          matched = Type.detect(parsed)\n        else\n          matched = Type.detect.test(parsed[0])\n        if (matched)\n          break\n      }\n      if (matched) {\n        const cfg = {\n          limits: this.opts.limits,\n          headers: headers,\n          parsedConType: parsed,\n          highWaterMark: this.opts.highWaterMark,\n          fileHwm: this.opts.fileHwm,\n          defCharset: this.opts.defCharset,\n          preservePath: this.opts.preservePath,\n        }\n        this._parser = new Type(this, cfg)\n        return\n      }\n    }\n    throw new Error('Unsupported content type: ' + headers['content-type'])\n  }\n  _write(chunk, encoding, cb) {\n    if (!this._parser)\n      return cb(new Error('Not ready to parse. Missing Content-Type?'))\n    this._parser.write(chunk, cb)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').BusBoyConfig} _goa.BusBoyConfig\n */","\n// TODO:\n//  * support 1 nested multipart level\n//    (see second multipart example here:\n//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)\n//  * support limits.fieldNameSize\n//     -- this will require modifications to utils.parseParams\n\nimport { Readable } from 'stream'\nimport Dicer from '@idio/dicer'\nimport { parseParams, decodeBuffer, basename, getLimits, decodeText } from '../utils'\nimport BusBoy from '../BusBoy' // eslint-disable-line\n\nconst RE_BOUNDARY = /^boundary$/i\nconst RE_FIELD = /^form-data$/i\nconst RE_CHARSET = /^charset$/i\nconst RE_FILENAME = /^filename$/i\nconst RE_NAME = /^name$/i\n\nexport default class Multipart {\n  static get detect() {\n    return /^multipart\\/form-data/i\n  }\n  /**\n   * @param {BusBoy} boy\n   * @param {_goa.BusBoyParserConfig} cfg\n   */\n  constructor(boy, {\n    limits = {}, defCharset = 'utf8', preservePath, fileHwm,\n    parsedConType = [], highWaterMark,\n  }) {\n    let i, len\n\n    const [,boundary] = parsedConType.find((t) => {\n      return Array.isArray(t) && RE_BOUNDARY.test(t[0])\n    }) || []\n    if (typeof boundary != 'string')\n      throw new Error('Multipart: Boundary not found')\n\n    function checkFinished() {\n      if (nends === 0 && finished && !boy._done) {\n        finished = false\n        process.nextTick(() => {\n          boy._done = true\n          boy.emit('finish')\n        })\n      }\n    }\n\n    const {\n      partsLimit, filesLimit, fileSizeLimit, fieldsLimit, fieldSizeLimit,\n    } = getLimits(limits)\n\n    /** @type {!stream.Readable|undefined} */\n    let curFile\n\n    let nfiles = 0,\n      nfields = 0,\n      nends = 0,\n      curField,\n      finished = false\n\n    this._needDrain = false\n    this._pause = false\n    this._cb = undefined\n    this._nparts = 0\n    this._boy = boy\n\n    const parserCfg = {\n      boundary: boundary,\n      maxHeaderPairs: limits.headerPairs,\n      highWaterMark,\n      fileHwm,\n    }\n\n    this.parser = new Dicer(parserCfg)\n    this.parser.on('drain', () => {\n      this._needDrain = false\n      if (this._cb && !this._pause) {\n        const cb = this._cb\n        this._cb = undefined\n        cb()\n      }\n    }).on('error', (err) => {\n      boy.emit('error', err)\n    }).on('finish', () => {\n      finished = true\n      checkFinished()\n    })\n\n    /** @param {stream.Readable} part */\n    const onPart = (part) => {\n      if (++this._nparts > partsLimit) {\n        this.parser.removeListener('part', onPart)\n        this.parser.on('part', skipPart)\n        boy.hitPartsLimit = true\n        boy.emit('partsLimit')\n        return skipPart(part)\n      }\n\n      // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let\n      // us emit 'end' early since we know the part has ended if we are already\n      // seeing the next part\n      if (curField) {\n        const field = curField\n        field.emit('end')\n        field.removeAllListeners('end')\n      }\n\n      part.on('header', (/** @type {!Object<string, !Array<string>>} */ header) => {\n        let contype = 'text/plain'\n        let charset = defCharset\n        let encoding = '7bit'\n\n        let fieldname,\n          filename,\n          nsize = 0\n\n        if (header['content-type']) {\n          const parsed = parseParams(header['content-type'][0])\n          if (parsed[0]) {\n            contype = parsed[0].toLowerCase()\n            for (i = 0, len = parsed.length; i < len; ++i) {\n              if (RE_CHARSET.test(parsed[i][0])) {\n                charset = parsed[i][1].toLowerCase()\n                break\n              }\n            }\n          }\n        }\n\n        if (header['content-disposition']) {\n          const parsed = parseParams(header['content-disposition'][0])\n          if (!RE_FIELD.test(parsed[0]))\n            return skipPart(part)\n          for (i = 0, len = parsed.length; i < len; ++i) {\n            if (RE_NAME.test(parsed[i][0])) {\n              fieldname = parsed[i][1]\n            } else if (RE_FILENAME.test(parsed[i][0])) {\n              filename = parsed[i][1]\n              if (!preservePath)\n                filename = basename(filename)\n            }\n          }\n        } else\n          return skipPart(part)\n\n        if (header['content-transfer-encoding'])\n          encoding = header['content-transfer-encoding'][0].toLowerCase()\n\n        let onData,\n          onEnd\n        if (contype == 'application/octet-stream' || filename !== undefined) {\n          // file/binary field\n          if (nfiles == filesLimit) {\n            if (!boy.hitFilesLimit) {\n              boy.hitFilesLimit = true\n              boy.emit('filesLimit')\n            }\n            return skipPart(part)\n          }\n\n          ++nfiles\n\n          if (!boy._events.file) {\n            this.parser._ignore()\n            return\n          }\n\n          ++nends\n          const file = new FileStream({ highWaterMark: fileHwm })\n          curFile = file\n          file.on('end', () => {\n            --nends\n            this._pause = false\n            checkFinished()\n            if (this._cb && !this._needDrain) {\n              const cb = this._cb\n              this._cb = undefined\n              cb()\n            }\n          })\n          file._read = () => {\n            if (!this._pause)\n              return\n            this._pause = false\n            if (this._cb && !this._needDrain) {\n              const cb = this._cb\n              this._cb = undefined\n              cb()\n            }\n          }\n          boy.emit('file', fieldname, file, filename, encoding, contype, part)\n\n          onData = (data) => {\n            if ((nsize += data.length) > fileSizeLimit) {\n              const extralen = (fileSizeLimit - (nsize - data.length))\n              if (extralen > 0)\n                file.push(data.slice(0, extralen))\n              file.emit('limit')\n              file.truncated = true\n              part.removeAllListeners('data')\n            } else if (!file.push(data))\n              this._pause = true\n          }\n\n          onEnd = () => {\n            curFile = undefined\n            file.push(null)\n          }\n        } else {\n          // non-file field\n          if (nfields == fieldsLimit) {\n            if (!boy.hitFieldsLimit) {\n              boy.hitFieldsLimit = true\n              boy.emit('fieldsLimit')\n            }\n            return skipPart(part)\n          }\n\n          ++nfields\n          ++nends\n          const buffer = []\n          let truncated = false\n          curField = part\n\n          /** @param {Buffer} data */\n          onData = (data) => {\n            let d = data\n            nsize += data.length\n            if (nsize > fieldSizeLimit) {\n              d = Buffer.from(data, 0, fieldSizeLimit).slice(0, fieldSizeLimit)\n              truncated = true\n              part.removeAllListeners('data')\n            }\n            buffer.push(d)\n          }\n\n          onEnd = () => {\n            curField = undefined\n            const b = Buffer.concat(buffer)\n            const bu = decodeBuffer(b, charset)\n            boy.emit('field', fieldname, bu, false, truncated, encoding, contype)\n            --nends\n            checkFinished()\n          }\n        }\n\n        // https://github.com/nodejs/node/blob/df339bccf24839da473937bd523602cf68b114af/lib/_stream_readable.js#L111\n        part._readableState.sync = false\n\n        part.on('data', onData)\n        part.on('end', onEnd)\n      }).on('error', (err) => {\n        if (curFile)\n          curFile.emit('error', err)\n      })\n    }\n\n    this.parser.on('part', onPart)\n  }\n  end() {\n    if (this._nparts === 0 && !this._boy._done) {\n      process.nextTick(() => {\n        this._boy._done = true\n        this._boy.emit('finish')\n      })\n    } else if (this.parser.writable)\n      this.parser.end()\n  }\n  write(chunk, cb) {\n    let r\n    if ((r = this.parser.write(chunk)) && !this._pause)\n      cb()\n    else {\n      this._needDrain = !r\n      this._cb = cb\n    }\n  }\n}\n\n/**\n * @param {stream.Readable} part\n */\nfunction skipPart(part) {\n  part.resume()\n}\n\n/**\n * @implements {_goa.BusBoyFileStream}\n */\nclass FileStream extends Readable {\n  constructor(opts) {\n    super(opts)\n    this.truncated = false\n  }\n  _read() {}\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyParserConfig} _goa.BusBoyParserConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyLimits} _goa.BusBoyLimits\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */","import { Decoder, decodeText, getLimits } from '../utils'\nimport BusBoy from '../BusBoy' // eslint-disable-line\n\nconst RE_CHARSET = /^charset$/i\n\nexport default class UrlEncoded {\n  static get detect() {\n    return /^application\\/x-www-form-urlencoded/i\n  }\n  /**\n   * @param {BusBoy} boy\n   * @param {_goa.BusBoyParserConfig} cfg\n   */\n  constructor(boy, { limits = {}, parsedConType, defCharset = 'utf8' }) {\n    this.boy = boy\n    this._hitLimit = undefined\n\n    const { fieldSizeLimit, fieldNameSizeLimit, fieldsLimit } = getLimits(limits)\n    this.fieldSizeLimit = fieldSizeLimit\n    this.fieldNameSizeLimit = fieldNameSizeLimit\n    this.fieldsLimit = fieldsLimit\n\n    let charset = defCharset\n    for (let i = 0, len = parsedConType.length; i < len; ++i) {\n      if (Array.isArray(parsedConType[i])\n          && RE_CHARSET.test(parsedConType[i][0])) {\n        charset = parsedConType[i][1].toLowerCase()\n        break\n      }\n    }\n\n    this.decoder = new Decoder()\n    this.charset = charset\n    this._fields = 0\n    this._state = 'key'\n    this._checkingBytes = true\n    this._bytesKey = 0\n    this._bytesVal = 0\n    this._key = ''\n    this._val = ''\n    this._keyTrunc = false\n    this._valTrunc = false\n    this._hitlimit = false\n  }\n  write(data, cb) {\n    if (this._fields === this.fieldsLimit) {\n      if (!this.boy.hitFieldsLimit) {\n        this.boy.hitFieldsLimit = true\n        this.boy.emit('fieldsLimit')\n      }\n      return cb()\n    }\n\n    var idxeq, idxamp, i, p = 0, len = data.length\n\n    while (p < len) {\n      if (this._state == 'key') {\n        idxeq = idxamp = undefined\n        for (i = p; i < len; ++i) {\n          if (!this._checkingBytes)\n            ++p\n          if (data[i] === 0x3D/*=*/) {\n            idxeq = i\n            break\n          } else if (data[i] === 0x26/*&*/) {\n            idxamp = i\n            break\n          }\n          if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {\n            this._hitLimit = true\n            break\n          } else if (this._checkingBytes)\n            ++this._bytesKey\n        }\n\n        if (idxeq !== undefined) {\n          // key with assignment\n          if (idxeq > p)\n            this._key += this.decoder.write(data.toString('binary', p, idxeq))\n          this._state = 'val'\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._val = ''\n          this._bytesVal = 0\n          this._valTrunc = false\n          this.decoder.reset()\n\n          p = idxeq + 1\n        } else if (idxamp !== undefined) {\n          // key with no assignment\n          ++this._fields\n          var key, keyTrunc = this._keyTrunc\n          if (idxamp > p)\n            key = (this._key += this.decoder.write(data.toString('binary', p, idxamp)))\n          else\n            key = this._key\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._key = ''\n          this._bytesKey = 0\n          this._keyTrunc = false\n          this.decoder.reset()\n\n          if (key.length) {\n            this.boy.emit('field', decodeText(key, 'binary', this.charset),\n              '',\n              keyTrunc,\n              false)\n          }\n\n          p = idxamp + 1\n          if (this._fields === this.fieldsLimit)\n            return cb()\n        } else if (this._hitLimit) {\n          // we may not have hit the actual limit if there are encoded bytes...\n          if (i > p)\n            this._key += this.decoder.write(data.toString('binary', p, i))\n          p = i\n          if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {\n            // yep, we actually did hit the limit\n            this._checkingBytes = false\n            this._keyTrunc = true\n          }\n        } else {\n          if (p < len)\n            this._key += this.decoder.write(data.toString('binary', p))\n          p = len\n        }\n      } else {\n        idxamp = undefined\n        for (i = p; i < len; ++i) {\n          if (!this._checkingBytes)\n            ++p\n          if (data[i] === 0x26/*&*/) {\n            idxamp = i\n            break\n          }\n          if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {\n            this._hitLimit = true\n            break\n          }\n          else if (this._checkingBytes)\n            ++this._bytesVal\n        }\n\n        if (idxamp !== undefined) {\n          ++this._fields\n          if (idxamp > p)\n            this._val += this.decoder.write(data.toString('binary', p, idxamp))\n          this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n            decodeText(this._val, 'binary', this.charset),\n            this._keyTrunc,\n            this._valTrunc)\n          this._state = 'key'\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._key = ''\n          this._bytesKey = 0\n          this._keyTrunc = false\n          this.decoder.reset()\n\n          p = idxamp + 1\n          if (this._fields === this.fieldsLimit)\n            return cb()\n        } else if (this._hitLimit) {\n          // we may not have hit the actual limit if there are encoded bytes...\n          if (i > p)\n            this._val += this.decoder.write(data.toString('binary', p, i))\n          p = i\n          if ((this._val === '' && this.fieldSizeLimit === 0)\n              || (this._bytesVal = this._val.length) === this.fieldSizeLimit) {\n            // yep, we actually did hit the limit\n            this._checkingBytes = false\n            this._valTrunc = true\n          }\n        } else {\n          if (p < len)\n            this._val += this.decoder.write(data.toString('binary', p))\n          p = len\n        }\n      }\n    }\n    cb()\n  }\n  end() {\n    if (this.boy._done) return\n\n    if (this._state == 'key' && this._key.length > 0) {\n      this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n        '',\n        this._keyTrunc,\n        false)\n    } else if (this._state == 'val') {\n      this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n        decodeText(this._val, 'binary', this.charset),\n        this._keyTrunc,\n        this._valTrunc)\n    }\n    this.boy._done = true\n    this.boy.emit('finish')\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyParserConfig} _goa.BusBoyParserConfig\n */","import Multipart from './types/multipart'\nimport Urlencoded from './types/urlencoded'\nimport _BusBoy from './BusBoy'\n\n/**\n * @implements {_goa.BusBoy}\n */\nexport default class BusBoy extends _BusBoy {\n  /**\n   * @param {_goa.BusBoyConfig} opts\n   */\n  constructor(opts) {\n    super(opts)\n  }\n  get TYPES() {\n    return [Multipart, Urlencoded]\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').BusBoyConfig} _goa.BusBoyConfig\n */","const reFirstKey = /^[^[]*/\nconst reDigitPath = /^\\[(\\d+)\\]/\nconst reNormalPath = /^\\[([^\\]]+)\\]/\n\nexport default function parsePath(key) {\n  function failure () {\n    return [{ type: 'object', key: key, last: true }]\n  }\n\n  const firstKey = reFirstKey.exec(key)[0]\n  if (!firstKey) return failure()\n\n  const len = key.length\n  let pos = firstKey.length\n  let tail = { type: 'object', key: firstKey }\n  const steps = [tail]\n\n  while (pos < len) {\n    let m\n\n    if (key[pos] === '[' && key[pos + 1] === ']') {\n      pos += 2\n      tail.append = true\n      if (pos !== len) return failure()\n      continue\n    }\n\n    m = reDigitPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'array'\n      tail = { type: 'array', key: parseInt(m[1], 10) }\n      steps.push(tail)\n      continue\n    }\n\n    m = reNormalPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'object'\n      tail = { type: 'object', key: m[1] }\n      steps.push(tail)\n      continue\n    }\n\n    return failure()\n  }\n\n  tail.last = true\n  return steps\n}\n\n","function valueType (value) {\n  if (value === undefined) return 'undefined'\n  if (Array.isArray(value)) return 'array'\n  if (typeof value == 'object') return 'object'\n  return 'scalar'\n}\n\nfunction setLastValue(context, step, currentValue, entryValue) {\n  switch (valueType(currentValue)) {\n  case 'undefined':\n    if (step.append) {\n      context[step.key] = [entryValue]\n    } else {\n      context[step.key] = entryValue\n    }\n    break\n  case 'array':\n    context[step.key].push(entryValue)\n    break\n  case 'object':\n    return setLastValue(currentValue, { type: 'object', key: '', last: true }, currentValue[''], entryValue)\n  case 'scalar':\n    context[step.key] = [context[step.key], entryValue]\n    break\n  }\n\n  return context\n}\n\nexport default function setValue(context, step, currentValue, entryValue) {\n  if (step.last) return setLastValue(context, step, currentValue, entryValue)\n\n  let obj\n  switch (valueType(currentValue)) {\n  case 'undefined':\n    if (step.nextType == 'array') {\n      context[step.key] = []\n    } else {\n      context[step.key] = {}\n    }\n    return context[step.key]\n  case 'object':\n    return context[step.key]\n  case 'array':\n    if (step.nextType == 'array') {\n      return currentValue\n    }\n\n    obj = {}\n    context[step.key] = obj\n    currentValue.forEach(function (item, i) {\n      if (item !== undefined) obj['' + i] = item\n    })\n\n    return obj\n  case 'scalar':\n    obj = {}\n    obj[''] = currentValue\n    context[step.key] = obj\n    return obj\n  }\n}\n","import parsePath from './lib/parse-path'\nimport setValue from './lib/set-value'\n\n/**\n * Appends the field to the store.\n * @param {!Object} store The object to which to write the field.\n * @param {string} key The key, e.g., `name`, or `choice[0][language]`\n * @param {string} value The value of the field.\n */\nexport default function appendField(store, key, value) {\n  const steps = parsePath(key)\n\n  steps.reduce(function (context, step) {\n    return setValue(context, step, context[step.key], value)\n  }, store)\n}","function arrayRemove (arr, item) {\n  var idx = arr.indexOf(item)\n  if (~idx) arr.splice(idx, 1)\n}\n\nexport default class FileAppender {\n  /**\n   * @param {string} strategy\n   * @param {http.IncomingMessage} req\n   */\n  constructor(strategy, req) {\n    this.strategy = strategy\n    this.req = req\n\n    switch (strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': req.files = []; break\n    case 'OBJECT': req.files = {}; break\n    default: throw new Error('Unknown file strategy: ' + strategy)\n    }\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   */\n  insertPlaceholder({ fieldname }) {\n    const placeholder = /** @type {!_multipart.FormDataFile} */ ({\n      fieldname,\n    })\n\n    switch (this.strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': this.req.files.push(placeholder); break\n    case 'OBJECT':\n      if (this.req.files[fieldname]) {\n        this.req.files[fieldname].push(placeholder)\n      } else {\n        this.req.files[fieldname] = [placeholder]\n      }\n      break\n    }\n\n    return placeholder\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   */\n  removePlaceholder(placeholder) {\n    switch (this.strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': arrayRemove(this.req.files, placeholder); break\n    case 'OBJECT':\n      if (this.req.files[placeholder.fieldname].length == 1) {\n        delete this.req.files[placeholder.fieldname]\n      } else {\n        arrayRemove(this.req.files[placeholder.fieldname], placeholder)\n      }\n      break\n    }\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   * @param {_multipart.FormDataFile} file The information about each file.\n   */\n  replacePlaceholder(placeholder, file) {\n    if (this.strategy == 'VALUE') {\n      this.req.file = file\n      return\n    }\n\n    delete placeholder.fieldname\n    Object.assign(placeholder, file)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","const errorMessages = {\n  'LIMIT_PART_COUNT': 'Too many parts',\n  'LIMIT_FILE_SIZE': 'File too large',\n  'LIMIT_FILE_COUNT': 'Too many files',\n  'LIMIT_FIELD_KEY': 'Field name too long',\n  'LIMIT_FIELD_VALUE': 'Field value too long',\n  'LIMIT_FIELD_COUNT': 'Too many fields',\n  'LIMIT_UNEXPECTED_FILE': 'Unexpected field',\n}\n\n/**\n * @implements {_multipart.FormDataError}\n */\nexport default class FormDataError extends Error {\n  constructor(message) {\n    super(message)\n    this.code = ''\n    this.field = undefined\n  }\n  /**\n   * @param {string} code\n   * @param {string} [field]\n   */\n  static create(code, field) {\n    const message = errorMessages[code]\n    const err = new FormDataError(message)\n    err.code = code\n    if (field) err.field = field\n    return err\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').FormDataError} _multipart.FormDataError\n */","import { EventEmitter } from 'events'\n\nexport default class Counter extends EventEmitter {\n  constructor() {\n    super()\n    this.value = 0\n  }\n  increment () {\n    this.value++\n  }\n  decrement () {\n    if (--this.value === 0) this.emit('zero')\n  }\n  isZero () {\n    return (this.value === 0)\n  }\n  onceZero(fn) {\n    if (this.isZero()) return fn()\n\n    this.once('zero', fn)\n  }\n  async awaitZero() {\n    await new Promise((r, j) => {\n      this.onceZero(r)\n      this.once('error', j)\n    })\n  }\n}","import Busboy from '@goa/busboy'\nimport appendField from '@multipart/append-field'\nimport FileAppender from './file-appender'\nimport FormDataError from './error'\nimport Counter from './counter'\n\nconst testMultipart = (headers) => {\n  const contentType = headers['content-type']\n  // https://github.com/google/closure-compiler/issues/3529\n  // const { 'content-type': contentType } = headers\n  if (!contentType) return false\n  return contentType.toLowerCase().startsWith('multipart/form-data')\n}\n\n/**\n * @param {{ limits: !_goa.BusBoyLimits,\n *           preservePath: boolean,\n *           storage: !_multipart.FormDataStorageEngine,\n *           fileFilter: !_multipart.FormDataFileFilter,\n *           fileStrategy: string }} options\n */\nexport default function makeMiddleware(options) {\n  /** @type {!_goa.Middleware} */\n  async function multerMiddleware(ctx, next) {\n    const { req } = ctx\n    if (!testMultipart(req.headers)) return next()\n\n    const { limits = {}, storage, fileFilter, fileStrategy, preservePath } = options\n\n    const body = {}\n    req.body = body\n\n    const busboy = new Busboy({\n      limits,\n      preservePath,\n      headers: req.headers,\n    })\n\n    const appender = new FileAppender(fileStrategy, req)\n    const pendingWrites = new Counter()\n    const uploadedFiles = []\n    let busboyFinished = false\n\n    busboy.on('field', (fieldname, value, fieldnameTruncated, valueTruncated) => {\n      // if (fieldnameTruncated) return abortWithCode('LIMIT_FIELD_KEY')\n      if (valueTruncated)\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_VALUE', fieldname))\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits.fieldNameSize && fieldname.length > limits.fieldNameSize) {\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_KEY'))\n      }\n\n      appendField(body, fieldname, value)\n    })\n\n    // handle files\n    busboy.on('file', async (fieldname, stream, filename, encoding, mimetype) => {\n      // don't attach to the files object, if there is no file\n      if (!filename) return stream.resume()\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits.fieldNameSize && fieldname.length > limits.fieldNameSize) {\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_KEY'))\n      }\n\n      /**\n       * @suppress {checkTypes}\n       * @type {!_multipart.FormDataFile}\n       */\n      const file = {\n        fieldname,\n        originalname: filename,\n        encoding,\n        mimetype,\n        stream,\n      }\n\n      const placeholder = appender.insertPlaceholder(file)\n      let aborting = false\n      const tryCancel = () => {\n        if (aborting) {\n          appender.removePlaceholder(placeholder)\n          return aborting\n        }\n      }\n\n      stream\n        .on('error', (err) => {\n          pendingWrites.decrement()\n          busboy.emit('error', err)\n        })\n        .on('limit', () => {\n          aborting = true\n          busboy.emit('error', FormDataError.create('LIMIT_FILE_SIZE', fieldname))\n        })\n\n      let res\n      try {\n        res = await fileFilter(req, file)\n      } catch (err) {\n        appender.removePlaceholder(placeholder)\n        busboy.emit('error', err)\n        return\n      }\n\n      if (!res) {\n        appender.removePlaceholder(placeholder)\n        stream.resume()\n        return\n      }\n\n      pendingWrites.increment()\n\n      try {\n        if (tryCancel()) return\n\n        const info = await storage._handleFile(req, file)\n        const fileInfo = /** @type {!_multipart.FormDataFile} */ ({ ...file, ...info })\n\n        if (tryCancel()) {\n          return uploadedFiles.push(fileInfo)\n        }\n\n        appender.replacePlaceholder(placeholder, fileInfo)\n        uploadedFiles.push(fileInfo)\n      } catch (error) {\n        appender.removePlaceholder(placeholder)\n        if (!busboyFinished) {\n          busboy.emit('error', error)\n        } else pendingWrites.emit('error', error)\n      } finally {\n        pendingWrites.decrement()\n      }\n    })\n\n    req.pipe(busboy)\n    const remove = file => storage._removeFile(req, file)\n\n    try {\n      await new Promise((r, j) => {\n        busboy.on('error', j)\n          .on('partsLimit', () => {\n            j(FormDataError.create('LIMIT_PART_COUNT'))\n          })\n          .on('filesLimit', () => {\n            j(FormDataError.create('LIMIT_FILE_COUNT'))\n          })\n          .on('fieldsLimit', () => {\n            j(FormDataError.create('LIMIT_FIELD_COUNT'))\n          })\n          .on('finish', r)\n      })\n    } catch(err) {\n      await pendingWrites.awaitZero()\n      const errors = await removeUploadedFiles(uploadedFiles, remove)\n      err['storageErrors'] = errors\n\n      throw err\n    } finally {\n      busboyFinished = true\n      req.unpipe(busboy)\n      busboy.removeAllListeners()\n    }\n    await pendingWrites.awaitZero()\n    await next()\n  }\n  return multerMiddleware\n}\n\n/**\n * @param {!Array<_multipart.FormDataFile>} uploadedFiles The list of uploaded files.\n * @param {!Function} remove The remove function.\n */\nasync function removeUploadedFiles(uploadedFiles, remove) {\n  const errors = await uploadedFiles.reduce(async (acc, file) => {\n    const accRes = await acc\n    try {\n      await remove(file)\n    } catch (err) {\n      err['file'] = file\n      err['field'] = file['fieldname']\n      accRes.push(err)\n    }\n    return accRes\n  }, [])\n\n  return errors\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/busboy').BusBoyLimits} _goa.BusBoyLimits\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFileFilter} _multipart.FormDataFileFilter\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataStorageEngine} _multipart.FormDataStorageEngine\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","import erotic from 'erotic'\n\nfunction checkArgumentIndex(length, i) {\n  if (i > length - 2) {\n    throw new Error('Function does not accept that many arguments.')\n  }\n}\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn !== 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error('Function does not accept any arguments.')\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      args.forEach((arg, i) => {\n        checkArgumentIndex(fnLength, i)\n      })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      checkArgumentIndex(fnLength, 0)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","import { lstat, readdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { join, relative } from 'path'\n\n/**\n * Update information about directory's content with lstat.\n * @param {string} dirPath Path to the root directory\n * @param {!Array<string>} dirContent\n * @returns {!Promise<!Array<!_wrote.File>>} An array with file objects.\n */\nasync function lstatFiles(dirPath, dirContent) {\n  const readFiles = dirContent.map(async (relativePath) => {\n    const path = join(dirPath, relativePath)\n    const ls = await makePromise(lstat, path)\n    return {\n      lstat: ls,\n      path,\n      relativePath,\n    }\n  })\n  const res = await Promise.all(readFiles)\n  return res\n}\n\n/**\n * Check if lstat result is a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is a directory\n */\nconst isDirectory = lstatRes => lstatRes.lstat.isDirectory()\n/**\n * Check if lstat result is not a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is not a directory\n */\nconst isNotDirectory = lstatRes => !lstatRes.lstat.isDirectory()\n\nconst getType = (lstatRes) => {\n  if (lstatRes.lstat.isDirectory()) {\n    return 'Directory'\n  }\n  if (lstatRes.lstat.isFile()) {\n    return 'File'\n  }\n  if (lstatRes.lstat.isSymbolicLink()) {\n    return 'SymbolicLink'\n  }\n}\n\n/**\n * Read a directory, and return its structure as an object. Only `Files`, `Directories` and `Symlinks` are included!\n * @param {string} dirPath Path to the directory.\n * @param {!_wrote.ReadDirStructureOpts} [opts] Options for reading the dir structure.\n * @param {!Array<string>} [opts.ignore] The list of paths inside of the directory to ignore, e.g., `[.git]`.\n * @returns {!Promise<!_wrote.DirectoryStructure>} An object reflecting the directory structure.\n * @example\n  ```js\n  const res = await readDirStructure('dir')\n  // result:\n  {\n    type: 'Directory',\n    content: {\n      'data.txt': {\n        type: 'File'\n      },\n      subdir: {\n        type: 'Directory',\n        content: {\n          'data-ln.txt': {\n            type: 'SymbolicLink'\n          },\n        }\n      }\n    }\n  }\n  ```\n */\nexport default async function readDirStructure(dirPath, opts = {}) {\n  if (!dirPath) {\n    throw new Error('Please specify a path to the directory')\n  }\n  const { ignore = [] } = opts\n  const ls = await makePromise(lstat, dirPath)\n  if (!ls.isDirectory()) {\n    const err = new Error('Path is not a directory')\n    err.code = 'ENOTDIR'\n    throw err\n  }\n  const dir = /** @type {!Array<string>} */ (await makePromise(readdir, dirPath))\n  const lsr = await lstatFiles(dirPath, dir)\n\n  const directories = lsr.filter(isDirectory) // reduce at once\n  const notDirectories = lsr.filter(isNotDirectory)\n\n  const files = notDirectories.reduce((acc, current) => {\n    const type = getType(current)\n    return {\n      ...acc,\n      [current.relativePath]: {\n        type,\n      },\n    }\n  }, {})\n\n  const dirs = await directories.reduce(async (acc, { path, relativePath }) => {\n    const rel = relative(dirPath, path)\n    if (ignore.includes(rel)) return acc\n    const res = await acc\n    const structure = await readDirStructure(path)\n    return {\n      ...res,\n      [relativePath]: structure,\n    }\n  }, {})\n\n  const content = {\n    ...files,\n    ...dirs,\n  }\n  return {\n    content,\n    type: 'Directory',\n  }\n}\n\n/**\n * After running the `readDirStructure`, this function can be used to flatten the `content` output and return the list of all files (not including symlinks).\n * @param {!_wrote.Content} content The recursive content of the directory.\n * @param {string} path The path to the directory.\n */\nexport const getFiles = (content, path) => {\n  let files = []\n  let dirs = []\n  Object.keys(content).forEach((key) => {\n    const { type } = content[key]\n    if (type == 'File') files.push(join(path, key))\n    else if (type == 'Directory') dirs.push(key)\n  })\n  const dirFiles = dirs.reduce((acc, dir) => {\n    const { content: c } =\n      /** @type {!_wrote.Content} */ (content[dir])\n    const f = getFiles(c, join(path, dir))\n    return [...acc, ...f]\n  }, [])\n  return [...files, ...dirFiles]\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Content} _wrote.Content\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').ReadDirStructureOpts} _wrote.ReadDirStructureOpts\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').DirectoryStructure} _wrote.DirectoryStructure\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').File} _wrote.File\n */","import { unlink, rmdir, lstat } from 'fs'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport makePromise from 'makepromise'\nimport { join } from 'path'\n\nconst removeFile = async (path) => {\n  await makePromise(unlink, path)\n}\n\n/**\n * Removes files and directories.\n * @param {string} path Path to remove.\n */\nconst removeDir = async (path) => {\n  const { content } = await readDirStructure(path)\n  const files = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'File' || type == 'SymbolicLink') return true\n    })\n  const dirs = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'Directory') return true\n    })\n  const filesFullPaths = files.map(file => join(path, file))\n  await Promise.all(\n    filesFullPaths.map(removeFile)\n  )\n  const dirsFullPaths = dirs.map(dir => join(path, dir))\n  await Promise.all(\n    dirsFullPaths.map(removeDir)\n  )\n  await makePromise(rmdir, path)\n}\n\n/**\n * Removes a path from the filesystem.\n * @param {string} path Path to the file or directory to remove.\n */\nconst rm = async (path) => {\n  const s = /** @type {!fs.Stats} */ (\n    await makePromise(lstat, path)\n  )\n  if (s.isDirectory()) {\n    await removeDir(path)\n  } else {\n    await removeFile(path)\n  }\n}\n\nexport default rm\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */\n\n/* documentary types/index.xml */\n","import { mkdir, mkdirSync } from 'fs'\nimport makePromise from 'makepromise'\nimport { dirname } from 'path'\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport default async function ensurePath(path) {\n  const dir = dirname(path)\n  try {\n    await make(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nasync function make(dir) {\n  try {\n    await makePromise(mkdir, dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      await make(parentDir)\n      await make(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to synchronously, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport function ensurePathSync(path) {\n  const dir = dirname(path)\n  try {\n    makeSync(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nfunction makeSync(dir) {\n  try {\n    mkdirSync(dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      makeSync(parentDir)\n      makeSync(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}","import { pseudoRandomBytes } from 'crypto'\nimport { tmpdir } from 'os'\nimport { join } from 'path'\nimport { createWriteStream } from 'fs'\nimport rm from '@wrote/rm'\nimport { ensurePathSync } from '@wrote/ensure-path'\n\nasync function getFilename() {\n  return await new Promise((r, j) => {\n    pseudoRandomBytes(16, (err, raw) => {\n      if (err) return j(err)\n      r(raw.toString('hex'))\n    })\n  })\n}\n\n/**\n * @implements {_multipart.FormDataStorageEngine}\n */\nexport default class DiskStorage {\n  /**\n   * @param {_multipart.FormDataDiskStorageOptions} [opts] The options.\n   */\n  constructor(opts = {}) {\n    const {\n      filename = getFilename,\n      destination = tmpdir,\n    } = opts\n\n    this.getFilename = filename\n\n    if (typeof destination == 'string') {\n      ensurePathSync(join(destination, 'file.dat'))\n      this.getDestination = () => destination\n    } else {\n      this.getDestination = destination\n    }\n  }\n  async _handleFile(req, file) {\n    const destination = await this.getDestination(req, file)\n    const filename = await this.getFilename(req, file)\n\n    const path = join(destination, filename)\n    const outStream = createWriteStream(path)\n\n    await new Promise((r, j) => {\n      file['stream'].pipe(outStream)\n      file['stream'].on('error', j)\n      outStream.on('error', j)\n      outStream.on('finish', r)\n    })\n    return {\n      'destination': destination,\n      'filename': filename,\n      'path': path,\n      'size': outStream.bytesWritten,\n    }\n  }\n\n  async _removeFile(req, file) {\n    const { 'path': path } = file\n\n    delete file['destination']\n    delete file['filename']\n    delete file['path']\n    await rm(path)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataStorageEngine} _multipart.FormDataStorageEngine\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataDiskStorageOptions} _multipart.FormDataDiskStorageOptions\n */","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { collect } from 'catchment'\n\n/**\n * @implements {_multipart.FormDataStorageEngine}\n */\nexport default class MemoryStorage {\n  /**\n   * @param {http.IncomingMessage} req\n   * @param {_multipart.FormDataFile} file\n   */\n  async _handleFile(req, file) {\n    const data = await collect(/** @type {stream.Readable } */ (file['stream']), {\n      binary: true,\n    })\n    return {\n      'buffer': data,\n      'size': data.length,\n    }\n  }\n  async _removeFile(req, file) {\n    delete file['buffer']\n    return null\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","import makeMiddleware from './lib/make-middleware'\nimport DiskStorage from './storage/disk'\nimport MemoryStorage from './storage/memory'\nimport FormDataError from './lib/error'\n\nfunction allowAll() {\n  return true\n}\n\n/**\n * @implements {_multipart.FormData}\n */\nexport default class MultipartFormData {\n  /**\n   * Creates a new instance.\n   * @param {_multipart.FormDataConfig} [options] The configuration for the instance.\n   */\n  constructor(options = {}) {\n    const { storage, dest, limits = {}, preservePath = false, fileFilter = allowAll } = options\n    if (storage) {\n      this.storage = storage\n    } else if (dest) {\n      this.storage = new DiskStorage({ destination: dest })\n    } else {\n      this.storage = new MemoryStorage()\n    }\n\n\n    this.limits = /** @type {!_goa.BusBoyLimits} */ (limits)\n    this.preservePath = preservePath\n    this.fileFilter = fileFilter\n  }\n\n  /**\n   * @param {!Array<_multipart.FormDataField>} fields The fields to accept.\n   * @param {string} fileStrategy The strategy.\n   */\n  setup(fields, fileStrategy) {\n    const fileFilter = this.fileFilter\n    const filesLeft = {}\n\n    fields.forEach(({ maxCount = Infinity, name }) => {\n      filesLeft[name] = maxCount\n    })\n\n    /**\n     * @type {_multipart.FormDataFileFilter}\n     */\n    function wrappedFileFilter(req, file) {\n      if ((filesLeft[file.fieldname] || 0) <= 0)\n        throw FormDataError.create('LIMIT_UNEXPECTED_FILE', file.fieldname)\n\n      filesLeft[file.fieldname] -= 1\n      return fileFilter(req, file)\n    }\n\n    return {\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: wrappedFileFilter,\n      fileStrategy: fileStrategy,\n    }\n  }\n\n  single(name) {\n    const conf = this.setup([{ name: name, maxCount: 1 }], 'VALUE')\n    return makeMiddleware(conf)\n  }\n  array(name, maxCount) {\n    const conf = this.setup([{ name: name, maxCount: maxCount }], 'ARRAY')\n    return makeMiddleware(conf)\n  }\n  /**\n   *\n   * @param {!Array<_multipart.FormDataField>} fields The fields to accept.\n   */\n  fields(fields) {\n    const conf = this.setup(fields, 'OBJECT')\n    return makeMiddleware(conf)\n  }\n  none() {\n    const conf = this.setup([], 'NONE')\n    return makeMiddleware(conf)\n  }\n  any() {\n    return makeMiddleware({\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: this.fileFilter,\n      fileStrategy: 'ARRAY',\n    })\n  }\n}\n\n/**\n * @param {_multipart.FormDataDiskStorageOptions} [opt] Options for the disk storage.\n */\nexport const diskStorage = (opt = {}) => {\n  return new DiskStorage(opt)\n}\n\nexport const memoryStorage = () => {\n  return new MemoryStorage()\n}\n\nexport { FormDataError }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataConfig} _multipart.FormDataConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataField} _multipart.FormDataField\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataFileFilter} _multipart.FormDataFileFilter\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataDiskStorageOptions} _multipart.FormDataDiskStorageOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/busboy').BusBoyLimits} _goa.BusBoyLimits\n */","/*!\n * resolve-path\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport createError from '@goa/http-errors'\nimport { join, normalize, resolve, sep, isAbsolute } from 'path'\n\n/**\n * Module variables.\n * @private\n */\n\nconst UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Resolve relative path against a root path\n * @param {string} rootPath\n * @param {string} relativePath\n * @return {string}\n */\nexport default function resolvePath (rootPath, relativePath) {\n  var path = relativePath\n  var root = rootPath\n\n  // root is optional, similar to root.resolve\n  if (arguments.length === 1) {\n    path = rootPath\n    root = process.cwd()\n  }\n\n  if (root == null) {\n    throw new TypeError('argument rootPath is required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('argument rootPath must be a string')\n  }\n\n  if (path == null) {\n    throw new TypeError('argument relativePath is required')\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('argument relativePath must be a string')\n  }\n\n  // containing NULL bytes is malicious\n  if (path.indexOf('\\0') !== -1) {\n    throw createError(400, 'Malicious Path')\n  }\n\n  // path should never be absolute\n  if (isAbsolute(path)) {\n    throw createError(400, 'Malicious Path')\n  }\n\n  // path outside root\n  if (UP_PATH_REGEXP.test(normalize('.' + sep + path))) {\n    throw createError(403)\n  }\n\n  // join the relative path\n  return normalize(join(resolve(root), path))\n}","import Debug from '@idio/debug'\nimport { normalize, basename, extname, resolve, parse, sep } from 'path'\nimport createError from '@goa/http-errors'\nimport assert from 'assert'\nimport { exists as fsExists, stat as fsStat, createReadStream } from 'fs'\nimport makePromise from 'makepromise'\nimport resolvePath from '../resolve-path'\n\nconst exists = async (...args) => {\n  return await makePromise(fsExists, ...args)\n}\nconst stat = async (...args) => {\n  return await makePromise(fsStat, ...args)\n}\n\nconst debug = Debug('koa-send')\n\n/**\n * Send file at `path` with the given `options` to the koa `ctx`.\n * @param {_goa.Context} ctx\n * @param {string} path\n * @param {_idio.KoaSendConfig} [opts]\n */\nexport default async function send(ctx, path, opts = {}) {\n  assert(ctx, 'koa context required')\n  assert(path, 'pathname required')\n\n  // options\n  debug('send \"%s\" %j', path, opts)\n  const root = opts.root ? normalize(resolve(opts.root)) : ''\n  const trailingSlash = path[path.length - 1] == '/'\n  path = path.substr(parse(path).root.length)\n  const index = opts.index\n  const maxage = opts.maxage || opts.maxAge || 0\n  const immutable = opts.immutable || false\n  const hidden = opts.hidden || false\n  const format = opts.format !== false\n  const extensions = Array.isArray(opts.extensions) ? opts.extensions : false\n  const brotli = opts.brotli !== false\n  const gzip = opts.gzip !== false\n  const setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // normalize path\n  path = decode(path)\n\n  if (path == -1) return ctx.throw(400, 'failed to decode')\n\n  // index file support\n  if (index && trailingSlash) path += index\n\n  path = resolvePath(root, path)\n\n  // hidden file support, ignore\n  if (!hidden && isHidden(root, path)) return\n\n  let encodingExt = ''\n  // serve brotli file when possible otherwise gzipped file when possible\n  if (ctx.acceptsEncodings('br', 'identity') == 'br' && brotli && (await exists(path + '.br'))) {\n    path = path + '.br'\n    ctx.set('Content-Encoding', 'br')\n    ctx.res.removeHeader('Content-Length')\n    encodingExt = '.br'\n  } else if (ctx.acceptsEncodings('gzip', 'identity') == 'gzip' && gzip && (await exists(path + '.gz'))) {\n    path = path + '.gz'\n    ctx.set('Content-Encoding', 'gzip')\n    ctx.res.removeHeader('Content-Length')\n    encodingExt = '.gz'\n  }\n\n  if (extensions && !/\\.[^/]*$/.exec(path)) {\n    const list = [].concat(extensions)\n    for (let i = 0; i < list.length; i++) {\n      let ext = list[i]\n      if (typeof ext !== 'string') {\n        throw new TypeError('option extensions must be array of strings or false')\n      }\n      if (!/^\\./.exec(ext)) ext = '.' + ext\n      if (await exists(path + ext)) {\n        path = path + ext\n        break\n      }\n    }\n  }\n\n  // stat\n  let stats\n  try {\n    stats = await stat(path)\n\n    // Format the path to serve static file servers\n    // and not require a trailing slash for directories,\n    // so that you can do both `/directory` and `/directory/`\n    if (stats.isDirectory()) {\n      if (format && index) {\n        path += '/' + index\n        stats = await stat(path)\n      } else {\n        return\n      }\n    }\n  } catch (err) {\n    const notfound = ['ENOENT', 'ENAMETOOLONG', 'ENOTDIR']\n    if (notfound.includes(err.code)) {\n      throw createError(404, err)\n    }\n    err.status = 500\n    throw err\n  }\n\n  if (setHeaders) setHeaders(ctx.res, path, stats)\n\n  // stream\n  ctx.set('Content-Length', stats.size)\n  if (!ctx.response.get('Last-Modified')) ctx.set('Last-Modified', stats.mtime.toUTCString())\n  if (!ctx.response.get('Cache-Control')) {\n    const directives = ['max-age=' + (maxage / 1000 | 0)]\n    if (immutable) {\n      directives.push('immutable')\n    }\n    ctx.set('Cache-Control', directives.join(','))\n  }\n  if (!ctx.type) ctx.type = type(path, encodingExt)\n  ctx.body = createReadStream(path)\n\n  return path\n}\n\n/**\n * Check if it's hidden.\n */\n\nfunction isHidden (root, path) {\n  path = path.substr(root.length).split(sep)\n  for (let i = 0; i < path.length; i++) {\n    if (path[i][0] == '.') return true\n  }\n  return false\n}\n\n/**\n * File type.\n */\n\nfunction type (file, ext) {\n  return ext !== '' ? extname(basename(file, ext)) : extname(file)\n}\n\n/**\n * Decode `path`.\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/goa').Context} _goa.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types/modules').KoaSendConfig} _idio.KoaSendConfig\n */","import Debug from '@idio/debug'\nimport { resolve } from 'path'\nimport assert from 'assert'\nimport send from '../koa-send'\n\nconst debug = Debug('koa-static')\n\n/**\n * Serve static files from `root`.\n * @param {string} root\n * @param {_idio.KoaStaticConfig} [opts]\n */\nexport default (root, opts = {}) => {\n  assert(root, 'root directory is required to serve files')\n\n  // options\n  debug('static \"%s\" %j', root, opts)\n  opts.root = resolve(root)\n  if (opts.index !== false) opts.index = opts.index || 'index.html'\n\n  if (!opts.defer) {\n    /** @type {!_goa.Middleware} */\n    const serve = async (ctx, next) => {\n      let done = false\n\n      if (ctx.method == 'HEAD' || ctx.method == 'GET') {\n        try {\n          done = await send(ctx, ctx.path, opts)\n        } catch (err) {\n          if (err.status != 404) {\n            throw err\n          }\n        }\n      }\n\n      if (!done) {\n        await next()\n      }\n    }\n    return serve\n  }\n\n  /** @type {!_goa.Middleware} */\n  const serve = async (ctx, next) => {\n    await next()\n\n    if (ctx.method != 'HEAD' && ctx.method != 'GET') return\n    // response is already handled\n    if (ctx.body != null || ctx.status != 404) return\n\n    try {\n      await send(ctx, ctx.path, opts)\n    } catch (err) {\n      if (err.status != 404) {\n        throw err\n      }\n    }\n  }\n  return serve\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').KoaStaticConfig} _idio.KoaStaticConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */","/*!\n * compressible\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Jeremiah Senkpiel\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nconst db = require(/* depack-require */ 'mime-db')\n\n/**\n * Module variables.\n * @private\n */\n\nconst COMPRESSIBLE_TYPE_REGEXP = /^text\\/|\\+(?:json|text|xml)$/i\nconst EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\n\n/**\n * Module exports.\n * @public\n */\n\n/**\n * Checks if a type is compressible.\n *\n * @param {string} type\n * @return {?boolean} compressible\n */\nexport default function compressible (type) {\n  if (!type || typeof type != 'string') {\n    return false\n  }\n\n  // strip parameters\n  const match = EXTRACT_TYPE_REGEXP.exec(type)\n  const mime = match && match[1].toLowerCase()\n  const data = db[mime]\n\n  // return database information\n  if (data && data['compressible'] !== undefined) {\n    return data['compressible']\n  }\n\n  // fallback to regexp or unknown\n  return COMPRESSIBLE_TYPE_REGEXP.test(mime) || null\n}","/**\n * Check if `body` should be interpreted as json.\n */\nexport default function isJSON(body) {\n  if (!body) return false\n  if ('string' == typeof body) return false\n  if ('function' == typeof body['pipe']) return false\n  if (Buffer.isBuffer(body)) return false\n  return true\n}\n\n/**\n * @license MIT\n * Jonathan Ong\n * https://npmjs.org/koa-is-json\n */\n","export default zlib\nexport const {\n  Deflate,\n  DeflateRaw,\n  Gunzip,\n  Gzip,\n  Inflate,\n  InflateRaw,\n  Unzip,\n  Z_BEST_COMPRESSION,\n  Z_BEST_SPEED,\n  Z_BLOCK,\n  Z_BUF_ERROR,\n  Z_DATA_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_ERRNO,\n  Z_FILTERED,\n  Z_FINISH,\n  Z_FIXED,\n  Z_FULL_FLUSH,\n  Z_HUFFMAN_ONLY,\n  Z_MEM_ERROR,\n  Z_NEED_DICT,\n  Z_NO_COMPRESSION,\n  Z_NO_FLUSH,\n  Z_OK,\n  Z_PARTIAL_FLUSH,\n  Z_RLE,\n  Z_STREAM_END,\n  Z_STREAM_ERROR,\n  Z_SYNC_FLUSH,\n  Z_VERSION_ERROR,\n  constants,\n  createDeflate,\n  createDeflateRaw,\n  createGunzip,\n  createGzip,\n  createInflate,\n  createInflateRaw,\n  createUnzip,\n  deflate,\n  deflateRaw,\n  deflateRawSync,\n  deflateSync,\n  gunzip,\n  gunzipSync,\n  gzip,\n  gzipSync,\n  inflate,\n  inflateRaw,\n  inflateRawSync,\n  inflateSync,\n  unzip,\n  unzipSync,\n} = zlib","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n}\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  var mag = Math.abs(value)\n  var thousandsSeparator = (options && options.thousandsSeparator) || ''\n  var unitSeparator = (options && options.unitSeparator) || ''\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  var fixedDecimals = Boolean(options && options.fixedDecimals)\n  var unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB'\n    } else if (mag >= map.tb) {\n      unit = 'TB'\n    } else if (mag >= map.gb) {\n      unit = 'GB'\n    } else if (mag >= map.mb) {\n      unit = 'MB'\n    } else if (mag >= map.kb) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()]\n  var str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val !== 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val)\n  var floatValue\n  var unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","import compressible from './compressible'\nimport isJSON from '@goa/goa/modules/koa-is-json'\nimport { empty } from '@goa/statuses'\nimport Stream from 'stream'\nimport { createGzip, createDeflate } from 'zlib'\nimport bytes from './bytes'\n\n/**\n * Encoding methods supported.\n */\nconst encodingMethods = {\n  gzip: createGzip,\n  deflate: createDeflate,\n}\n\n/**\n * @type {_goa.compress}\n */\nfunction Compress(options = {}) {\n  let { filter = compressible, threshold = 1024 } = options\n  if (typeof threshold == 'string') threshold = bytes(threshold)\n\n  /**\n   * @type {!_idio.Middleware}\n   */\n  async function middleware(ctx, next) {\n    ctx.vary('Accept-Encoding')\n\n    await next()\n\n    let { body } = ctx\n    if (!body) return\n    if (ctx.res.headersSent || !ctx.writable) return\n    if (ctx.compress === false) return\n    if (ctx.request.method == 'HEAD') return\n    if (empty[ctx.response.status]) return\n    if (ctx.response.get('Content-Encoding')) return\n\n    // forced compression or implied\n    if (!(ctx.compress === true || filter(ctx.response.type))) return\n\n    // identity\n    const encoding = /** @type {string} */ (ctx.acceptsEncodings('gzip', 'deflate', 'identity'))\n    if (!encoding) ctx.throw(406, 'supported encodings: gzip, deflate, identity')\n    if (encoding == 'identity') return\n\n    // json\n    if (isJSON(body)) body = ctx.body = JSON.stringify(body)\n\n    // threshold\n    if (threshold && ctx.response.length < threshold) return\n\n    ctx.set('Content-Encoding', encoding)\n    ctx.res.removeHeader('Content-Length')\n\n    const stream = ctx.body = encodingMethods[encoding](options)\n\n    if (body instanceof Stream) {\n      body.pipe(stream)\n    } else {\n      stream.end(body)\n    }\n  }\n  return /** @type {!_goa.Middleware} */ (middleware)\n}\n\nexport default Compress\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Middleware} _idio.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CompressConfig} _goa.CompressConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').compress} _goa.compress\n */","import compose from '@goa/compose'\nimport session from '@goa/session'\nimport Keygrip from '@goa/cookies/src/Keygrip'\nimport cors from '@goa/cors'\nimport FormData from '@multipart/form-data'\nimport serve from '../modules/koa-static'\nimport Mount from '../modules/koa-mount'\nimport compress from '@goa/compress'\nimport { Z_SYNC_FLUSH } from 'zlib'\n\nconst map = {\n  // multer: setupMulter,\n  // csrf: setupCsrf,\n  // bodyparser: setupBodyParser,\n  // checkauth: setupCheckAuth,\n  // logger: setupLogger,\n  /**\n   * @param {!_goa.Application} app\n   * @param {_idio.KoaStaticConfig} config\n   * @param {_idio.StaticOptions} options\n   */\n  'static'(app, config, {\n    root = [],\n    maxage,\n    mount,\n  }) {\n    const roots = Array.isArray(root) ? root : [root]\n    const m = roots.map((r) => {\n      const fn = serve(r, {\n        maxage,\n        ...config,\n      })\n      return fn\n    })\n    const c = compose(m)\n    if (mount) return Mount(mount, c)\n    return c\n  },\n  /**\n   * @param {!_goa.Application} app\n   * @param {_goa.CompressConfig} config\n   * @param {_idio.CompressOptions} options\n   */\n  'compress'(app, config, {\n    threshold = 1024,\n  }) {\n    const fn = compress({\n      threshold,\n      flush: Z_SYNC_FLUSH,\n      ...config,\n    })\n    return fn\n  },\n  /**\n   * The session middleware.\n   * @param {!_goa.Application} app\n   * @param {!_idio.SessionConfig} config\n   * @param {!_idio.SessionOptions} options\n   */\n  'session'(app, config, { keys }) {\n    if (!(keys instanceof Keygrip) && !Array.isArray(keys))\n      throw new Error('Keys must be an array or an instance of Keygrip / child classes.')\n\n    app.keys = keys\n    const ses = session(config)\n    return ses\n  },\n  /**\n   * The CORS middleware.\n   * @param {!_goa.Application} app\n   * @param {_goa.CorsConfig} config\n   * @param {_idio.CorsOptions} options\n   */\n  'cors'(app, config, { origin }) {\n    const o = Array.isArray(origin) ? (ctx) => {\n      const oh = ctx.get('Origin')\n      const found = origin.find(a => a == oh)\n      return found\n    } : origin\n    const fn = cors({\n      origin: o,\n      ...config,\n    })\n    return fn\n  },\n  /**\n   * The Form Data middleware.\n   * @param {!_goa.Application} app\n   * @param {_multipart.FormDataConfig} config\n   * @param {_idio.FormDataOptions} options\n   */\n  'form'(app, config, options) {\n    // todo check options to return middleware\n    const f = new FormData(config)\n    return f\n  },\n  // frontend: setupFrontend,\n}\n\n/**\n * Initialise the middleware function, either using the middleware constructors from the bundle, or a custom one.\n * @param {string} name The name of the middleware.\n * @param {!_idio.ConfigItem} conf The item from the middleware config.\n * @param {!_goa.Application} app The application instance.\n */\nasync function initMiddleware(name, conf, app) {\n  if (typeof conf == 'function') {\n    const c = conf\n    app.use(c)\n    return c\n  }\n  const { use, config = {}, middlewareConstructor,\n    ...options } = conf\n\n  /** @type {!_idio.MiddlewareConstructor} */\n  let fn\n  if (name in map) {\n    fn = map[name]\n  } else if (middlewareConstructor) {\n    fn = middlewareConstructor\n    if (typeof fn != 'function') {\n      throw new Error(`Expecting a function in the \"middlewareConstructor\" of the ${name} middleware.`)\n    }\n  } else {\n    throw new Error(`Unknown middleware config item \"${name}\". Either specify one from the idio bundle, or pass the \"middlewareConstructor\" property.`)\n  }\n  const res = await fn(app, config, options)\n\n  if (use) app.use(res)\n  return res\n}\n\n/**\n * @param {!_idio.MiddlewareConfig} middlewareConfig\n * @param {!_goa.Application} app\n */\nexport default async function setupMiddleware(middlewareConfig, app) {\n  /** @type {!_idio.ConfiguredMiddleware} */\n  const res = await Object.keys(middlewareConfig)\n    .reduce(async (acc, name) => {\n      acc = await acc\n      const conf = middlewareConfig[name]\n      let installed\n      if (Array.isArray(conf)) {\n        const p = conf.map(async (c) => {\n          await initMiddleware(name, c, app)\n        })\n        installed = await Promise.all(p)\n      } else {\n        installed = await initMiddleware(name, conf, app)\n      }\n      return {\n        ...acc,\n        [name]: installed,\n      }\n    }, {})\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').StaticOptions} _idio.StaticOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CompressOptions} _idio.CompressOptions\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').SessionOptions} _idio.SessionOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').SessionConfig} _idio.SessionConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CorsOptions} _idio.CorsOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CorsConfig} _goa.CorsConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').KoaStaticConfig} _idio.KoaStaticConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CompressConfig} _goa.CompressConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').MiddlewareConfig} _idio.MiddlewareConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').ConfigItem} _idio.ConfigItem\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').MiddlewareConstructor} _idio.MiddlewareConstructor\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataConfig} _multipart.FormDataConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataOptions} _idio.FormDataOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').ConfiguredMiddleware} _idio.ConfiguredMiddleware\n */","/**\n * @license MIT 2014 Jordan Harband\n * https://github.com/ljharb/is-generator-function\n */\nconst toStr = Object.prototype.toString\nconst fnToStr = Function.prototype.toString\nconst isFnRegex = /^\\s*(?:function)?\\*/\nconst hasToStringTag = typeof Symbol == 'function' && typeof Symbol.toStringTag == 'symbol'\nconst getProto = Object.getPrototypeOf\nconst getGeneratorFunc = function () { // eslint-disable-line consistent-return\n  if (!hasToStringTag) {\n    return false\n  }\n  try {\n    return Function('return function*() {}')()\n  } catch (e) { /**/}\n}\nconst generatorFunc = getGeneratorFunc()\nconst GeneratorFunction = generatorFunc ? getProto(generatorFunc) : {}\n\n/**\n * Check if the function is a generator function.\n * @param {!Function} fn The function to check for being a generator.\n */\nexport default function isGeneratorFunction(fn) {\n  if (typeof fn != 'function') {\n    return false\n  }\n  if (isFnRegex.test(fnToStr.call(fn))) {\n    return true\n  }\n  if (!hasToStringTag) {\n    const str = toStr.call(fn)\n    return str == '[object GeneratorFunction]'\n  }\n  return getProto(fn) == GeneratorFunction\n}","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {!Array} stuff\n * @param {Function} done\n */\nexport default function first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event == 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport first from '../ee-first'\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @param {!Function} listener\n */\nexport default function onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    setImmediate(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @public\n */\nexport function isFinished(msg) {\n  const socket = msg.socket\n\n  if (typeof msg.finished == 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete == 'boolean') {\n    // IncomingMessage\n    /**\n     * @suppress {checkTypes}\n     */\n    const u = msg['upgrade']\n    return Boolean(u || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @param {Function} callback\n * @private\n */\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @private\n */\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {!(http.IncomingMessage|http.OutgoingMessage)} msg\n * @return {Function}\n * @private\n */\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n// /**\n//  * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n//  *\n//  * @param {!http.ServerResponse} res\n//  * @param {Function} callback\n//  * @private\n//  */\n// function patchAssignSocket(res, callback) {\n//   /** @suppress {checkTypes} */\n//   const assignSocket = res['assignSocket']\n\n//   if (typeof assignSocket != 'function') return\n\n//   // res.on('socket', callback) is broken in 0.8\n//   res.assignSocket = function _assignSocket(socket) {\n//     assignSocket.call(this, socket)\n//     callback(socket)\n//   }\n// }\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').OutgoingMessage} http.OutgoingMessage\n */","import { ReadStream } from 'fs'\nimport Stream from 'stream'\n\n/**\n * Destroy a stream.\n * @param {!(Stream|ReadStream)} stream\n */\nexport default function destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream)\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream\n  }\n\n  if (typeof stream.destroy == 'function') {\n    stream.destroy()\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n * @param {!ReadStream} stream\n * @private\n */\nfunction destroyReadStream(stream) {\n  stream.destroy()\n\n  if (typeof stream.close == 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n\n  return stream\n}\n\n/**\n * On open handler to close stream.\n * @this {Stream}\n * @private\n */\nfunction onOpenClose() {\n  if (typeof this.fd == 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * https://npmjs.org/destroy\n */","const db = require(/* ok depack*/ 'mime-db')\nimport { extname } from 'path'\n\nconst EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nconst TEXT_TYPE_REGEXP = /^text\\//i\n\nexport const charsets = { 'lookup': charset }\n\nexport const extensions = Object.create(null)\nexport const types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(extensions, types)\n\n/**\n * Get the default charset for a MIME type.\n * @param {string} type\n * @return {boolean|string}\n */\nexport function charset(type) {\n  if (!type || typeof type != 'string') return false\n\n  // TODO: use media-typer\n  const match = EXTRACT_TYPE_REGEXP.exec(type)\n  const mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime['charset']) return mime['charset']\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) return 'UTF-8'\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n * @param {string} str\n * @return {boolean|string}\n */\nexport function contentType(str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str != 'string') return false\n\n  let mime = str.indexOf('/') == -1\n    ? lookup(str)\n    : str\n\n  if (!mime) return false\n\n  let m = /** @type {string} */ (mime)\n  // TODO: use content-type or other module\n  if (!m.includes('charset')) {\n    const c = charset(m)\n    if (c) m += '; charset=' + c.toLowerCase()\n  }\n\n  return m\n}\n\n/**\n * Get the default extension for a MIME type.\n * @param {string} type\n * @return {boolean|string}\n */\nexport function extension(type) {\n  if (!type || typeof type != 'string') return false\n\n  // TODO: use media-typer\n  const match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  const exts = match && extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) return false\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n * @param {string} path\n * @return {boolean|string}\n */\nexport function lookup(path) {\n  if (!path || typeof path != 'string') return false\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  let e = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!e) return false\n\n  return types[e] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\nfunction populateMaps(es, ts) {\n  // source preference (least -> most)\n  const preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach((type) => {\n    const mime = db[type]\n    const exts = mime['extensions']\n\n    if (!exts || !exts.length) return\n\n    // mime -> extensions\n    es[type] = exts\n\n    // extension -> mime\n    for (let i = 0; i < exts.length; i++) {\n      const e = exts[i]\n\n      if (ts[e]) {\n        const from = preference.indexOf(db[ts[e]]['source'])\n        const to = preference.indexOf(mime['source'])\n\n        if (ts[e] != 'application/octet-stream' &&\n          (from > to || (from == to && ts[e].substr(0, 12) == 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      ts[e] = type\n    }\n  })\n}\n\n/**\n * @license MIT\n * Copyright (c) 2014 Jonathan Ong <me@jongleberry.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n * https://npmjs.com/package/mime-types\n */","/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nconst PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nconst TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nconst TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nconst QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nconst QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nconst TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Format object to media type.\n *\n * @param {!ContentType} obj\n */\nexport function format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  const { parameters, type } = obj\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  let string = type\n\n  // append parameters\n  if (parameters && typeof parameters == 'object') {\n    let param\n    const params = Object.keys(parameters).sort()\n\n    for (let i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n * @param {string|!http.IncomingMessage|!http.ServerResponse} string\n */\nexport function parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  const header = typeof string == 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header != 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  let index = header.indexOf(';')\n  const type = index != -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  const obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index != -1) {\n    let key\n    let match\n    let value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] == '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index != header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {!http.IncomingMessage|!http.ServerResponse|string} obj\n */\nfunction getcontenttype(obj) {\n  let header\n\n  if (typeof obj.getHeader == 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers == 'object') {\n    // req-like\n    const h = /** @type {!Object} */ (obj.headers)\n    header = h && h['content-type']\n  }\n\n  if (typeof header != 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @private\n */\nfunction qstring(val) {\n  const str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @implements {_goa.ContentType}\n */\nclass ContentType {\n  constructor(type) {\n    this.parameters = {}\n    this.type = type\n  }\n}\n\n/**\n * @license MIT content-type\n * 2015 Douglas Christopher Wilson\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n","/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nconst SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nconst TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nconst TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Format object to media type.\n *\n * @param {MediaType} obj\n */\nexport function format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  const { subtype, suffix, type } = obj\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  let string = [type, subtype].join('/')\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n */\nexport function test(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string != 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n */\nexport function parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  const match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  const type = match[1]\n  let subtype = match[2]\n  let suffix\n\n  // suffix after last +\n  const index = subtype.lastIndexOf('+')\n  if (index != -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n */\nclass MediaType {\n  constructor(type, subtype, suffix) {\n    this.type = type\n    this.subtype = subtype\n    this.suffix = suffix\n  }\n}\n\n/**\n * @license MIT media-typer\n * 2014-2017 Douglas Christopher Wilson\n */","import { lookup } from '@goa/mime-types'\nimport { parse } from '@goa/content-type'\nimport http from 'http' // eslint-disable-line\nimport { test } from './media-typer'\n\nexport { typeis as is }\nexport { hasbody as hasBody }\nexport { mimeMatch as match }\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {string} value\n * @param {!Array<string>|string} [types]\n * @param {...string} args\n */\nfunction typeis(value, types, ...args) {\n  let i\n  // remove parameters and normalize\n  const val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = [types, ...args]\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  let type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] == '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {http.IncomingMessage} req\n */\nfunction hasbody(req) {\n  const headers = /** @type {Object} */ (req.headers)\n  return headers['transfer-encoding'] !== undefined ||\n    !isNaN(headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {http.IncomingMessage} req\n * @param {string|!Array<string>} [types]\n * @param {...string} args\n */\nexport default function typeofrequest(req, types, ...args) {\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = [types, ...args]\n  }\n\n  // request content type\n  const headers = /** @type {Object} */ (req.headers)\n  const value = headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {string} type\n * @private\n */\nfunction normalize(type) {\n  if (typeof type != 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n  case 'urlencoded':\n    return 'application/x-www-form-urlencoded'\n  case 'multipart':\n    return 'multipart/*'\n  }\n\n  if (type[0] == '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') == -1\n    ? lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type matches `actual` mime type with wildcard and +suffix support.\n *\n * @param {string|boolean} expected\n * @param {string} actual\n * @private\n */\nfunction mimeMatch(expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  const actualParts = actual.split('/')\n  const expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length != 2 || expectedParts.length != 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] != '*' && expectedParts[0] != actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) == '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) == actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] != '*' && expectedParts[1] != actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n * @param {string} value\n * @private\n */\nfunction normalizeType(value) {\n  // parse the type\n  const { type } = parse(value)\n\n  if (!test(type)) {\n    return null\n  }\n\n  return type\n}\n\n/**\n * Try to normalize a type and remove parameters.\n * @param {string} value\n * @private\n */\nfunction tryNormalizeType(value) {\n  if (typeof value != 'string') {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * https://npmjs.org/type-is\n */","/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\nimport { basename } from 'path'\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {Object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n */\nexport default function contentDisposition(filename, options = {}) {\n  const { type = 'attachment', fallback = true } = options\n\n  // get parameters\n  const params = createparams(filename, fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n */\nfunction createparams(filename, fallback = true) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename != 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  if (typeof fallback != 'string' && typeof fallback != 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback == 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  const fallbackName = typeof fallback != 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  const hasFallback = typeof fallbackName == 'string' && fallbackName != name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n * @param {!ContentDisposition} obj\n * @private\n */\nfunction format({ parameters, type }) {\n  if (typeof type != 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  let string = `${type}`.toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters == 'object') {\n    let param\n    const params = Object.keys(parameters).sort()\n\n    for (let i = 0; i < params.length; i++) {\n      param = params[i]\n\n      const val = param.substr(-1) == '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n  case 'iso-8859-1':\n    value = getlatin1(binary)\n    break\n  case 'utf-8':\n    value = Buffer.from(binary, 'binary').toString('utf8')\n    break\n  default:\n    throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {Object}\n * @public\n */\n\nexport function parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n */\nclass ContentDisposition {\n  /**\n   * @param {string} type\n   * @param {Object} parameters\n   */\n  constructor(type, parameters) {\n    this.type = type\n    this.parameters = parameters\n  }\n}","import Stream from 'stream'\n\nexport default function (stream, error) {\n  if (stream instanceof Stream && !stream.listeners('error').includes(error)) {\n    stream.on('error', error)\n  }\n  return stream\n}\n\n/**\n * @license MIT\n * Author dead_horse <dead_horse@qq.com>\n * https://github.com/node-modules/error-inject\n */","import { contentType } from '@goa/mime-types'\n\nexport default type => {\n  let mimeType = typeLRUCache.get(type)\n  if (!mimeType) {\n    mimeType = contentType(type)\n    typeLRUCache.set(type, mimeType)\n  }\n  return mimeType\n}\n\n/**\n * Extends LRU base on hashlru.\n */\nclass LRU {\n  constructor(max) {\n    this.max = max\n    this.size = 0\n    this.cache = new Map()\n    this._cache = new Map()\n  }\n\n  get(key, options = {}) {\n    let item = this.cache.get(key)\n    const { maxAge } = options\n    // only call Date.now() when necessary\n    let now\n    function getNow() {\n      now = now || Date.now()\n      return now\n    }\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0\n        item.value = undefined\n      } else {\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0\n          item.expired = expired\n        }\n      }\n      return item.value\n    }\n\n    // try to read from _cache\n    item = this._cache.get(key)\n    if (item) {\n      // check expired\n      if (item.expired && getNow() > item.expired) {\n        item.expired = 0\n        item.value = undefined\n      } else {\n        // not expired, save to cache\n        this._update(key, item)\n        // update expired in get\n        if (maxAge !== undefined) {\n          const expired = maxAge ? getNow() + maxAge : 0\n          item.expired = expired\n        }\n      }\n      return item.value\n    }\n  }\n\n  set(key, value, options = {}) {\n    const { maxAge } = options\n    const expired = maxAge ? Date.now() + maxAge : 0\n    let item = this.cache.get(key)\n    if (item) {\n      item.expired = expired\n      item.value = value\n    } else {\n      item = {\n        value,\n        expired,\n      }\n      this._update(key, item)\n    }\n  }\n\n  keys() {\n    const cacheKeys = new Set()\n    const now = Date.now()\n\n    for (const entry of this.cache.entries()) {\n      checkEntry(entry)\n    }\n\n    for (const entry of this._cache.entries()) {\n      checkEntry(entry)\n    }\n\n    function checkEntry(entry) {\n      const key = entry[0]\n      const item = entry[1]\n      if (entry[1].value && (!entry[1].expired) || item.expired >= now) {\n        cacheKeys.add(key)\n      }\n    }\n\n    return Array.from(cacheKeys.keys())\n  }\n\n  _update(key, item) {\n    this.cache.set(key, item)\n    this.size++\n    if (this.size >= this.max) {\n      this.size = 0\n      this._cache = this.cache\n      this.cache = new Map()\n    }\n  }\n}\n\nconst typeLRUCache = new LRU(100)\n\n\n/**\n * @license MIT\n * [cache-content-type] Author dead_horse <dead_horse@qq.com>\n * https://github.com/node-modules/cache-content-type\n * [ylru] Author fengmk2\n * https://github.com/node-modules/ylru\n */","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n\nvar matchHtmlRegExp = /[\"'&<>]/\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n */\nexport default function escapeHtml(string) {\n  var str = '' + string\n  var match = matchHtmlRegExp.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  var escape\n  var html = ''\n  var index = 0\n  var lastIndex = 0\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n    case 34: // \"\n      escape = '&quot;'\n      break\n    case 38: // &\n      escape = '&amp;'\n      break\n    case 39: // '\n      escape = '&#39;'\n      break\n    case 60: // <\n      escape = '&lt;'\n      break\n    case 62: // >\n      escape = '&gt;'\n      break\n    default:\n      continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escape\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html\n}\n","/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\n/**\n * RegExp to match Same-Site cookie attribute value.\n */\nconst sameSiteRegExp = /^(?:lax|strict)$/i\n\n/**\n * @implements {_goa.CookieAttributes}\n */\nexport default class Cookie {\n  /**\n   * @param {string} name\n   * @param {?string} [value]\n   * @param {!_goa.CookieAttributes} [attrs]\n   */\n  constructor(name, value, attrs) {\n    this.path = '/'\n    this.expires = undefined\n    this.domain = undefined\n    this.maxAge = undefined\n    this.httpOnly = true\n    this.sameSite = false\n    this.secure = false\n    this.overwrite = false\n\n    if (!fieldContentRegExp.test(name)) {\n      throw new TypeError('argument name is invalid')\n    }\n\n    if (value && !fieldContentRegExp.test(value)) {\n      throw new TypeError('argument value is invalid')\n    }\n\n    value || (this.expires = new Date(0))\n\n    this.name = name\n    this.value = value || ''\n\n    for (let n in attrs) {\n      /** @suppress {checkTypes} */\n      this[n] = attrs[n]\n    }\n\n    if (this.path && !fieldContentRegExp.test(this.path)) {\n      throw new TypeError('option path is invalid')\n    }\n\n    if (this.domain && !fieldContentRegExp.test(this.domain)) {\n      throw new TypeError('option domain is invalid')\n    }\n\n    if (this.sameSite && this.sameSite !== true && !sameSiteRegExp.test(this.sameSite)) {\n      throw new TypeError('option sameSite is invalid')\n    }\n  }\n  toHeader() {\n    var header = this.toString()\n\n    if (this.maxAge) this.expires = new Date(Date.now() + this.maxAge)\n\n    if (this.path) header += '; path=' + this.path\n    if (this.expires) header += '; expires=' + this.expires.toUTCString()\n    if (this.domain) header += '; domain=' + this.domain\n    if (this.sameSite) {\n      header += '; samesite='\n      if (this.sameSite === true) header += 'strict'\n      else {\n        /**\n         * @suppress {checkTypes}\n         * @type {string}\n         */\n        const sameSite = this.sameSite.toLowerCase()\n        header += sameSite\n      }\n    }\n    if (this.secure) header += '; secure'\n    if (this.httpOnly) header += '; httponly'\n\n    return header\n  }\n  toString() {\n    return this.name + '=' + this.value\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').CookieAttributes} _goa.CookieAttributes\n */","/*!\n * cookies\n * Copyright(c) 2014 Jed Schmidt, http://jed.is/\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport Keygrip from './Keygrip'\nimport { OutgoingMessage } from 'http'\nimport Cookie from './Cookie'\n\nconst cache = {}\n\n/**\n * @implements {_goa.Cookies}\n */\nexport default class Cookies {\n  /**\n   * Creates a new cookies object to handle cookies.\n   * @param {!http.IncomingMessage} request\n   * @param {!http.ServerResponse} response\n   * @param {!_goa.CookiesOptions} [options] Options for the constructor.\n   */\n  constructor(request, response, options) {\n    this.secure = undefined\n    this.request = request\n    this.response = response\n    if (options) {\n      /** @type {!_goa.Keygrip|undefined} */\n      this.keys = Array.isArray(options.keys) ? new Keygrip(options.keys) : options.keys\n      this.secure = options.secure\n    }\n  }\n  /**\n   * @param {string} name\n   * @param {{ signed: boolean }} [opts]\n   */\n  get(name, opts) {\n    const sigName = `${name}.sig`\n    let header, match, index\n    const signed = opts && opts.signed !== undefined ? opts.signed : !!this.keys\n\n    /** @suppress {checkTypes} */\n    header = this.request.headers['cookie']\n    if (!header) return\n\n    match = header.match(getPattern(name))\n    if (!match) return\n\n    const value = match[1]\n    if (!opts || !signed) return value\n\n    const remote = this.get(sigName)\n    if (!remote) return\n\n    const data = name + '=' + value\n    if (!this.keys) throw new Error('.keys required for signed cookies')\n    index = this.keys.index(data, remote)\n\n    if (index < 0) {\n      this.set(sigName, null, { path: '/', signed: false })\n    } else {\n      index && this.set(sigName, this.keys.sign(data), { signed: false })\n      return value\n    }\n  }\n  /**\n   * @param {string} name The name of the cookie to set.\n   * @param {?string} [value] The value of the cookie to set.\n   * @param {!_goa.CookieSetOptions} [opts] How the cookie will be set.\n   * @param {boolean} [opts.signed=false] Indicating whether the cookie is to be signed. If this is true, another cookie of the same name with the .sig suffix appended will also be sent, with a 27-byte url-safe base64 SHA1 value representing the hash of cookie-name=cookie-value against the first Keygrip key. This signature key is used to detect tampering the next time a cookie is received. Default `false`.\n   */\n  set(name, value, opts = {}) {\n    const { response: res, request: req } = this\n    let headers = /** @type {!Array<string>} */ (res.getHeader('Set-Cookie')) || []\n    if (typeof headers == 'string') headers = [headers]\n\n    /** @suppress {checkTypes} */\n    const proto = req['protocol']\n    /** @suppress {checkTypes} */\n    const encrypted = req.connection['encrypted']\n    let secure = this.secure !== undefined ? !!this.secure : proto == 'https' || encrypted\n\n    const { signed = !!this.keys, ...rest } = opts\n    const cookie = new Cookie(name, value, rest)\n\n    if (!secure && opts.secure) {\n      throw new Error('Cannot send secure cookie over unencrypted connection')\n    }\n\n    cookie.secure = secure\n    if (!('secure' in opts)) cookie.secure = secure\n\n    pushCookie(headers, cookie)\n\n    if (opts && signed) {\n      if (!this.keys) throw new Error('.keys required for signed cookies')\n      cookie.value = this.keys.sign(cookie.toString())\n      cookie.name += '.sig'\n      pushCookie(headers, cookie)\n    }\n\n    /** @suppress {checkTypes} */\n    const set = res['set']\n    const setHeader = set ? OutgoingMessage.prototype.setHeader : res.setHeader\n    setHeader.call(res, 'Set-Cookie', headers)\n    return this\n  }\n}\n\nfunction getPattern(name) {\n  if (cache[name]) return cache[name]\n\n  return cache[name] = new RegExp(\n    '(?:^|;) *' +\n    name.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') +\n    '=([^;]*)'\n  )\n}\n\n/**\n * @param {!Array<string>} headers\n * @param {!Cookie} cookie\n */\nfunction pushCookie(headers, cookie) {\n  if (cookie.overwrite) {\n    for (var i = headers.length - 1; i >= 0; i--) {\n      if (headers[i].indexOf(cookie.name + '=') === 0) {\n        headers.splice(i, 1)\n      }\n    }\n  }\n\n  headers.push(cookie.toHeader())\n}\n\nexport const connect = (keys) => {\n  return (req, res, next) => {\n    req['cookies'] = res['cookies'] = new Cookies(req, res, { keys })\n    next()\n  }\n}\nexport const express = connect\n\nexport { Keygrip }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookieAttributes} _goa.CookieAttributes\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Keygrip} _goa.Keygrip\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookiesOptions} _goa.CookiesOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').CookieSetOptions} _goa.CookieSetOptions\n */","const simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Charset header.\n * @param {string} accept\n * @private\n */\nfunction parseAcceptCharset(accept) {\n  const accepts = accept.split(',')\n\n  const res = accepts.map((a, i) => {\n    const charset = parseCharset(a.trim(), i)\n    if (charset) return charset\n  }).filter(Boolean)\n\n  return res\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @param {string} str\n * @param {number} i\n * @private\n */\nfunction parseCharset(str, i) {\n  const match = simpleCharsetRegExp.exec(str)\n  if (!match) return null\n\n  const charset = match[1]\n  let q = 1\n  if (match[2]) {\n    const params = match[2].split(';')\n    for (let j = 0; j < params.length; j++) {\n      const p = params[j].trim().split('=')\n      if (p[0] == 'q') {\n        q = parseFloat(p[1])\n        break\n      }\n    }\n  }\n\n  return { charset, q, i }\n}\n\n/**\n * Get the priority of a charset.\n * @param {string} charset\n * @param {!Array<{ i: number, q: number, charset: string }>} accepted\n * @param {number} index\n */\nfunction getCharsetPriority(charset, accepted, index) {\n  let priority = { o: -1, q: 0, s: 0 }\n\n  for (let i = 0; i < accepted.length; i++) {\n    const spec = specify(charset, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the charset.\n * @param {string} charset\n * @param {{ i: number, q: number, charset: string }} spec\n * @private\n */\nfunction specify(charset, spec, i) {\n  let s = 0\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1\n  } else if (spec.charset != '*' ) return null\n\n  return {\n    i,\n    s,\n    o: spec.i,\n    q: spec.q,\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @param {string} [accept]\n * @param {!Array<string>} [provided]\n */\nexport default function preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  const accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset)\n  }\n\n  const priorities = provided.map((type, i) => {\n    return getCharsetPriority(type, accepts, i)\n  })\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map((priority) => {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @param {{ i: number, q: number, charset: string, o: number, s: number }} a\n * @param {{ i: number, q: number, charset: string, o: number, s: number }} b\n * @private\n */\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full charset string.\n * @param {{ charset: string }} spec\n * @private\n */\nfunction getFullCharset(spec) {\n  return spec.charset\n}\n\n/**\n * Check if a spec has any quality.\n * @param {{ q: number }} spec\n * @private\n */\nfunction isQuality(spec) {\n  return spec.q > 0\n}\n","const simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',')\n  var hasIdentity = false\n  var minQuality = 1\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i)\n\n    if (encoding) {\n      accepts[j++] = encoding\n      hasIdentity = hasIdentity || specify('identity', encoding, undefined)\n      minQuality = Math.min(minQuality, encoding.q || 1)\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i,\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str)\n  if (!match) return null\n\n  var encoding = match[1]\n  var q = 1\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=')\n      if (p[0] == 'q') {\n        q = parseFloat(p[1])\n        break\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i,\n  }\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\nexport default function preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '')\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index)\n  })\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0\n}","const simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',')\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i)\n\n    if (language) {\n      accepts[j++] = language\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str)\n  if (!match) return null\n\n  var prefix = match[1],\n    suffix = match[2],\n    full = prefix\n\n  if (suffix) full += \"-\" + suffix\n\n  var q = 1\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=')\n      if (p[0] == 'q') q = parseFloat(p[1])\n    }\n  }\n\n  return { prefix, suffix, q, i, full }\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language, undefined)\n  if (!p) return null\n  var s = 0\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\nexport default function preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index)\n  })\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full language string.\n * @private\n */\nfunction getFullLanguage(spec) {\n  return spec.full\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\nfunction isQuality(spec) {\n  return spec.q > 0\n}","const simpleMediaTypeRegExp = /^\\s*([^s/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept)\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i)\n\n    if (mediaType) {\n      accepts[j++] = mediaType\n    }\n  }\n\n  // trim accepts\n  accepts.length = j\n\n  return accepts\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str)\n  if (!match) return null\n\n  var params = Object.create(null)\n  var q = 1\n  var subtype = match[2]\n  var type = match[1]\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair)\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j]\n      var key = pair[0].toLowerCase()\n      var val = pair[1]\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val\n\n      if (key === 'q') {\n        q = parseFloat(value)\n        break\n      }\n\n      // store parameter\n      params[key] = value\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i,\n  }\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = { o: -1, q: 0, s: 0 }\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index)\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec\n    }\n  }\n\n  return priority\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type, undefined)\n  var s = 0\n\n  if (!p) {\n    return null\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null\n  }\n\n  var keys = Object.keys(spec.params)\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase()\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\nexport default function preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '')\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType)\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index)\n  })\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)]\n  })\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0\n  var index = 0\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++\n    index++\n  }\n\n  return count\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=')\n  var key\n  var val\n\n  if (index === -1) {\n    key = str\n  } else {\n    key = str.substr(0, index)\n    val = str.substr(index + 1)\n  }\n\n  return [key, val]\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',')\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i]\n    } else {\n      accepts[j] += ',' + accepts[i]\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1\n\n  return accepts\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';')\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i]\n    } else {\n      parameters[j] += ';' + parameters[i]\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim()\n  }\n\n  return parameters\n}\n","import preferredCharsets from './lib/charset'\nimport preferredEncodings from './lib/encoding'\nimport preferredLanguages from './lib/language'\nimport preferredMediaTypes from './lib/mediaType'\nimport * as http from 'http' // eslint-disable-line\n\n/**\n * @implements {_goa.Negotiator}\n */\nexport default class Negotiator {\n  /** @param {!http.IncomingMessage} request */\n  constructor(request) {\n    this.request = request\n    this.headers = /** @type {!Object} */ (this.request.headers)\n  }\n  /** @param {!Array<string>} [available] */\n  charset(available) {\n    const set = this.charsets(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  charsets(available) {\n    return preferredCharsets(this.headers['accept-charset'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  encoding(available) {\n    var set = this.encodings(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  encodings(available) {\n    return preferredEncodings(this.headers['accept-encoding'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  language(available) {\n    var set = this.languages(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  languages(available) {\n    return preferredLanguages(this.headers['accept-language'], available)\n  }\n  /** @param {!Array<string>} [available] */\n  mediaType(available) {\n    var set = this.mediaTypes(available)\n    return set && set[0]\n  }\n  /** @param {!Array<string>} [available] */\n  mediaTypes(available) {\n    return preferredMediaTypes(this.headers['accept'], available)\n  }\n}\n\n/**\n * @license MIT\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * https://npmjs.org/negotiator\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","import Negotiator from '@goa/negotiator'\nimport { lookup } from '@goa/mime-types'\n\n/**\n * @implements {_goa.Accepts}\n */\nexport default class Accepts {\n  /**\n   * Create a new Accepts object for the given req.\n   * @param {!http.IncomingMessage} req\n   */\n  constructor(req) {\n    this.headers = /** @type {!Object} */ (req.headers)\n    this.negotiator = new Negotiator(req)\n  }\n  /**\n   * Check if the given `type(s)` is acceptable, returning the best match when true, otherwise `false`, in which case you should respond with 406 \"Not Acceptable\".\n   *\n   * The `type` value may be a single mime type string such as \"application/json\", the extension name such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list or array is given the _best_ match, if any is returned. When no types are given as arguments, returns all types accepted by the client in the preference order.\n   *\n   * @param {string|!Array<string>} [types] A single or multiple types, either as an array or variable arguments.\n   * @param {...string} args\n   */\n  types(types, ...args) {\n    // support flattened arguments\n    if (types && !Array.isArray(types)) {\n      types = [types, ...args]\n    }\n\n    // no types, return all requested types\n    if (!types || types.length == 0) {\n      return this.negotiator.mediaTypes()\n    }\n\n    // no accept header, return first given type\n    if (!this.headers['accept']) {\n      return types[0]\n    }\n\n    const mimes = types.map(extToMime)\n    const accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n    const [first] = accepts\n\n    return first\n      ? types[mimes.indexOf(first)]\n      : false\n  }\n  get type() {\n    return this.types\n  }\n  /**\n   * Return accepted encodings or best fit based on `encodings`.\n   *\n   * Given `Accept-Encoding: gzip, deflate`\n   * an array sorted by quality is returned:\n   *\n   *     ['gzip', 'deflate']\n   *\n   * @param {string|!Array<string>} [encodings]\n   * @param {...string} args\n   */\n  encodings(encodings, ...args) {\n    // support flattened arguments\n    if (encodings && !Array.isArray(encodings)) {\n      encodings = [encodings, ...args]\n    }\n\n    // no encodings, return all requested encodings\n    if (!encodings || encodings.length == 0) {\n      return this.negotiator.encodings()\n    }\n\n    return this.negotiator.encodings( /** @type {!Array<string>} */\n      (encodings))[0] || false\n  }\n  get encoding() {\n    return this.encodings\n  }\n  /**\n   * Return accepted charsets or best fit based on `charsets`.\n   *\n   * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n   * an array sorted by quality is returned:\n   *\n   *     ['utf-8', 'utf-7', 'iso-8859-1']\n   *\n   * @param {string|!Array<string>} [charsets]\n   * @param {...string} args\n   */\n  charsets(charsets, ...args) {\n    // support flattened arguments\n    if (charsets && !Array.isArray(charsets)) {\n      charsets = [charsets, ...args]\n    }\n\n    // no charsets, return all requested charsets\n    if (!charsets || charsets.length == 0) {\n      return this.negotiator.charsets()\n    }\n\n    return this.negotiator.charsets( /** @type {!Array<string>} */\n      (charsets))[0] || false\n  }\n  get charset() {\n    return this.charsets\n  }\n  /**\n   * Return accepted languages or best fit based on `langs`.\n   *\n   * Given `Accept-Language: en;q=0.8, es, pt`\n   * an array sorted by quality is returned:\n   *\n   *     ['es', 'pt', 'en']\n   *\n   * @param {string|!Array<string>} [languages]\n   * @param {...string} args\n   */\n  languages(languages, ...args) {\n    // support flattened arguments\n    if (languages && !Array.isArray(languages)) {\n      languages = [languages, ...args]\n    }\n\n    // no languages, return all requested languages\n    if (!languages || languages.length == 0) {\n      return this.negotiator.languages()\n    }\n\n    return this.negotiator.languages(\n      /** @type {!Array<string>} */ (languages))[0] || false\n  }\n  get lang() {\n    return this.languages\n  }\n  get langs() {\n    return this.languages\n  }\n  get language() {\n    return this.languages\n  }\n}\n\n/**\n * Convert extnames to mime.\n * @param {string} type\n * @private\n */\nfunction extToMime(type) {\n  return type.indexOf('/') == -1\n    ? lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n * @param {string} type\n * @private\n */\nfunction validMime(type) {\n  return typeof type == 'string'\n}\n\n/**\n * @license MIT\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * https://npmjs.org/accepts\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","/**\n * Creates a delegator instance used to configure using the `prop` on the given\n`proto` object (which is usually a prototype).\n */\nexport default class Delegator {\n  /**\n   * Initialize a delegator.\n   * @param {!Object} proto\n   * @param {string} target\n   */\n  constructor(proto, target) {\n    this.proto = proto\n    this.target = target\n    /** @type {!Array<string>} */\n    this.methods = []\n    /** @type {!Array<string>} */\n    this.getters = []\n    /** @type {!Array<string>} */\n    this.setters = []\n    /** @type {!Array<string>} */\n    this.fluents = []\n  }\n  /**\n   * Delegate method `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  method(name) {\n    const proto = this.proto\n    const target = this.target\n    this.methods.push(name)\n\n    proto[name] = function() {\n      return this[target][name].apply(this[target], arguments)\n    }\n\n    return this\n  }\n  /**\n   * Delegator accessor `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  access(name) {\n    return this.getter(name).setter(name)\n  }\n  /**\n   * Delegator getter `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  getter(name) {\n    const proto = this.proto\n    const target = this.target\n    this.getters.push(name)\n\n    proto.__defineGetter__(name, function() {\n      return this[target][name]\n    })\n\n    return this\n  }\n  /**\n   * Delegator setter `name`.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  setter(name) {\n    var proto = this.proto\n    var target = this.target\n    this.setters.push(name)\n\n    proto.__defineSetter__(name, function(val) {\n      return this[target][name] = val\n    })\n\n    return this\n  }\n  /**\n   * Delegator fluent accessor.\n   * @param {string} name\n   * @return {Delegator} self\n   */\n  fluent(name) {\n    var proto = this.proto\n    var target = this.target\n    this.fluents.push(name)\n\n    proto[name] = function(val ){\n      if (val !== undefined) {\n        this[target][name] = val\n        return this\n      } else {\n        return this[target][name]\n      }\n    }\n\n    return this\n  }\n}\n\n/**\n * @license MIT Copyright (c) 2015 TJ Holowaychuk <tj@vision-media.ca>\n * https://npmjs.org/delegates\n */","import createError from '@goa/http-errors'\n\n/**\n * @suppress {checkTypes}\n */\nexport default function assert(value, status, msg, opts) {\n  if (value) return\n  throw createError(status, msg, opts)\n}\n\n/**\n * @license MIT jshttp/http-assert\n */","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","export default net\nexport const {\n  Server,\n  Socket,\n  Stream,\n  connect,\n  createConnection,\n  createServer,\n  isIP,\n  isIPv4,\n  isIPv6,\n} = net","export default querystring\nexport const {\n  decode,\n  encode,\n  escape,\n  parse,\n  stringify,\n  unescape,\n} = querystring","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nimport { parse, Url } from 'url'\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {http.IncomingMessage} req\n */\nexport default function parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n}\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {http.IncomingMessage} req\n */\n\nexport function original (req) {\n  const url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n}\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n    case 0x3f: /* ?  */\n      if (search === null) {\n        pathname = str.substring(0, i)\n        query = str.substring(i + 1)\n        search = str.substring(i)\n      }\n      break\n    case 0x09: /* \\t */\n    case 0x0a: /* \\n */\n    case 0x0c: /* \\f */\n    case 0x0d: /* \\r */\n    case 0x20: /*    */\n    case 0x23: /* #  */\n    case 0xa0:\n    case 0xfeff:\n      return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url['path'] = str\n  url['href'] = str\n  url['pathname'] = pathname\n\n  if (search !== null) {\n    url['query'] = query\n    url['search'] = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {Object} parsedUrl\n * @private\n */\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl['_raw'] === url\n}\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @public\n */\n\nexport default function fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","import { URL, format as stringify } from 'url'\nimport { isIP } from 'net'\nimport Accepts from '@goa/accepts'\nimport { parse as qsParse, stringify as qsStringify } from 'querystring'\nimport typeis from '@goa/type-is'\nimport { parse as parseContentType } from '@goa/content-type'\nimport parse from '../modules/parseurl'\nimport fresh from '../modules/fresh'\n\nimport { inspect } from 'util'\n\nimport Context from './context' // eslint-disable-line\nimport Response from './response' // eslint-disable-line\n\nconst IP = Symbol('context#ip')\n\n/**\n * The request implementation.\n * @implements {_goa.Request}\n */\nexport default class Request {\n  constructor() {\n    /**\n     * @suppress {checkTypes}\n     * @type {?_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?Context}\n     */\n    this.ctx = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?Response}\n     */\n    this.response = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.ServerResponse}\n     */\n    this.res = null\n    /** @type {string} */\n    this.originalUrl = ''\n    /** @type {Object} */\n    this._querycache = {}\n    /** @type {URL|Object} */\n    this.memoizedURL = null\n    /** @type {?string} */\n    this.IP = null\n    /** @type {_goa.Accepts} */\n    this._accept = null\n  }\n  /**\n   * Return request header.\n   */\n  get header() {\n    return this.req.headers\n  }\n\n  /**\n   * Set request header.\n   */\n  set header(val) {\n    this.req.headers = val\n  }\n\n  /**\n   * Return request header, alias as request.header\n   */\n  get headers() {\n    return this.req.headers\n  }\n\n  /**\n   * Set request header, alias as request.header\n   */\n  set headers(val) {\n    this.req.headers = val\n  }\n\n  /**\n   * Get request URL.\n   */\n  get url() {\n    return this.req.url\n  }\n\n  /**\n   * Set request URL.\n   */\n  set url(val) {\n    this.req.url = val\n  }\n\n  /**\n   * Get origin of URL.\n   * @return {string}\n   */\n  get origin() {\n    return `${this.protocol}://${this.host}`\n  }\n\n  /**\n   * Get full request URL.\n   */\n  get href() {\n    // support: `GET http://example.com/foo`\n    if (/^https?:\\/\\//i.test(this.originalUrl)) return this.originalUrl\n    return this.origin + this.originalUrl\n  }\n\n  /**\n   * Get request method.\n   */\n  get method() {\n    return this.req.method\n  }\n\n  /**\n   * Set request method.\n   */\n  set method(val) {\n    this.req.method = val\n  }\n\n  /**\n   * Get request pathname.\n   */\n  get path() {\n    return parse(/** @type {!http.IncomingMessage} */ (this.req)).pathname\n  }\n\n  /**\n   * Set pathname, retaining the query-string when present.\n   */\n  set path(path) {\n    const url = parse(/** @type {!http.IncomingMessage} */ (this.req))\n    if (url.pathname === path) return\n\n    url.pathname = path\n    url.path = null\n\n    this.url = stringify(url)\n  }\n\n  /**\n   * Get parsed query-string.\n   * @return {Object}\n   */\n  get query() {\n    const str = this.querystring\n    const c = this._querycache = this._querycache || {}\n    return c[str] || (c[str] = qsParse(str))\n  }\n\n  /**\n   * Set query-string as an object.\n   */\n  set query(obj) {\n    this.querystring = qsStringify(obj)\n  }\n\n  /**\n   * Get query string.\n   */\n  get querystring() {\n    if (!this.req) return ''\n    return parse(/** @type {!http.IncomingMessage} */ (this.req)).query || ''\n  }\n\n  /**\n   * Set querystring.\n   */\n  set querystring(str) {\n    const url = parse(/** @type {!http.IncomingMessage} */ (this.req))\n    if (url.search === `?${str}`) return\n\n    url.search = str\n    url.path = null\n\n    this.url = stringify(url)\n  }\n\n  /**\n   * Get the search string. Same as the querystring\n   * except it includes the leading ?.\n   */\n  get search() {\n    if (!this.querystring) return ''\n    return `?${this.querystring}`\n  }\n\n  /**\n   * Set the search string. Same as\n   * request.querystring= but included for ubiquity.\n   */\n  set search(str) {\n    this.querystring = str\n  }\n\n  /**\n   * Parse the \"Host\" header field host\n   * and support X-Forwarded-Host when a\n   * proxy is enabled. Returns hostname:port\n   */\n  get host() {\n    const { proxy } = this.app\n    let host = proxy && this.get('X-Forwarded-Host')\n    if (!host) {\n      if (this.req.httpVersionMajor >= 2) host = this.get(':authority')\n      if (!host) host = this.get('Host')\n    }\n    if (!host) return ''\n    return host.split(/\\s*,\\s*/, 1)[0]\n  }\n\n  /**\n   * Parse the \"Host\" header field hostname\n   * and support X-Forwarded-Host when a\n   * proxy is enabled.\n   */\n  get hostname() {\n    const host = this.host\n    if (!host) return ''\n    if ('[' == host[0]) return this.URL.hostname || '' // IPv6\n    return host.split(':', 1)[0]\n  }\n\n  /**\n   * Get WHATWG parsed URL.\n   * Lazily memoized.\n   */\n  get URL() {\n    if (!this.memoizedURL) {\n      const originalUrl = this.originalUrl || '' // avoid undefined in template string\n      try {\n        this.memoizedURL = new URL(`${this.origin}${originalUrl}`)\n      } catch (err) {\n        this.memoizedURL = Object.create(null)\n      }\n    }\n    return this.memoizedURL\n  }\n\n  /**\n   * Check if the request is fresh, aka\n   * Last-Modified and/or the ETag\n   * still match.\n   */\n  get fresh() {\n    const method = this.method\n    const s = this.ctx.status // todo\n\n    // GET or HEAD for weak freshness validation only\n    if ('GET' != method && 'HEAD' != method) return false\n\n    // 2xx or 304 as per rfc2616 14.26\n    if ((s >= 200 && s < 300) || 304 == s) {\n      return fresh(this.header, this.response.header)\n    }\n\n    return false\n  }\n\n  /**\n   * Check if the request is stale, aka\n   * \"Last-Modified\" and / or the \"ETag\" for the\n   * resource has changed.\n   */\n  get stale() {\n    return !this.fresh\n  }\n\n  /**\n   * Check if the request is idempotent.\n   */\n  get idempotent() {\n    const methods = ['GET', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'TRACE']\n    return methods.includes(this.method)\n  }\n\n  /**\n   * Return the request socket.\n   */\n  get socket() {\n    return this.req.socket\n  }\n\n  /**\n   * Get the charset when present or undefined.\n   */\n  get charset() {\n    try {\n      const { parameters } = parseContentType(/** @type {!http.IncomingMessage} */ (this.req))\n      return parameters.charset || ''\n    } catch (e) {\n      return ''\n    }\n  }\n\n  /**\n   * Return parsed Content-Length when present.\n   */\n  get length() {\n    const len = this.get('Content-Length')\n    if (len == '') return null\n    return ~~len\n  }\n\n  /**\n   * Return the protocol string \"http\" or \"https\"\n   * when requested with TLS. When the proxy setting\n   * is enabled the \"X-Forwarded-Proto\" header\n   * field will be trusted. If you're running behind\n   * a reverse proxy that supplies https for you this\n   * may be enabled.\n   */\n  get protocol() {\n    /** missing encrypted in externs\n     * @suppress {checkTypes} */\n    const encrypted = this.socket['encrypted']\n    if (encrypted) return 'https'\n    if (!this.app.proxy) return 'http'\n    const proto = this.get('X-Forwarded-Proto')\n    return proto ? proto.split(/\\s*,\\s*/, 1)[0] : 'http'\n  }\n\n  /**\n   * Short-hand for:\n   *    this.protocol == 'https'\n   */\n  get secure() {\n    return 'https' == this.protocol\n  }\n\n  /**\n   * When `app.proxy` is `true`, parse\n   * the \"X-Forwarded-For\" ip address list.\n   * For example if the value were \"client, proxy1, proxy2\"\n   * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n   * where \"proxy2\" is the furthest down-stream.\n   */\n  get ips() {\n    const { proxy } = this.app\n    const val = this.get('X-Forwarded-For')\n    return proxy && val\n      ? val.split(/\\s*,\\s*/)\n      : []\n  }\n\n  /**\n   * Return request's remote address\n   * When `app.proxy` is `true`, parse\n   * the \"X-Forwarded-For\" ip address list and return the first one\n   */\n  get ip() {\n    if (!this[IP]) {\n      this[IP] = this.ips[0] || this.socket.remoteAddress || ''\n    }\n    return this[IP]\n  }\n\n  set ip(_ip) {\n    this[IP] = _ip\n  }\n\n  /**\n   * Return subdomains as an array.\n   * Subdomains are the dot-separated parts of the host before the main domain\n   * of the app. By default, the domain of the app is assumed to be the last two\n   * parts of the host. This can be changed by setting `app.subdomainOffset`.\n   * For example, if the domain is \"tobi.ferrets.example.com\":\n   * If `app.subdomainOffset` is not set, this.subdomains is\n   * `[\"ferrets\", \"tobi\"]`.\n   * If `app.subdomainOffset` is 3, this.subdomains is `[\"tobi\"]`.\n   */\n  get subdomains() {\n    const offset = this.app.subdomainOffset\n    const hostname = this.hostname\n    if (isIP(hostname)) return []\n    return hostname\n      .split('.')\n      .reverse()\n      .slice(offset)\n  }\n\n  /**\n   * Get accept object. Lazily memoized.\n   * @private\n   */\n  get accept() {\n    return this._accept || (this._accept = new Accepts(/** @type {!http.IncomingMessage} */ (this.req)))\n  }\n\n  /**\n   * Set accept object.\n   * @private\n   */\n  set accept(obj) {\n    this._accept = obj\n  }\n\n  /**\n   * Check if the given `type(s)` is acceptable, returning\n   * the best match when true, otherwise `false`, in which\n   * case you should respond with 406 \"Not Acceptable\".\n   * The `type` value may be a single mime type string\n   * such as \"application/json\", the extension name\n   * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n   * or array is given the _best_ match, if any is returned.\n   * Examples:\n   *\n   *     // Accept: text/html\n   *     this.accepts('html');\n   *     // => \"html\"\n   *     // Accept: text/*, application/json\n   *     this.accepts('html');\n   *     // => \"html\"\n   *     this.accepts('text/html');\n   *     // => \"text/html\"\n   *     this.accepts('json', 'text');\n   *     // => \"json\"\n   *     this.accepts('application/json');\n   *     // => \"application/json\"\n   *     // Accept: text/*, application/json\n   *     this.accepts('image/png');\n   *     this.accepts('png');\n   *     // => false\n   *     // Accept: text/*;q=.5, application/json\n   *     this.accepts(['html', 'json']);\n   *     this.accepts('html', 'json');\n   *     // => \"json\"\n   * @param {!Array<string>|string} [type]\n   * @param {...string} args\n   */\n  accepts(type, ...args) {\n    return this.accept.types(type, ...args)\n  }\n\n  /**\n   * Return accepted encodings or best fit based on `encodings`.\n   * Given `Accept-Encoding: gzip, deflate`\n   * an array sorted by quality is returned:\n   *\n   *     ['gzip', 'deflate']\n   * @param {!Array<string>|string} [encoding]\n   * @param {...string} args\n   */\n  acceptsEncodings(encoding, ...args) {\n    return this.accept.encodings(encoding, ...args)\n  }\n\n  /**\n   * Return accepted charsets or best fit based on `charsets`.\n   * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n   * an array sorted by quality is returned:\n   *\n   *     ['utf-8', 'utf-7', 'iso-8859-1']\n   * @param {!Array<string>|string} [charset]\n   * @param {...string} args\n   */\n  acceptsCharsets(charset, ...args) {\n    return this.accept.charsets(charset, ...args)\n  }\n\n  /**\n   * Return accepted languages or best fit based on `langs`.\n   * Given `Accept-Language: en;q=0.8, es, pt`\n   * an array sorted by quality is returned:\n   *\n   *     ['es', 'pt', 'en']\n   * @param {!Array<string>|string} [lang]\n   * @param {...string} args\n   */\n  acceptsLanguages(lang, ...args) {\n    return this.accept.languages(lang, ...args)\n  }\n\n  /**\n   * Check if the incoming request contains the \"Content-Type\"\n   * header field, and it contains any of the give mime `type`s.\n   * If there is no request body, `null` is returned.\n   * If there is no content type, `false` is returned.\n   * Otherwise, it returns the first `type` that matches.\n   * Examples:\n   *\n   *     // With Content-Type: text/html; charset=utf-8\n   *     this.is('html'); // => 'html'\n   *     this.is('text/html'); // => 'text/html'\n   *     this.is('text/*', 'application/json'); // => 'text/html'\n   *     // When Content-Type is application/json\n   *     this.is('json', 'urlencoded'); // => 'json'\n   *     this.is('application/json'); // => 'application/json'\n   *     this.is('html', 'application/*'); // => 'application/json'\n   *     this.is('html'); // => false\n   * @param {string|!Array<string>} types\n   * @param {...string} args\n   */\n  is(types, ...args) {\n    if (!types) return typeis(/** @type {!http.IncomingMessage} */ (this.req))\n    if (!Array.isArray(types)) types = [types, ...args]\n    return typeis(/** @type {!http.IncomingMessage} */ (this.req), types)\n  }\n\n  /**\n   * Return the request mime type void of\n   * parameters such as \"charset\".\n   */\n  get type() {\n    const type = this.get('Content-Type')\n    if (!type) return ''\n    return type.split(';')[0]\n  }\n\n  /**\n   * Return request header.\n   * The `Referrer` header field is special-cased,\n   * both `Referrer` and `Referer` are interchangeable.\n   * Examples:\n   *     this.get('Content-Type');\n   *     // => \"text/plain\"\n   *     this.get('content-type');\n   *     // => \"text/plain\"\n   *     this.get('Something');\n   *     // => ''\n   * @param {string} field\n   * @returns {string}\n   */\n  get(field) {\n    const req = this.req\n    switch (field = field.toLowerCase()) {\n    case 'referer':\n    case 'referrer':\n      return req.headers.referrer || req.headers.referer || ''\n    default: {\n      /** @suppress {checkTypes} */\n      const h = req.headers[field]\n      return h || ''\n    }\n    }\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    if (!this.req) return\n    return this.toJSON()\n  }\n\n  /**\n   * Return JSON representation.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'method': this.method,\n      'url': this.url,\n      'header': this.header,\n    }\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/accepts/types').Accepts} _goa.Accepts\n */\n","import { format } from 'util'\nimport Cookies from '@goa/cookies'\nimport Accepts from '@goa/accepts' // eslint-disable-line\n\nimport createError from '@goa/http-errors'\nimport Delegate from '../modules/delegates'\nimport httpAssert from '../modules/http-assert'\nimport statuses from '@goa/statuses'\nimport { inspect } from 'util'\n\nimport Request from './request' // eslint-disable-line\nimport Response from './response' // eslint-disable-line\n\nconst COOKIES = Symbol('context#cookies')\n\n/**\n * Context prototype.\n * @implements {_goa.Context}\n */\nexport default class Context {\n  constructor() {\n    // suppress types here so that can access\n    // the properties without casting later\n    /**\n     * @suppress {checkTypes}\n     * @type {?_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Request}\n     */\n    this.request = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Response}\n     */\n    this.response = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {?http.ServerResponse}\n     */\n    this.res = null\n\n    /**\n     * @suppress {checkTypes}\n     * @type {?string}\n     */\n    this.originalUrl = null\n    /** @type {Object} */ this.state = null\n    /** @type {_goa.Cookies} */ this[COOKIES] = null\n\n    /**\n     * Set to false to bypass Koa's response.\n     * @type {boolean}\n     */\n    this.respond = true\n\n    // REQUEST delegates\n    // method\n    /** @type {?} **/\n    this.acceptsLanguages = undefined\n    /** @type {?} **/\n    this.acceptsEncodings = undefined\n    /** @type {?} **/\n    this.acceptsCharsets = undefined\n    /** @type {?} **/\n    this.accepts = undefined\n    /** @type {?} **/\n    this.get = undefined\n    /** @type {?} **/\n    this.is = undefined\n\n    // access\n    /** @type {?} **/\n    this.querystring = undefined\n    /** @type {?} **/\n    this.idempotent = undefined\n    /** @type {?} **/\n    this.socket = undefined\n    /** @type {?} **/\n    this.search = undefined\n    /** @type {?} **/\n    this.method = undefined\n    /** @type {?} **/\n    this.query = undefined\n    /** @type {?} **/\n    this.path = undefined\n    /** @type {?} **/\n    this.url = undefined\n    /** @type {_goa.Accepts} **/\n    this.accept = null\n\n    // getters\n    /** @type {?} **/\n    this.origin = undefined\n    /** @type {?} **/\n    this.href = undefined\n    /** @type {?} **/\n    this.subdomains = undefined\n    /** @type {?} **/\n    this.protocol = undefined\n    /** @type {?} **/\n    this.host = undefined\n    /** @type {?} **/\n    this.hostname = undefined\n    /** @type {?} **/\n    this.URL = undefined\n    /** @type {?} **/\n    this.header = undefined\n    /** @type {?} **/\n    this.headers = undefined\n    /** @type {?} **/\n    this.secure = undefined\n    /** @type {?} **/\n    this.stale = undefined\n    /** @type {?} **/\n    this.fresh = undefined\n    /** @type {?} **/\n    this.ips = undefined\n    /** @type {?} **/\n    this.ip = undefined\n\n    // RESPONSE delegates\n    // method\n    /** @type {?} **/ this.attachment = undefined\n    /** @type {?} **/ this.redirect = undefined\n    /** @type {?} **/ this.remove = undefined\n    /** @type {?} **/ this.vary = undefined\n    /** @type {?} **/ this.set = undefined\n    /** @type {?} **/ this.append = undefined\n    /** @type {?} **/ this.flushHeaders = undefined\n    // access\n    /** @type {?} **/ this.status = undefined\n    /** @type {?} **/ this.message = undefined\n    /** @type {?} **/ this.body = undefined\n    /** @type {?} **/ this.length = undefined\n    /** @type {?} **/ this.type = undefined\n    /** @type {?} **/ this.lastModified = undefined\n    /** @type {?} **/ this.etag = undefined\n    // getter\n    /** @type {boolean} **/ this.headerSent = false\n    /** @type {boolean} **/ this.writable = false\n  }\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   */\n  inspect() {\n    return this.toJSON()\n  }\n\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'request': this.request.toJSON(),\n      'response': this.response.toJSON(),\n      'app': this.app.toJSON(),\n      'originalUrl': this.originalUrl,\n      'req': '<original node req>',\n      'res': '<original node res>',\n      'socket': '<original node socket>',\n    }\n  }\n\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   */\n  get assert() {\n    return httpAssert\n  }\n\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   * See: https://github.com/idiocc/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {...(string|number|!Error)} [args]\n   */\n  throw(...args) {\n    throw createError(...args)\n  }\n\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return\n\n    if (!(err instanceof Error)) err = new Error(format('non-error thrown: %j', err))\n\n    let headerSent = false\n    if (this.headerSent || !this.writable) {\n      headerSent = err['headerSent'] = true\n    }\n\n    // delegate\n    this.app.emit('error', err, this)\n\n    // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n    if (headerSent) {\n      return\n    }\n\n    const { res } = this\n\n    // first unset all headers\n    res.getHeaderNames().forEach(name => res.removeHeader(name))\n\n    // then set those specified\n    this.set(err.headers)\n\n    // force text/plain\n    this.type = 'text'\n\n    // ENOENT support\n    if ('ENOENT' == err.code) err.status = 404\n\n    // default to 500\n    if ('number' != typeof err.status || !statuses[err.status]) err.status = 500\n\n    // respond\n    const code = statuses[err.status]\n    const msg = err.expose ? err.message : code\n    this.status = err.status\n    this.length = Buffer.byteLength(msg)\n    res.end(msg)\n  }\n\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(\n        /** @type {!http.IncomingMessage} */ (this.req),\n        /** @type {!http.ServerResponse} */ (this.res), {\n          keys: this.app.keys, // change @goaCookies\n          secure: this.request.secure,\n        })\n    }\n    return this[COOKIES]\n  }\n\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n */\n// /* istanbul ignore else */\n// if (util.inspect.custom) {\n//   module.exports[util.inspect.custom] = module.exports.inspect\n// }\n\n/**\n * Response delegation.\n */\nnew Delegate(Context.prototype, 'response')\n  .method('attachment')\n  .method('redirect')\n  .method('remove')\n  .method('vary')\n  .method('set')\n  .method('append')\n  .method('flushHeaders')\n  .access('status')\n  .access('message')\n  .access('body')\n  .access('length')\n  .access('type')\n  .access('lastModified')\n  .access('etag')\n  .getter('headerSent')\n  .getter('writable')\n\n/**\n * Request delegation.\n */\nnew Delegate(Context.prototype, 'request')\n  .method('acceptsLanguages')\n  .method('acceptsEncodings')\n  .method('acceptsCharsets')\n  .method('accepts')\n  .method('get')\n  .method('is')\n  .access('querystring')\n  .access('idempotent')\n  .access('socket')\n  .access('search')\n  .access('method')\n  .access('query')\n  .access('path')\n  .access('url')\n  .access('accept')\n  .getter('origin')\n  .getter('href')\n  .getter('subdomains')\n  .getter('protocol')\n  .getter('host')\n  .getter('hostname')\n  .getter('URL')\n  .getter('header')\n  .getter('headers')\n  .getter('secure')\n  .getter('stale')\n  .getter('fresh')\n  .getter('ips')\n  .getter('ip')\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/accepts/types').Accepts} _goa.Accepts\n */","import assert from 'assert'\nimport { extname } from 'path'\nimport statuses, { empty, redirect } from '@goa/statuses'\nimport onFinish from '../modules/on-finished'\nimport destroy from '../modules/destroy'\nimport vary from '@goa/vary'\nimport { inspect } from 'util'\nimport { is } from '@goa/type-is'\nimport contentDisposition from '../modules/content-disposition'\nimport ensureErrorHandler from '../modules/error-inject'\nimport getType from '../modules/cache-content-type'\nimport isJSON from '../modules/koa-is-json'\nimport escape from '../modules/escape-html'\n\nimport Context from './context' // eslint-disable-line\nimport Request from './request' // eslint-disable-line\n\n/**\n * The response implementation.\n * @implements {_goa.Response}\n */\nexport default class Response {\n  constructor() {\n    /**\n     * @suppress {checkTypes}\n     * @type {_goa.Application}\n     */\n    this.app = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Context}\n     */\n    this.ctx = null\n    /**\n     * @suppress {checkTypes}\n     * @type {Request}\n     */\n    this.request = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.IncomingMessage}\n     */\n    this.req = null\n    /**\n     * @suppress {checkTypes}\n     * @type {http.ServerResponse}\n     */\n    this.res = null\n    /** @type {?boolean} */\n    this._explicitStatus = null\n    /** @type {?} */\n    this._body = undefined\n  }\n  /**\n   * Return the request socket.\n   */\n  get socket() {\n    return /** @type {net.Socket} */ (this.res.socket)\n  }\n\n  /**\n   * Return response header.\n   */\n  get header() {\n    return this.res.getHeaders()\n  }\n\n  /**\n   * Return response header, alias as response.header\n   */\n  get headers() {\n    return this.header\n  }\n\n  /**\n   * Get response status code.\n   */\n  get status() {\n    return this.res.statusCode\n  }\n\n  /**\n   * Set response status code.\n   */\n  set status(code) {\n    if (this.headerSent) return\n\n    assert(Number.isInteger(code), 'status code must be a number')\n    assert(code >= 100 && code <= 999, `invalid status code: ${code}`)\n    this._explicitStatus = true\n    this.res.statusCode = code\n    if (this.req.httpVersionMajor < 2) this.res.statusMessage = statuses[code]\n    if (this.body && empty[code]) this.body = null\n  }\n\n  /**\n   * Get response status message.\n   */\n  get message() {\n    return this.res.statusMessage || statuses[this.status]\n  }\n\n  /**\n   * Set response status message.\n   * @param {string} msg\n   */\n  set message(msg) {\n    this.res.statusMessage = msg\n  }\n\n  /**\n   * Get response body.\n   * @returns {string|!Buffer|Object|!stream.Stream}\n   */\n  get body() {\n    return this._body\n  }\n\n  /**\n   * Set response body.\n   * @param {string|!Buffer|Object|!stream.Stream} val\n   */\n  set body(val) {\n    const original = this._body\n    this._body = val\n\n    // no content\n    if (null == val) {\n      if (!empty[this.status]) this.status = 204\n      this.remove('Content-Type')\n      this.remove('Content-Length')\n      this.remove('Transfer-Encoding')\n      return\n    }\n\n    // set the status\n    if (!this._explicitStatus) this.status = 200\n\n    // set the content-type only if not yet set\n    const setType = !this.header['content-type']\n\n    // string\n    if ('string' == typeof val) {\n      if (setType) this.type = /^\\s*</.test(val) ? 'html' : 'text'\n      this.length = Buffer.byteLength(val)\n      return\n    }\n\n    // buffer\n    if (Buffer.isBuffer(val)) {\n      if (setType) this.type = 'bin'\n      this.length = val.length\n      return\n    }\n\n    // stream\n    if ('function' == typeof val.pipe) {\n      onFinish(/** @type {!http.ServerResponse} */ (this.res), destroy.bind(null, /** @type {!stream.Stream} */ (val)))\n      ensureErrorHandler(val, err => this.ctx.onerror(err))\n\n      // overwriting\n      if (null != original && original != val) this.remove('Content-Length')\n\n      if (setType) this.type = 'bin'\n      return\n    }\n\n    // json\n    this.remove('Content-Length')\n    this.type = 'json'\n  }\n\n  /**\n   * Set Content-Length field to `n`.\n   */\n  set length(n) {\n    this.set('Content-Length', /** @type {number} */ (n))\n  }\n\n  /**\n   * Return parsed response Content-Length when present.\n   */\n  get length() {\n    const len = this.header['content-length']\n    const body = this.body\n\n    if (null == len) {\n      if (!body) return null\n      if ('string' == typeof body) return Buffer.byteLength(body)\n      if (Buffer.isBuffer(body)) return body.length\n      if (isJSON(body)) return Buffer.byteLength(JSON.stringify(body))\n      return null\n    }\n\n    return Math.trunc(parseInt(len, 10)) || 0\n  }\n\n  /**\n   * Check if a header has been written to the socket.\n   */\n  get headerSent() {\n    return this.res.headersSent\n  }\n\n  /**\n   * Vary on `field`.\n   */\n  vary(field) {\n    if (this.headerSent) return\n\n    vary(this.res, field)\n  }\n\n  /**\n   * Perform a 302 redirect to `url`.\n   * The string \"back\" is special-cased\n   * to provide Referrer support, when Referrer\n   * is not present `alt` or \"/\" is used.\n   * Examples:\n   *    this.redirect('back');\n   *    this.redirect('back', '/index.html');\n   *    this.redirect('/login');\n   *    this.redirect('http://google.com');\n   * @param {string} url\n   * @param {string} [alt]\n   */\n  redirect(url, alt) {\n    // location\n    if ('back' == url) url = this.ctx.get('Referrer') || alt || '/' // todo\n    this.set('Location', url)\n\n    // status\n    if (!redirect[this.status]) this.status = 302\n\n    // html\n    if (this.ctx.accepts('html')) { // todo\n      url = escape(url)\n      this.type = 'text/html; charset=utf-8'\n      this.body = `Redirecting to <a href=\"${url}\">${url}</a>.`\n      return\n    }\n\n    // text\n    this.type = 'text/plain; charset=utf-8'\n    this.body = `Redirecting to ${url}.`\n  }\n\n  /**\n   * Set Content-Disposition header to \"attachment\" with optional `filename`.\n   * @param {string} [filename]\n   * @param {!_goa.ContentDisposition} [options]\n   */\n  attachment(filename, options) {\n    if (filename) this.type = extname(filename)\n    this.set('Content-Disposition', contentDisposition(filename, options))\n  }\n\n  /**\n   * Set Content-Type response header with `type` through `mime.lookup()`\n   * when it does not contain a charset.\n   * Examples:\n   *     this.type = '.html';\n   *     this.type = 'html';\n   *     this.type = 'json';\n   *     this.type = 'application/json';\n   *     this.type = 'png';\n   * @param {string} type\n   */\n  set type(type) {\n    type = getType(type)\n    if (type) {\n      this.set('Content-Type', type)\n    } else {\n      this.remove('Content-Type')\n    }\n  }\n\n  /**\n   * Set the Last-Modified date using a string or a Date.\n   *     this.response.lastModified = new Date();\n   *     this.response.lastModified = '2013-09-13';\n   * @param {string|Date} val\n   */\n  set lastModified(val) {\n    if ('string' == typeof val) val = new Date(val)\n    this.set('Last-Modified', val.toUTCString())\n  }\n\n  /**\n   * Get the Last-Modified date in Date form, if it exists.\n   */\n  get lastModified() {\n    const date = this.get('last-modified')\n    if (date) return new Date(date)\n    return null\n  }\n\n  /**\n   * Set the ETag of a response.\n   * This will normalize the quotes if necessary.\n   *     this.response.etag = 'md5hashsum';\n   *     this.response.etag = '\"md5hashsum\"';\n   *     this.response.etag = 'W/\"123456789\"';\n   * @param {string} val\n   */\n  set etag(val) {\n    if (!/^(W\\/)?\"/.test(val)) val = `\"${val}\"`\n    this.set('ETag', val)\n  }\n\n  /**\n   * Get the ETag of a response.\n   */\n  get etag() {\n    return this.get('ETag')\n  }\n\n  /**\n   * Return the response mime type void of\n   * parameters such as \"charset\".\n   */\n  get type() {\n    const type = this.get('Content-Type')\n    if (!type) return ''\n    return type.split(';', 1)[0]\n  }\n\n  /**\n   * Check whether the response is one of the listed types.\n   * Pretty much the same as `this.request.is()`.\n   * @param {string|!Array<string>} types\n   * @param {...string} args\n   * @return {string|boolean}\n   */\n  is(types, ...args) {\n    const type = this.type\n    if (!types) return type || false\n    if (!Array.isArray(types)) types = [types, ...args]\n    return is(type, types)\n  }\n\n  /**\n   * Return response header.\n   * Examples:\n   *     this.get('Content-Type');\n   *     // => \"text/plain\"\n   *     this.get('content-type');\n   *     // => \"text/plain\"\n   * @param {string} field\n   */\n  get(field) {\n    return this.header[field.toLowerCase()] || ''\n  }\n\n  /**\n   * Set header `field` to `val`, or pass\n   * an object of header fields.\n   * Examples:\n   *    this.set('Foo', ['bar', 'baz']);\n   *    this.set('Accept', 'application/json');\n   *    this.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n   * @param {string|!Object} field\n   * @param {string|!Array|number} [val]\n   */\n  set(field, val) {\n    if (this.headerSent) return\n\n    if (2 == arguments.length) {\n      const f = /** @type {string} */ (field)\n      if (Array.isArray(val)) val = val.map(v => typeof v == 'string' ? v : String(v))\n      else if (typeof val != 'string') val = String(val)\n      this.res.setHeader(f, val)\n    } else {\n      for (const key in field) {\n        this.set(key, field[key])\n      }\n    }\n  }\n\n  /**\n   * Append additional header `field` with value `val`.\n   * Examples:\n```\nthis.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\nthis.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\nthis.append('Warning', '199 Miscellaneous warning');\n```\n   * @param {string} field\n   * @param {!string|!Array<string>} val\n   */\n  append(field, val) {\n    const prev = this.get(field)\n\n    if (prev) {\n      val = Array.isArray(prev)\n        ? prev.concat(val)\n        : [prev].concat(val)\n    }\n\n    return this.set(field, val)\n  }\n\n  /**\n   * Remove header `field`.\n   * @param {string} field\n   */\n  remove(field) {\n    if (this.headerSent) return\n\n    this.res.removeHeader(field)\n  }\n\n  /**\n   * Checks if the request is writable.\n   * Tests for the existence of the socket\n   * as node sometimes does not set it.\n   * @private\n   */\n  get writable() {\n    // can't write any more after response finished\n    if (this.res.finished) return false\n\n    const socket = /** @type {!net.Socket} */ (this.res.socket)\n    // There are already pending outgoing res, but still writable\n    // https://github.com/nodejs/node/blob/v4.4.7/lib/_http_server.js#L486\n    if (!socket) return true\n    return socket.writable\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    if (!this.res) return\n    const o = this.toJSON()\n    o.body = this.body\n    return o\n  }\n\n  /**\n   * Return JSON representation.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'status': this.status,\n      'message': this.message,\n      'header': this.header,\n    }\n  }\n\n  /**\n   * Flush any set headers, and begin the body\n   */\n  flushHeaders() {\n    this.res.flushHeaders()\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('net').Socket} net.Socket\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import Debug from '@idio/debug'\nimport isGeneratorFunction from '@goa/is-generator-function'\nimport { createServer } from 'http'\nimport Stream from 'stream'\nimport EventEmitter from 'events'\nimport { format } from 'util'\nimport Response from './response'\nimport Request from './request'\nimport Context from './context'\nimport { inspect } from 'util'\nimport { empty } from '@goa/statuses'\nimport isJSON from '../modules/koa-is-json'\nimport onFinished from '../modules/on-finished'\nimport compose from '@goa/compose'\n\nconst debug = Debug('@goa/koa:application')\n\n/**\n * @implements {_goa.Application}\n */\nexport default class Application extends EventEmitter {\n  /**\n   * Initialize a new `Application`.\n   * @param {!_goa.ApplicationOptions} options\n   */\n  constructor(options = {}) {\n    const {\n      proxy = false,\n      subdomainOffset = 2,\n      env = process.env.NODE_ENV || 'development',\n      keys,\n      Context: C = Context,\n    } = options\n    super()\n\n    this.proxy = proxy\n    this.silent = false\n    this.middleware = []\n    this.subdomainOffset = subdomainOffset,\n    this.env = env\n    this.context = /** @type {!Context} */ (Object.create(C.prototype))\n    this.request = /** @type {!Request} */ (Object.create(Request.prototype))\n    this.response = /** @type {!Response} */ (Object.create(Response.prototype))\n\n    this.keys = keys\n    // if (util.inspect.custom) {\n    //   this[util.inspect.custom] = this.inspect\n    // }\n  }\n  /**\n   * @suppress {checkTypes}\n   */\n  [inspect.custom]() {\n    return this.inspect()\n  }\n\n  /**\n   * Shorthand for:\n   *\n   *    http.createServer(app.callback()).listen(...)\n   *\n   */\n  listen(...args) {\n    debug('listen')\n    const server = createServer(this.callback())\n    return server.listen(...args)\n  }\n\n  /**\n   * Return JSON representation.\n   * We only bother showing settings.\n   * @return {!Object}\n   */\n  toJSON() {\n    return {\n      'subdomainOffset': this.subdomainOffset,\n      'proxy': this.proxy,\n      'env': this.env,\n    }\n  }\n\n  /**\n   * Inspect implementation.\n   */\n  inspect() {\n    return this.toJSON()\n  }\n\n  /**\n   * Use the given middleware `fn`.\n   *\n   * Old-style middleware will be converted.\n   *\n   * @param {!_goa.Middleware} fn\n   */\n  use(fn) {\n    if (typeof fn != 'function')\n      throw new TypeError('middleware must be a function!')\n    if (isGeneratorFunction(fn)) {\n      throw new Error(\n        'Generator functions are not supported by @goa/koa. Use koa-convert on them first.')\n    }\n    debug('use %s', fn._name || fn.name || '-')\n    this.middleware.push(fn)\n    return this\n  }\n\n  /**\n   * Return a request handler callback for node's native http server.\n   */\n  callback() {\n    const fn = compose(this.middleware)\n\n    if (!this.listenerCount('error')) this.on('error', this.onerror)\n\n    /** @type {function(!http.IncomingMessage, !http.ServerResponse): !Promise} */\n    const handleRequest = (req, res) => {\n      const ctx = this.createContext(req, res)\n      return this.handleRequest(ctx, fn)\n    }\n\n    return handleRequest\n  }\n\n  /**\n   * Handle request in callback.\n   * @param {!_goa.Context} ctx\n   * @param {!_goa.Middleware} middleware Composed middleware.\n   * @private\n   */\n  async handleRequest(ctx, middleware) {\n    const res = ctx.res\n    res.statusCode = 404\n    const onerror = err => ctx.onerror(err)\n    onFinished(res, onerror)\n    try {\n      await middleware(ctx)\n      return respond(ctx)\n    } catch (err) {\n      onerror(err)\n    }\n    // const onerror = err => ctx.onerror(err)\n    // const handleResponse = () => respond(ctx)\n    // onFinished(res, onerror)\n    // return fnMiddleware(ctx).then(handleResponse).catch(onerror)\n  }\n\n  /**\n   * Initialize a new context.\n   * @param {!http.IncomingMessage} req\n   * @param {!http.ServerResponse} res\n   * @private\n   */\n  createContext(req, res) {\n    const context = /** @type {!Context} */\n      (Object.create(this.context))\n    const request = context.request = /** @type {!Request} */\n      (Object.create(this.request))\n    const response = context.response = /** @type {!Response} */\n      (Object.create(this.response))\n    context.app = request.app = response.app = this\n    context.req = request.req = response.req = req\n    context.res = request.res = response.res = res\n    request.ctx = response.ctx = context\n    request.response = response\n    response.request = request\n    context.originalUrl = request.originalUrl = req.url\n    context.state = {}\n    return context\n  }\n\n  /**\n   * Default error handler.\n   * @param {!Error} err\n   * @private\n   */\n  onerror(err) {\n    if (!(err instanceof Error))\n      throw new TypeError(format('non-error thrown: %j', err))\n\n    if (404 == err.status || err.expose) return\n    if (this.silent) return\n\n    const msg = err.stack || err.toString()\n    console.error()\n    console.error(msg.replace(/^/gm, '  '))\n    console.error()\n  }\n}\n\n/**\n * Response helper.\n * @param {!_goa.Context} ctx\n */\nfunction respond(ctx) {\n  // allow bypassing koa\n  if (false == ctx.respond) return\n\n  if (!ctx.writable) return\n\n  const { res, status: code } = ctx\n  let body = ctx.body\n\n  // ignore body\n  if (empty[code]) {\n    // strip headers\n    ctx.body = null\n    return res.end()\n  }\n\n  if ('HEAD' == ctx.method) {\n    if (!res.headersSent && isJSON(body)) {\n      ctx.length = Buffer.byteLength(JSON.stringify(body))\n    }\n    return res.end()\n  }\n\n  // status body\n  if (null == body) {\n    if (ctx.req.httpVersionMajor >= 2) {\n      body = String(code)\n    } else {\n      body = ctx.message || String(code)\n    }\n    if (!res.headersSent) {\n      ctx.type = 'text'\n      ctx.length = Buffer.byteLength(body)\n    }\n    return res.end(body)\n  }\n\n  // responses\n  if (Buffer.isBuffer(body)) return res.end(body)\n  if ('string' == typeof body) return res.end(body)\n  if (body instanceof Stream) return body.pipe(res)\n\n  // body: json\n  body = JSON.stringify(body)\n  if (!res.headersSent) {\n    ctx.length = Buffer.byteLength(body)\n  }\n  res.end(body)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').Server} http.Server\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Context} _goa.Context\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ApplicationOptions} _goa.ApplicationOptions\n */","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  const tokens = []\n  let i = 0\n\n  while (i < str.length) {\n    const char = str[i]\n\n    if (char === '*' || char === '+' || char === '?') {\n      tokens.push({ type: 'MODIFIER', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === '\\\\') {\n      tokens.push({ type: 'ESCAPED_CHAR', index: i++, value: str[i++] })\n      continue\n    }\n\n    if (char === '{') {\n      tokens.push({ type: 'OPEN', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === '}') {\n      tokens.push({ type: 'CLOSE', index: i, value: str[i++] })\n      continue\n    }\n\n    if (char === ':') {\n      let name = ''\n      let j = i + 1\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j)\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++]\n          continue\n        }\n\n        break\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`)\n\n      tokens.push({ type: 'NAME', index: i, value: name })\n      i = j\n      continue\n    }\n\n    if (char === '(') {\n      let count = 1\n      let pattern = ''\n      let j = i + 1\n\n      if (str[j] === '?') {\n        throw new TypeError(`Pattern cannot start with '?' at ${j}`)\n      }\n\n      while (j < str.length) {\n        if (str[j] === '\\\\') {\n          pattern += str[j++] + str[j++]\n          continue\n        }\n\n        if (str[j] === ')') {\n          count--\n          if (count === 0) {\n            j++\n            break\n          }\n        } else if (str[j] === '(') {\n          count++\n          if (str[j + 1] !== '?') {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`)\n          }\n        }\n\n        pattern += str[j++]\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`)\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`)\n\n      tokens.push({ type: 'PATTERN', index: i, value: pattern })\n      i = j\n      continue\n    }\n\n    tokens.push({ type: 'CHAR', index: i, value: str[i++] })\n  }\n\n  tokens.push({ type: 'END', index: i, value: '' })\n\n  return tokens\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options = {}) {\n  const tokens = lexer(str)\n  const { prefixes = './' } = options\n  const defaultPattern = `[^${escapeString(options.delimiter || '/#?')}]+?`\n  const result = []\n  let key = 0\n  let i = 0\n  let path = ''\n\n  const tryConsume = (type) => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value\n  }\n\n  const mustConsume = (type) => {\n    const value = tryConsume(type)\n    if (value !== undefined) return value\n    const { type: nextType, index } = tokens[i]\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`)\n  }\n\n  const consumeText = () => {\n    let result = ''\n    let value\n    // tslint:disable-next-line\n    while ((value = tryConsume('CHAR') || tryConsume('ESCAPED_CHAR'))) {\n      result += value\n    }\n    return result\n  }\n\n  while (i < tokens.length) {\n    const char = tryConsume('CHAR')\n    const name = tryConsume('NAME')\n    const pattern = tryConsume('PATTERN')\n\n    if (name || pattern) {\n      let prefix = char || ''\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix\n        prefix = ''\n      }\n\n      if (path) {\n        result.push(path)\n        path = ''\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: '',\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume('MODIFIER') || '',\n      })\n      continue\n    }\n\n    const value = char || tryConsume('ESCAPED_CHAR')\n    if (value) {\n      path += value\n      continue\n    }\n\n    if (path) {\n      result.push(path)\n      path = ''\n    }\n\n    const open = tryConsume('OPEN')\n    if (open) {\n      const prefix = consumeText()\n      const name = tryConsume('NAME') || ''\n      const pattern = tryConsume('PATTERN') || ''\n      const suffix = consumeText()\n\n      mustConsume('CLOSE')\n\n      result.push({\n        name: name || (pattern ? key++ : ''),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume('MODIFIER') || '',\n      })\n      continue\n    }\n\n    mustConsume('END')\n  }\n\n  return result\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(\n  tokens,\n  options = {}\n) {\n  const reFlags = flags(options)\n  const { encode = (x) => x, validate = true } = options\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map(token => {\n    if (typeof token === 'object') {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags)\n    }\n  })\n\n  return (data) => {\n    let path = ''\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      const value = data ? data[token.name] : undefined\n      const optional = token.modifier === '?' || token.modifier === '*'\n      const repeat = token.modifier === '*' || token.modifier === '+'\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected '${token.name}' to not repeat, but got an array`\n          )\n        }\n\n        if (value.length === 0) {\n          if (optional) continue\n\n          throw new TypeError(`Expected '${token.name}' to not be empty`)\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\n              `Expected all '${token.name}' to match '${token.pattern}', but got '${segment}'`\n            )\n          }\n\n          path += token.prefix + segment + token.suffix\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        const segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\n            `Expected '${token.name}' to match '${token.pattern}', but got '${segment}'`\n          )\n        }\n\n        path += token.prefix + segment + token.suffix\n        continue\n      }\n\n      if (optional) continue\n\n      const typeOfMessage = repeat ? 'an array' : 'a string'\n      throw new TypeError(`Expected '${token.name}' to be ${typeOfMessage}`)\n    }\n\n    return path\n  }\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(\n  str,\n  options,\n) {\n  const keys = []\n  const re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys, options)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(\n  re,\n  keys,\n  options = {},\n) {\n  const { decode = (x) => x } = options\n\n  return function(pathname) {\n    const m = re.exec(pathname)\n    if (!m) return false\n\n    const { 0: path, index } = m\n    const params = Object.create(null)\n\n    for (let i = 1; i < m.length; i++) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) continue\n\n      const key = keys[i - 1]\n\n      if (key.modifier === '*' || key.modifier === '+') {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(value => {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path, index, params }\n  }\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options = {}) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n * @param {!RegExp} path\n * @param {!Array<!Object>} keys\n */\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  const groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (let i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: '',\n        suffix: '',\n        modifier: '',\n        pattern: '',\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths,\n  keys,\n  options,\n) {\n  const parts = paths.map(path => pathToRegexp(path, keys, options).source)\n  return new RegExp(`(?:${parts.join('|')})`, flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n * @param {string} path\n */\nfunction stringToRegexp(\n  path,\n  keys,\n  options,\n) {\n  return tokensToRegexp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens,\n  keys,\n  options = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x) => x,\n  } = options\n  const endsWith = `[${escapeString(options.endsWith || '')}]|$`\n  const delimiter = `[${escapeString(options.delimiter || '/#?')}]`\n  let route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token == 'string') {\n      route += escapeString(encode(token))\n    } else {\n      const prefix = escapeString(encode(token.prefix))\n      const suffix = escapeString(encode(token.suffix))\n\n      if (token.pattern) {\n        if (keys) keys.push(token)\n\n        if (prefix || suffix) {\n          if (token.modifier == '+' || token.modifier == '*') {\n            const mod = token.modifier == '*' ? '?' : ''\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`\n          }\n        } else {\n          route += `(${token.pattern})${token.modifier}`\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiter}?`\n\n    route += !options.endsWith ? '$' : `(?=${endsWith})`\n  } else {\n    const endToken = tokens[tokens.length - 1]\n    const isEndDelimited =\n      typeof endToken === 'string'\n        ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n        : // tslint:disable-next-line\n        endToken === undefined\n\n    if (!strict) {\n      route += `(?:${delimiter}(?=${endsWith}))?`\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiter}|${endsWith})`\n    }\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport default function pathToRegexp(\n  path,\n  keys,\n  options,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys)\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options)\n  return stringToRegexp(path, keys, options)\n}\n\n/*!\n * path-to-regexp\n * The MIT License (MIT)\n * Copyright (c) 2014 Blake Embrey (hello@blakeembrey.com)\n */","import Debug from '@idio/debug'\nimport pathToRegExp, { compile, parse } from './path-to-regexp'\nimport { stringify } from 'querystring'\n\nconst debug = Debug('koa-router')\n\n/**\n * @implements {_goa.Layer}\n */\nexport default class Layer {\n  /**\n   * Initialize a new routing Layer with given `method`, `path`, and `middleware`.\n   *\n   * @param {string|!RegExp} path Path string or regular expression.\n   * @param {!Array<string>} methods Array of HTTP verbs.\n   * @param {!_goa.Middleware|!Array<!_goa.Middleware>} middleware Layer callback/middleware or series of.\n   * @param {!_goa.LayerConfig} [opts] The options.\n   */\n  constructor(path, methods, middleware, opts = {}) {\n    const { name = null } = opts\n    this.opts = opts\n    /**\n     * @type {string|null}\n     */\n    this.name = name\n    /**\n     * @type {!Array<string>}\n     */\n    this.methods = []\n    this.paramNames = []\n    this.stack = Array.isArray(middleware) ? middleware : [middleware]\n\n    methods.forEach((method) => {\n      const l = this.methods.push(method.toUpperCase())\n      if (this.methods[l-1] == 'GET') {\n        this.methods.unshift('HEAD')\n      }\n    })\n\n    // ensure middleware is a function\n    this.stack.forEach((fn) => {\n      const type = typeof fn\n      if (type != 'function') {\n        throw new Error(\n          methods.toString() + \" `\" + (name || path) +\"`: `middleware` \"\n          + \"must be a function, not `\" + type + \"`\"\n        )\n      }\n    })\n\n    this.path = path\n    this.regexp = pathToRegExp(\n      typeof path == 'string' ? path.replace(/\\/$/, '') : path,\n      this.paramNames, this.opts)\n\n    debug('defined route %s %s', this.methods, this.opts.prefix + this.path)\n  }\n  /**\n   * Returns whether request `path` matches route.\n   * @param {string} path\n   */\n  match(path) {\n    return this.regexp.test(path)\n  }\n\n  /**\n   * Returns map of URL parameters for given `path` and `paramNames`.\n   * @param {string} path\n   * @param {!Array<string>} captures\n   * @param {!Object} [params]\n   */\n  params(path, captures, params = {}) {\n    for (let len = captures.length, i=0; i<len; i++) {\n      if (this.paramNames[i]) {\n        const c = captures[i]\n        params[this.paramNames[i].name] = c ? safeDecodeURIComponent(c) : c\n      }\n    }\n\n    return params\n  }\n  /**\n   * Returns array of regexp url path captures.\n   * @param {string} path\n   */\n  captures(path) {\n    if (this.opts.ignoreCaptures) return []\n    return path.match(this.regexp).slice(1)\n  }\n  /**\n   * Generate URL for route using given `params`.\n   *\n   * @example\n   *\n   * ```javascript\n   * var route = new Layer(['GET'], '/users/:id', fn);\n   *\n   * route.url({ id: 123 }); // => \"/users/123\"\n   * ```\n   *\n   * @param {!Object|string} params url parameters\n   * @param {!Object|string} options\n   */\n  url(params, options) {\n    let args = params\n    const url = this.path.replace(/\\(\\.\\*\\)/g, '')\n    const toPath = compile(url, {\n      encode: encodeURIComponent,\n    })\n    let replaced\n\n    if (typeof params != 'object') {\n      args = [...arguments]\n      if (typeof args[args.length - 1] == 'object') {\n        options = args[args.length - 1]\n        args = args.slice(0, args.length - 1)\n      }\n    }\n\n    const tokens = parse(url)\n    let replace = {}\n\n    if (Array.isArray(args)) {\n      for (let len = tokens.length, i=0, j=0; i<len; i++) {\n        if (tokens[i].name) replace[tokens[i].name] = args[j++]\n      }\n    } else if (tokens.some(token => token.name)) {\n      replace = params\n    } else {\n      options = params\n    }\n\n    replaced = toPath(replace)\n    if (options && options['query']) {\n      const query = options['query']\n      const q = typeof query == 'string' ? query : stringify(query)\n      return `${replaced}?${q}`\n    }\n\n    return replaced\n  }\n  /**\n   * Run validations on route named parameters.\n   *\n   * @example\n   *\n   * ```javascript\n   * router\n   *   .param('user', function (id, ctx, next) {\n   *     ctx.user = users[id];\n   *     if (!user) return ctx.status = 404;\n   *     next();\n   *   })\n   *   .get('/users/:user', function (ctx, next) {\n   *     ctx.body = ctx.user;\n   *   });\n   * ```\n   *\n   * @param {string} param\n   * @param {!Function} middleware\n   */\n  param(param, middleware) {\n    function mw (ctx, next) {\n      return middleware.call(this, ctx.params[param], ctx, next)\n    }\n    mw.param = param\n\n    const names = this.paramNames.map(({ name }) => name)\n\n    const x = names.indexOf(param)\n    if (x > -1) {\n      // iterate through the stack, to figure out where to place the handler fn\n      this.stack.some((fn, i) => {\n        // param handlers are always first, so when we find an fn w/o a param property, stop here\n        // if the param handler at this part of the stack comes after the one we are adding, stop here\n        if (!fn.param || names.indexOf(fn.param) > x) {\n          // inject this param handler right before the current item\n          this.stack.splice(i, 0, mw)\n          return true // then break the loop\n        }\n      })\n    }\n\n    return this\n  }\n\n  /**\n   * Prefix route path.\n   * @param {string} prefix\n   */\n  setPrefix(prefix) {\n    if (this.path) {\n      this.path = prefix + this.path\n      this.paramNames = []\n      const path = this.path\n      this.regexp = pathToRegExp(typeof path == 'string' ? path.replace(/\\/$/, '') : path,\n        this.paramNames, this.opts)\n    }\n\n    return this\n  }\n}\n\n\n/**\n * Safe decodeURIComponent, won't throw any error.\n * If `decodeURIComponent` error happen, just return the original value.\n *\n * @param {string} text\n */\nfunction safeDecodeURIComponent(text) {\n  try {\n    return decodeURIComponent(text)\n  } catch (e) {\n    return text\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').LayerConfig} _goa.LayerConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */","/*!\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\n\nimport Debug from '@idio/debug'\nimport compose from '@goa/compose'\nimport HttpError from '@goa/http-errors'\nimport { METHODS } from 'http'\nimport Layer from './layer'\n\nconst debug = Debug('@goa/router')\n\n/**\n * @implements {_goa.Router}\n */\nexport default class Router {\n  /**\n   * Create a new router.\n   * @param {!_goa.RouterConfig} [opts]\n   */\n  constructor(opts = {}) {\n    const { methods = [\n      'HEAD',\n      'OPTIONS',\n      'GET',\n      'PUT',\n      'PATCH',\n      'POST',\n      'DELETE',\n    ] } = opts\n    this.opts = opts\n    /** @type {!Array<string>} */\n    this.methods = methods\n\n    this.params = {}\n    /**\n     * @type {!Array<!Layer>}\n     */\n    this.stack = []\n  }\n  /**\n   * Returns the middleware with allowed methods.\n   * @param {_goa.AllowedMethodsOptions} options\n   */\n  allowedMethods(options = {}) {\n    const { throw: t = false, notImplemented, methodNotAllowed } = options\n\n    /** @type {!_goa.Middleware} */\n    const mw = async (ctx, next) => {\n      await next()\n      const allowed = {}\n      const { status = 404 } = ctx\n\n      if (status == 404) {\n        ctx.matched.forEach((route) => {\n          route.methods.forEach((method) => {\n            allowed[method] = method\n          })\n        })\n\n        const allowedArr = Object.keys(allowed)\n\n        if (!this.methods.includes(ctx.method)) {\n          if (t) {\n            let notImplementedThrowable\n            if (typeof notImplemented == 'function') {\n              notImplementedThrowable = notImplemented() // set whatever the user returns from their function\n            } else {\n              notImplementedThrowable = new HttpError['NotImplemented']()\n            }\n            throw notImplementedThrowable\n          } else {\n            ctx.status = 501\n            ctx.set('Allow', allowedArr.join(', '))\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method == 'OPTIONS') {\n            ctx.status = 200\n            ctx.body = ''\n            ctx.set('Allow', allowedArr.join(', '))\n          } else if (!allowed[ctx.method]) {\n            if (t) {\n              let notAllowedThrowable\n              if (typeof methodNotAllowed == 'function') {\n                notAllowedThrowable = methodNotAllowed() // set whatever the user returns from their function\n              } else {\n                notAllowedThrowable = new HttpError['MethodNotAllowed']()\n              }\n              throw notAllowedThrowable\n            } else {\n              ctx.status = 405\n              ctx.set('Allow', allowedArr.join(', '))\n            }\n          }\n        }\n      }\n    }\n    return mw\n  }\n\n  /**\n   * Redirect `source` to `destination` URL with optional 30x status `code`.\n   * Both `source` and `destination` can be route names.\n   *\n   * @param {string} source URL or route name.\n   * @param {string} destination URL or route name.\n   * @param {number} [code] HTTP status code (default: 301).\n   */\n  redirect(source, destination, code = 301) {\n    // lookup source route by name\n    if (source[0] != '/') {\n      const s = this.url(source)\n      if (s instanceof Error) throw s\n      source = s\n    }\n\n    // lookup destination route by name\n    if (destination[0] != '/') {\n      const d = this.url(destination)\n      if (d instanceof Error) throw d\n      destination = d\n    }\n\n    return this['all'](source, ctx => {\n      ctx.redirect(destination)\n      ctx.status = /** @type {number} */ (code)\n    })\n  }\n\n  /**\n   * Create and register a route.\n   *\n   * @param {string|!Array<string>|RegExp} path The path string or an array of paths.\n   * @param {!Array<string>} methods Array of HTTP verbs.\n   * @param {!_goa.Middleware|!Array<!_goa.Middleware>} middleware Multiple middleware also accepted.\n   * @param {!Object} [opts]\n   * @private\n   */\n  register(path, methods, middleware, opts = {}) {\n    const { ignoreCaptures, prefix = this.opts.prefix || '',\n      strict = this.opts.strict || false, end = true, name,\n      sensitive = this.opts.sensitive || false } = opts\n\n    // support array of paths\n    if (Array.isArray(path)) {\n      path.forEach((p) => {\n        this.register(p, methods, middleware, opts)\n      })\n\n      return this\n    }\n\n    // create route\n    const route = new Layer(path, methods, middleware, {\n      end,\n      name,\n      sensitive,\n      strict,\n      prefix,\n      ignoreCaptures,\n    })\n\n    if (this.opts.prefix) {\n      route.setPrefix(this.opts.prefix)\n    }\n\n    // add parameter middleware\n    Object.keys(this.params).forEach((param) => {\n      route.param(param, this.params[param])\n    })\n\n    this.stack.push(route)\n\n    return route\n  }\n\n  /**\n   * Lookup route with given `name`.\n   * @param {string} name\n   */\n  route(name) {\n    const routes = this.stack\n\n    for (let len = routes.length, i=0; i<len; i++) {\n      if (routes[i].name && routes[i].name == name) {\n        return routes[i]\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Generate URL for route. Takes a route name and map of named `params`.\n   * @param {string} name route name\n   * @param {...!Object} params url parameters and options\n   */\n  url(name, ...params) {\n    const route = this.route(name)\n\n    if (route)\n      return route.url(...params)\n\n    return new Error(`No route found for name: ${name}`)\n  }\n\n  /**\n   * Match given `path` and return corresponding routes.\n   *\n   * @param {string} path\n   * @param {string} method\n   * path and method.\n   * @private\n   */\n  match(path, method) {\n    const layers = this.stack\n    let layer\n    const matched = {\n      /** @type {!Array<!Layer>} */\n      path: [],\n      /** @type {!Array<!Layer>} */\n      pathAndMethod: [],\n      route: false,\n    }\n\n    for (let len = layers.length, i = 0; i < len; i++) {\n      layer = layers[i]\n\n      debug('test %s %s', layer.path, layer.regexp)\n\n      if (layer.match(path)) {\n        matched.path.push(layer)\n\n        if (layer.methods.length == 0 || layer.methods.includes(method)) {\n          matched.pathAndMethod.push(layer)\n          if (layer.methods.length) matched.route = true\n        }\n      }\n    }\n\n    return matched\n  }\n\n  /**\n   * Run middleware for named route parameters. Useful for auto-loading or\n   * validation.\n   * @param {string} param\n   * @param {!_goa.Middleware} middleware\n   */\n  param(param, middleware) {\n    this.params[param] = middleware\n    this.stack.forEach((route) => {\n      route.param(param, middleware)\n    })\n    return this\n  }\n\n  /**\n   * Generate URL from url pattern and given `params`.\n   * @param {string} path Url pattern.\n   * @param {!Array<!Object>} params Url parameters.\n   */\n  static url(path, ...params) {\n    return Layer.prototype.url.apply(/** @type {!Layer} */ ({ path }), params)\n  }\n  /**\n   * Set the path prefix for a Router instance that was already initialized.\n   * @param {string} prefix The prefix to set.\n   */\n  prefix(prefix) {\n    prefix = prefix.replace(/\\/$/, '')\n\n    this.opts.prefix = prefix\n\n    this.stack.forEach((route) => {\n      route.setPrefix(prefix)\n    })\n\n    return this\n  }\n  /**\n   * Use given middleware.\n   *\n   * Middleware run in the order they are defined by `.use()`. They are invoked\n   * sequentially, requests start at the first middleware and work their way\n   * \"down\" the middleware stack.\n   *\n   * @param {string|Array<string>|!_goa.Middleware} path\n   * @param {...!_goa.Middleware} middleware\n   */\n  use(path, ...middleware) {\n    // support array of paths\n    if (Array.isArray(path) && typeof path[0] == 'string') {\n      path.forEach((p) => {\n        this.use(p, ...middleware)\n      })\n      return this\n    }\n\n    const hasPath = typeof path == 'string'\n    if (!hasPath) {\n      middleware.unshift(path)\n      path = null\n    }\n\n    middleware.forEach((m) => {\n      const router = /** @type {Router} */ (m.router)\n      if (router) {\n        router.stack.forEach((nestedLayer) => {\n          if (path) nestedLayer.setPrefix(/** @type {string} */ (path))\n          if (this.opts.prefix) nestedLayer.setPrefix(this.opts.prefix)\n          this.stack.push(nestedLayer)\n        })\n\n        if (this.params) {\n          Object.keys(this.params).forEach((key) => {\n            router.param(key, this.params[key])\n          })\n        }\n      } else {\n        this.register(/** @type {string} */ (path || '(.*)'), [], m, { end: false, ignoreCaptures: !hasPath })\n      }\n    })\n\n    return this\n  }\n  get routes() {\n    return this.middleware\n  }\n  /**\n   * Returns router middleware which dispatches a route matching the request.\n   */\n  middleware() {\n    /**\n     * @type {!_idio.Middleware}\n     */\n    const dispatch = (ctx, next) => {\n      debug('%s %s', ctx.method, ctx.path)\n\n      const path = this.opts.routerPath || ctx.routerPath || ctx.path\n      const matched = this.match(path, ctx.method)\n      let layerChain\n\n      if (ctx.matched) {\n        ctx.matched.push(matched.path)\n      } else {\n        ctx.matched = matched.path\n      }\n\n      ctx.router = this\n\n      if (!matched.route) return next()\n\n      const matchedLayers = matched.pathAndMethod\n      const mostSpecificLayer = matchedLayers[matchedLayers.length - 1]\n      ctx._matchedRoute = mostSpecificLayer.path\n      if (mostSpecificLayer.name) {\n        ctx._matchedRouteName = mostSpecificLayer.name\n      }\n\n      layerChain = matchedLayers.reduce((acc, layer) => {\n        /**\n         * @type {!_idio.Middleware}\n         */\n        const link = (c, n) => {\n          c.captures = layer.captures(path)\n          c.params = layer.params(path, c.captures, c.params)\n          c.routerName = layer.name\n          return n()\n        }\n        acc.push(link)\n        return acc.concat(layer.stack)\n      }, [])\n\n      return compose(layerChain)(ctx, next)\n    }\n\n    dispatch.router = this\n\n    return dispatch\n  }\n}\n\nRouter['url'] = Router.url // eslint-disable-line\n\nexport const methods = METHODS.map((m) => m.toLowerCase())\n\n;[...methods, 'all'].forEach((method) => {\n  /**\n   * A verb.\n   * @this {_goa.Router}\n   */\n  function m(name, path, ...middleware) {\n    let mw\n\n    if (typeof path == 'string' || path instanceof RegExp) {\n      mw = middleware\n    } else {\n      mw = [path, ...middleware]\n      path = name\n      name = null\n    }\n\n    this.register(path, method == 'all' ? methods : [method], mw, {\n      name,\n    })\n\n    return this\n  }\n  Router.prototype[method] = m\n  if (method == 'delete') {\n    Router.prototype['del'] = m\n  }\n})\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').RouterConfig} _goa.RouterConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').AllowedMethodsOptions} _goa.AllowedMethodsOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Router} _goa.Router\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/idio').Middleware} _idio.Middleware\n */","import Context from '@goa/goa/src/context'\n\n/**\n * @implements {_idio.Context}\n */\nexport default class IdioContext extends Context {\n  constructor() {\n    super()\n    this.session = undefined\n    this.sessionOptions = undefined\n    this.compress = null\n    // router\n    this._matchedRoute = null\n    this._matchedRouteName = null\n    this.params = null\n    this.router = null\n  }\n}","/**\n * @param {!http.Server} server\n */\nexport const enableDestroy = (server) => {\n  /** @type {Object<string, !net.Socket>} */\n  const connections = {}\n  server.on('connection', (con) => {\n    const { remoteAddress, remotePort } = con\n    const k = [remoteAddress, remotePort].join(':')\n    connections[k] = con\n    con.on('close', () => {\n      delete connections[k]\n    })\n  })\n  server.destroy = async () => {\n    await new Promise(r => {\n      server.close(r)\n      for (let k in connections) {\n        connections[k].destroy()\n      }\n    })\n  }\n}\n","import setupMiddleware from './setup-middleware'\nimport Goa from '@goa/goa'\nimport Router from '@goa/router'\n// import Debug from '@idio/debug'\nimport erotic from 'erotic'\nimport IdioContext from './idio'\nimport { enableDestroy } from './lib'\n\n/**\n * @type {_idio.idio}\n */\nasync function $idio(middlewareConfig = {}, config = {}) {\n  const {\n    port = 5000,\n    host = '0.0.0.0',\n    router: routerConfig,\n  } = config\n\n  // close all connections when running nodemon\n  const sigListener = () => {\n    app.destroy().then(() => {\n      process.kill(process.pid, 'SIGUSR2')\n    })\n  }\n  process.once('SIGUSR2', sigListener)\n\n  const appMeta = await createApp(middlewareConfig, routerConfig)\n  const { app, middleware, router } = appMeta\n\n  const server = await listen(app, port, host)\n\n  enableDestroy(server)\n  app.destroy = async () => {\n    await server.destroy()\n    process.removeListener('SIGUSR2', sigListener)\n  }\n  const { port: p } = server.address()\n\n  const url = `http://localhost:${p}`\n\n  return { app, middleware, url, server, router }\n}\n\nexport default $idio\n\n/**\n * @param {!_idio.MiddlewareConfig} [middlewareConfig]\n * @param {!_goa.RouterConfig} [routerConfig]\n */\nexport const createApp = async (middlewareConfig = {}, routerConfig = {}) => {\n  const app = new Goa({\n    Context: IdioContext,\n  })\n\n  const middleware = await setupMiddleware(middlewareConfig, app)\n\n  if (app.env == 'production') {\n    app.proxy = true\n  }\n\n  const router = new Router(routerConfig)\n\n  return {\n    app,\n    middleware,\n    router,\n  }\n}\n\n/**\n * @param {_goa.Application} app\n * @param {number} [port]\n * @param {string} [hostname='0.0.0.0']\n * @return {!Promise<!http.Server>}\n */\nfunction listen(app, port, hostname = '0.0.0.0') {\n  const cb = erotic(true)\n  return new Promise((r, j) => {\n    const ec = (err) => {\n      const e = cb(err)\n      j(e)\n    }\n    /** @type {http.Server} */\n    const server = app.listen(port, hostname, () => {\n      r(server)\n      app.removeListener('error', ec)\n    }).once('error', ec)\n  })\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').Server} http.Server\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('net').Socket} net.Socket\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _idio.Config\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').MiddlewareConfig} _idio.MiddlewareConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Idio} _idio.Idio\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Application} _goa.Application\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/router').RouterConfig} _goa.RouterConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/api').idio} _idio.idio\n */\n","import '../types/modules/externs'\nimport '../types/options/externs'\nimport '../types/externs'\nimport '../types/externs/'\nimport startApp, { Router, createApp, compose, httpErrors, mount, Keygrip } from './'\n\nmodule.exports = {\n  '_createApp': createApp,\n  '_compose': compose,\n  '_startApp': startApp,\n  '_httpErrors': httpErrors,\n  '_mount': mount,\n  '_Keygrip': Keygrip,\n  '_Router': Router,\n}"],
"names":["compose","middleware","Array","isArray","TypeError","fn","context","next","dispatch","i","index","Promise","reject","Error","length","resolve","bind","err","$jscompDefaultExport","codes","populateStatusesMap","redirect","empty","statuses","status","arr","Object","keys","statusCodes","forEach","code","message","s","Number","toLowerCase","push","n","parseInt","isNaN","createError","args","msg","props","arg","statusCode","process","emitWarning","HttpError","String","charAt","captureStackTrace","expose","key","headers","CodeError","name","toIdentifier","className","match","str","split","map","token","slice","toUpperCase","join","replace","assert","equal","tty","format","util","inspect","val","options","type","parse","isFinite","long","msAbs","Math","abs","ms","d","plural","h","m","round","JSON","stringify","exec","parseFloat","y","w","formatThousandsRegExp","formatDecimalsRegExp","pow","value","mag","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","unit","toFixed","colors","c","string","color","cc","v","inspectOpts","env","filter","test","reduce","obj","prop","substring","_","k","NodeEnv","init","debug","log","stderr","write","formatArgs","namespace","diff","uc","colorCode","prefix","toISOString","Date","save","namespaces","load","useColors","isatty","fd","formatters","o","opts","O","f","getDebug","enabled","curr","prevTime","prev","coerce","unshift","formatter","call","splice","apply","createDebug","instances","selectColor","hash","charCodeAt","enable","names","skips","len","RegExp","substr","instance","Debug","indexOf","setup","destroy","debug.destroy","extend","debug.extend","ns","delimiter","newDebug","stack","node","mount","app","path","p","newPath","trailingSlash","downstream","ctx","upstream","createHmac","_crypto","pseudoRandomBytes","randomBytes","sign","data","algorithm","encoding","update","digest","x","constantTimeCompare","val1","val2","result","Keygrip","l","sig","nodeRNG","byteToHex","j","toString","v4","buffer","offset","random","rngFn","rng","rnds","ii","buf","Session","sessionContext","_expire","_requireSave","_sessCtx","_ctx","sessionOptions","maxAge","_maxAge","isNew","toJSON","commit","decode","body","Buffer","from","json","encode","initFromExternal","externalKey","get","cookies","store","rolling","valid","create","prevHash","session","sess","_shouldSaveSession","renew","expire","now","ContextSession","ContextStore","initFromCookie","cookie","SyntaxError","set","response","emit","event","setImmediate","genid","beforeSave","remove","reason","changed","optsExternalKey","ONE_DAY","CONTEXT_SESSION","Symbol","formatOpts","extendContext","autoCommit","overwrite","httpOnly","signed","prototype","opts.genid","hasOwnProperty","defineProperties","configurable","FIELD_NAME_REGEXP","append","header","field","fields","vals","includes","fld","end","list","start","Cors","config","allowMethods","exposeHeaders","allowHeaders","credentials","keepHeadersOnError","Origin","cors","requestOrigin","vary","origin","headersSet","method","errHeadersSet","varyWithOrigin","Vary","assign","stream","Readable","Writable","events","EventEmitter","jsmemcmp","buf1","pos1","buf2","pos2","num","_sbmh_feed","needle","_needle","needle_len","pos","_lookbehind_size","last_needle_char","occ","_occ","lookbehind","_lookbehind","_sbmh_lookup_char","res","ch","_sbmh_memcmp","matches","_bufpos","bytesToCutOff","copy","SBMH","maxMatches","Infinity","chunk","isBuffer","chlen","r","PartStream","B_DCRLF","RE_CRLF","RE_HDR","HeaderParser","cfg","maxHeaderPairs","MAX_HEADER_PAIRS","nread","maxed","npairs","finished","ss","StreamSearch","on","isMatch","MAX_HEADER_SIZE","_finish","lines","modded","reset","B_ONEDASH","B_CRLF","EMPTY_FN","_oninfo","shouldWriteMore","_part","_justMatched","_dashes","DASH","_events","trailer","_finished","_parts","_realFinish","_partOpts","_read","this._part._read","_unpause","ev","_isPreamble","_ignore","_inHeader","_ignoreData","_pause","_hparser","_cb","cb","Dicer","headerFirst","boundary","setBoundary","_bparser","_headerFirst","_firstWrite","partHwm","highWaterMark","arguments","nextTick","resume","TextDecoder","require","RE_ENCODED","encodedReplacer","byte","fromCharCode","parseParams","state","charset","inquote","escaping","tmp","decodeText","text","destEncoding","ret","textEncoding","e","HEX","RE_PLUS","Decoder","basename","getLimits","limits","fieldSizeLimit","fieldNameSizeLimit","fileSizeLimit","filesLimit","fieldsLimit","partsLimit","Busboy","_done","_parser","hitPartsLimit","hitFilesLimit","hitFieldsLimit","parseHeaders","parsed","matched","Type","TYPES","detect","parsedConType","fileHwm","defCharset","preservePath","RE_BOUNDARY","RE_FIELD","RE_CHARSET","RE_FILENAME","RE_NAME","Multipart","boy","checkFinished","nends","find","t","curFile","nfiles","nfields","curField","_needDrain","_nparts","_boy","parser","parserCfg","headerPairs","onPart","part","removeListener","skipPart","removeAllListeners","contype","fieldname","nsize","filename","file","FileStream","file._read","onData","extralen","truncated","onEnd","b","concat","_readableState","sync","writable","UrlEncoded","_hitLimit","decoder","_fields","_state","_checkingBytes","_bytesVal","_bytesKey","_val","_key","_valTrunc","_keyTrunc","idxeq","idxamp","keyTrunc","BusBoy","_BusBoy","Urlencoded","reFirstKey","reDigitPath","reNormalPath","parsePath","failure","last","firstKey","tail","steps","nextType","valueType","setLastValue","step","currentValue","entryValue","setValue","item","appendField","insertPlaceholder","placeholder","strategy","req","files","removePlaceholder","idx","replacePlaceholder","FileAppender","errorMessages","FormDataError","decrement","awaitZero","onceZero","once","Counter","testMultipart","contentType","startsWith","makeMiddleware","multerMiddleware","storage","fileFilter","fileStrategy","busboy","appender","pendingWrites","uploadedFiles","busboyFinished","fieldnameTruncated","valueTruncated","FormDataError$$module$node_modules$$multipart$form_data$src$lib$error.create","fieldNameSize","mimetype","originalname","aborting","tryCancel","info","_handleFile","fileInfo","error","pipe","_removeFile","errors","removeUploadedFiles","unpipe","acc","accRes","homedir","os","tmpdir","dirname","extname","isAbsolute","normalize","relative","sep","ReadStream","fs","createReadStream","createWriteStream","exists","lstat","mkdirSync","readdir","rmdir","stat","unlink","getStackSegment","oneLine","splitStack","items","getEntryStack","transparent","stackSegment","getCallerFromArguments","caller","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","re","source","pathMatches","trim","p1","makeCallback","entryCaller","entryStack","shadow","messageOrError","errorStack","calleeStackLine","isError","stackMessage","stackHeading","properties","erotic","checkArgumentIndex","makePromise","resolveValue","er","fnLength","allArgs","lstatFiles","dirPath","dirContent","readFiles","relativePath","ls","all","isDirectory","lstatRes","isNotDirectory","readDirStructure","ignore","dir","lsr","directories","notDirectories","current","isFile","isSymbolicLink","dirs","rel","structure","content","removeFile","removeDir","filesFullPaths","dirsFullPaths","rm","ensurePathSync","makeSync","parentDir","getFilename","raw","DiskStorage","destination","getDestination","this.getDestination","outStream","bytesWritten","pipeError","streamA","streamB","Catchment","binary","rs","proxyError","wrap","_caughtData","_promise","callback","collect","readable","promise","MemoryStorage","allowAll","filesLeft","maxCount","wrappedFileFilter","MultipartFormData","dest","conf","UP_PATH_REGEXP","resolvePath","rootPath","root","cwd","fsExists","fsStat","send","maxage","immutable","hidden","extensions","brotli","gzip","setHeaders","decodeURIComponent","throw","encodingExt","acceptsEncodings","removeHeader","ext","stats","notfound","size","mtime","toUTCString","directives","defer","serve","done","db","COMPRESSIBLE_TYPE_REGEXP","EXTRACT_TYPE_REGEXP","compressible","mime","isJSON","Z_SYNC_FLUSH","zlib","kb","mb","gb","tb","pb","parseRegExp","bytes","results","floatValue","floor","encodingMethods","createGzip","deflate","createDeflate","Compress","threshold","headersSent","compress","request","Stream","roots","Mount","flush","ses","oh","found","a","FormData","initMiddleware","use","middlewareConstructor","setupMiddleware","middlewareConfig","installed","toStr","fnToStr","Function","isFnRegex","hasToStringTag","toStringTag","getProto","getPrototypeOf","generatorFunc","GeneratorFunction","METHODS","http","OutgoingMessage","createServer","first","stuff","cleanup","cleanups","ee","thunk","listener","cancel","onevent","arg1","onFinished","socket","complete","u","attached","__onFinished","queue","createListener","attachFinishedListener","onFinish","eeMsg","eeSocket","onSocket","close","onOpenClose","TEXT_TYPE_REGEXP","types","populateMaps","lookup","preference","exts","to","PARAM_REGEXP","QESC_REGEXP","TYPE_REGEXP","getHeader","ContentType","lastIndex","parameters","typeis","expected","actualParts","expectedParts","typeofrequest","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REGEXP","NON_LATIN1_REGEXP","QUOTE_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","contentDisposition","fallback","params","createparams","ContentDisposition","isQuotedString","fallbackName","hasFallback","param","sort","encodeURIComponent","encoded","pencode","char","listeners","_update","cache","max","_cache","Map","LRU","getNow","expired","checkEntry","entry","cacheKeys","add","Set","entries","typeLRUCache","matchHtmlRegExp","fieldContentRegExp","sameSiteRegExp","toHeader","expires","domain","sameSite","secure","Cookie","attrs","Cookies","sigName","remote","proto","encrypted","connection","rest","pushCookie","setHeader","simpleCharsetRegExp","parseAcceptCharset","accept","accepts","q","Boolean","preferredCharsets","provided","isQuality","compareSpecs","getFullCharset","priorities","priority","spec","simpleEncodingRegExp","parseAcceptEncoding","hasIdentity","minQuality","specify","min","preferredEncodings","getFullEncoding","getPriority","getEncoding","simpleLanguageRegExp","parseAcceptLanguage","language","parseLanguage","suffix","full","preferredLanguages","getFullLanguage","getLanguage","simpleMediaTypeRegExp","parseAccept","quoteCount","mediaType","parseMediaType","subtype","kvps","splitKeyValuePair","pair","every","preferredMediaTypes","getFullType","getType","count","Negotiator","available","charsets","encodings","languages","mediaTypes","Accepts","negotiator","mimes","extToMime","validMime","getter","target","getters","__defineGetter__","setter","setters","__defineSetter__","Delegator","methods","URL","url","Url","isIP","net","querystring","parseurl","_parsedUrl","pathname","query","search","_raw","CACHE_CONTROL_NO_CACHE_REGEXP","fresh","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","etag","etagStale","lastModified","modifiedStale","parseHttpDate","date","timestamp","NaN","IP","Request","originalUrl","_querycache","_accept","memoizedURL","protocol","host","qsParse","qsStringify","proxy","httpVersionMajor","hostname","parseContentType","ips","remoteAddress","_ip","subdomainOffset","reverse","lang","referrer","referer","custom","COOKIES","Context","respond","idempotent","is","acceptsCharsets","acceptsLanguages","flushHeaders","attachment","ip","stale","subdomains","href","headerSent","httpAssert","getHeaderNames","byteLength","_cookies","Delegate","access","Response","_explicitStatus","_body","getHeaders","isInteger","statusMessage","original","setType","ensureErrorHandler","onerror","trunc","alt","html","escape","mimeType","handleRequest","Application","NODE_ENV","C","silent","server","listen","_name","listenerCount","createContext","console","lexer","tokens","pattern","prefixes","defaultPattern","escapeString","tryConsume","mustConsume","consumeText","modifier","open","compile","tokensToFunction","reFlags","flags","validate","optional","repeat","segment","typeOfMessage","sensitive","arrayToRegexp","paths","parts","pathToRegexp","tokensToRegexp","strict","endsWith","route","mod","endToken","isEndDelimited","groups","setPrefix","paramNames","regexp","pathToRegExp","Layer","captures","ignoreCaptures","toPath","some","replaced","mw","Router","notImplemented","methodNotAllowed","allowed","allowedArr","notImplementedThrowable","notAllowedThrowable","register","routes","layers","layer","pathAndMethod","hasPath","router","nestedLayer","routerPath","matchedLayers","mostSpecificLayer","_matchedRoute","_matchedRouteName","layerChain","link","routerName","IdioContext","enableDestroy","connections","con","remotePort","server.destroy","createApp","routerConfig","Goa","port","ec","module","exports","$idio","sigListener","then","kill","pid","appMeta","app.destroy","address","httpErrors"]
}
